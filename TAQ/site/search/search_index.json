{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue ! Bienvenue sur TAQ , le site d\u00e9di\u00e9 aux cours de NSI (Num\u00e9rique et Sciences Informatiques) et SNT (Sciences Num\u00e9riques et Technologie) de M.Quertier. \u00c0 propos des mati\u00e8res NSI (Num\u00e9rique et Sciences Informatiques) : Cette mati\u00e8re est destin\u00e9e aux \u00e9l\u00e8ves de Premi\u00e8re et Terminale. Elle permet de d\u00e9couvrir la programmation, les structures de donn\u00e9es, les algorithmes et la logique informatique. L\u2019objectif est de d\u00e9velopper la capacit\u00e9 \u00e0 r\u00e9soudre des probl\u00e8mes avec les outils num\u00e9riques . SNT (Sciences Num\u00e9riques et Technologie) : Cette mati\u00e8re est enseign\u00e9e en Seconde et permet d\u2019explorer les grands concepts du num\u00e9rique : r\u00e9seaux, web, donn\u00e9es, cybers\u00e9curit\u00e9, algorithmes et objets connect\u00e9s. L\u2019objectif est de comprendre le fonctionnement du monde num\u00e9rique qui nous entoure . Organisation du site Ce site centralise tous vos cours pour chaque niveau : \ud83d\udd39 SNT - Secondes \ud83d\udd38 NSI - Premi\u00e8res \ud83d\udd3a NSI - Terminales","title":"Accueil"},{"location":"#bienvenue","text":"Bienvenue sur TAQ , le site d\u00e9di\u00e9 aux cours de NSI (Num\u00e9rique et Sciences Informatiques) et SNT (Sciences Num\u00e9riques et Technologie) de M.Quertier.","title":"Bienvenue !"},{"location":"#a-propos-des-matieres","text":"NSI (Num\u00e9rique et Sciences Informatiques) : Cette mati\u00e8re est destin\u00e9e aux \u00e9l\u00e8ves de Premi\u00e8re et Terminale. Elle permet de d\u00e9couvrir la programmation, les structures de donn\u00e9es, les algorithmes et la logique informatique. L\u2019objectif est de d\u00e9velopper la capacit\u00e9 \u00e0 r\u00e9soudre des probl\u00e8mes avec les outils num\u00e9riques . SNT (Sciences Num\u00e9riques et Technologie) : Cette mati\u00e8re est enseign\u00e9e en Seconde et permet d\u2019explorer les grands concepts du num\u00e9rique : r\u00e9seaux, web, donn\u00e9es, cybers\u00e9curit\u00e9, algorithmes et objets connect\u00e9s. L\u2019objectif est de comprendre le fonctionnement du monde num\u00e9rique qui nous entoure .","title":"\u00c0 propos des mati\u00e8res"},{"location":"#organisation-du-site","text":"Ce site centralise tous vos cours pour chaque niveau : \ud83d\udd39 SNT - Secondes \ud83d\udd38 NSI - Premi\u00e8res \ud83d\udd3a NSI - Terminales","title":"Organisation du site"},{"location":"Premieres/Premieres/","text":"NSI - Premi\u00e8res Exercices \ud83d\udd38 Exercices Python Chapitres \ud83d\udd39 1 - Types de base : Entiers \ud83d\udd39 2 - Types de base : Flottants \ud83d\udd39 3 - Types de base : Bool\u00e9ens \ud83d\udd39 4 - Types de base : Cha\u00eenes de caract\u00e9res","title":"Accueil"},{"location":"Premieres/Premieres/#nsi-premieres","text":"","title":"NSI - Premi\u00e8res"},{"location":"Premieres/Premieres/#exercices","text":"\ud83d\udd38 Exercices Python","title":"Exercices"},{"location":"Premieres/Premieres/#chapitres","text":"\ud83d\udd39 1 - Types de base : Entiers \ud83d\udd39 2 - Types de base : Flottants \ud83d\udd39 3 - Types de base : Bool\u00e9ens \ud83d\udd39 4 - Types de base : Cha\u00eenes de caract\u00e9res","title":"Chapitres"},{"location":"Premieres/exo_python/","text":"S\u00e9rie d\u2019exercices sur les boucles 1. Boucles born\u00e9es Affichage de nombres \u00c9crire un programme qui affiche les nombres de 1 \u00e0 10. Modifier le programme pour afficher uniquement les nombres pairs entre 1 et 20. Somme et produit Demander un entier n \u00e0 l\u2019utilisateur et afficher la somme des entiers de 1 \u00e0 n . Bonus : afficher aussi le produit des entiers de 1 \u00e0 n . Tables de multiplication \u00c9crire un programme qui affiche la table de multiplication d\u2019un nombre donn\u00e9 par l\u2019utilisateur (exemple : table de 7). Carr\u00e9 d\u2019\u00e9toiles Demander un entier n et afficher un carr\u00e9 de n \u00d7 n \u00e9toiles. Exemple pour n=3 : *** *** *** Triangle d\u2019\u00e9toiles M\u00eame chose mais en triangle : * ** *** S\u00e9rie de Fibonacci Afficher les n premiers termes de la suite de Fibonacci : 0, 1, 1, 2, 3, 5, 8\u2026 Petit jeu du d\u00e9 Simuler 10 lancers d\u2019un d\u00e9 \u00e0 6 faces. Afficher les r\u00e9sultats. Bonus : compter combien de fois le 6 est sorti. 2. Boucles non born\u00e9es Compte \u00e0 rebours Demander \u00e0 l\u2019utilisateur un nombre entier positif n . Afficher un compte \u00e0 rebours de n jusqu\u2019\u00e0 0 inclus, en utilisant une boucle while . Mot de passe Cr\u00e9er une variable contenant un mot de passe. Demander \u00e0 le l'utilisateur. Tant que le mot de passe saisi est incorrect, redemander \u00e0 l\u2019utilisateur. Quand le bon mot de passe est saisi, afficher \"Acc\u00e8s autoris\u00e9\" . Somme jusqu\u2019\u00e0 z\u00e9ro L\u2019utilisateur saisit une suite de nombres entiers. La saisie s\u2019arr\u00eate quand l\u2019utilisateur entre 0 . Le programme affiche alors la somme de tous les nombres saisis (hors le z\u00e9ro final). Nombre myst\u00e8re Le programme choisit un nombre al\u00e9atoire entre 1 et 100. L\u2019utilisateur doit le deviner en proposant des valeurs. Le programme indique \"trop grand\" ou \"trop petit\" jusqu\u2019\u00e0 ce que la r\u00e9ponse soit trouv\u00e9e. Puissance Demander deux entiers a et b . Calculer a^b \u00e0 l\u2019aide d\u2019une boucle (sans utiliser ** ). Listes Ces exercices sont tir\u00e9s du site France-IOI . Exercice 1 : Quantit\u00e9 d\u2019ingr\u00e9dient Un onguent n\u00e9cessite 10 ingr\u00e9dients, avec les quantit\u00e9s suivantes (en grammes) : 500, 180, 650, 25, 666, 42, 421, 1, 370, 211 \u00c9crivez un programme qui lit un entier (num\u00e9ro d\u2019ingr\u00e9dient entre 0 et 9) et affiche la quantit\u00e9 correspondante. Exercice 2 : Calcul du co\u00fbt des achats Les prix au kilo de 10 ingr\u00e9dients sont : 9, 5, 12, 15, 7, 42, 13, 10, 1, 20 Votre programme lit 10 entiers (poids en kilos \u00e0 acheter pour chaque ingr\u00e9dient) et calcule le co\u00fbt total. Exercice 3 : Gestion de stock On g\u00e8re 10 produits dont le stock initial est nul. La premi\u00e8re ligne contient un entier nbOperations . Suivent nbOperations paires (numProduit, quantit\u00e9). quantit\u00e9 positive = achat quantit\u00e9 n\u00e9gative = vente Affichez le stock final de chaque produit (10 entiers). Exercice 4 : Produits pr\u00e9f\u00e9r\u00e9s On conna\u00eet les produits pr\u00e9f\u00e9r\u00e9s d\u2019un certain nombre de personnes. Entr\u00e9es : - nbProduits et nbPersonnes - puis nbPersonnes entiers (num\u00e9ros des produits pr\u00e9f\u00e9r\u00e9s). Affichez pour chaque produit, le nombre de personnes qui le pr\u00e9f\u00e8rent. Exercice 5 : \u00c9quilibrage de charrettes On lit un entier nbCharrettes , puis nbCharrettes nombres d\u00e9cimaux repr\u00e9sentant leur poids. Affichez, pour chaque charrette, le poids \u00e0 ajouter (ou retirer) pour que toutes transportent la m\u00eame charge, sans changer le total.","title":"S\u00e9rie d\u2019exercices sur les boucles"},{"location":"Premieres/exo_python/#serie-dexercices-sur-les-boucles","text":"","title":"S\u00e9rie d\u2019exercices sur les boucles"},{"location":"Premieres/exo_python/#1-boucles-bornees","text":"Affichage de nombres \u00c9crire un programme qui affiche les nombres de 1 \u00e0 10. Modifier le programme pour afficher uniquement les nombres pairs entre 1 et 20. Somme et produit Demander un entier n \u00e0 l\u2019utilisateur et afficher la somme des entiers de 1 \u00e0 n . Bonus : afficher aussi le produit des entiers de 1 \u00e0 n . Tables de multiplication \u00c9crire un programme qui affiche la table de multiplication d\u2019un nombre donn\u00e9 par l\u2019utilisateur (exemple : table de 7). Carr\u00e9 d\u2019\u00e9toiles Demander un entier n et afficher un carr\u00e9 de n \u00d7 n \u00e9toiles. Exemple pour n=3 : *** *** *** Triangle d\u2019\u00e9toiles M\u00eame chose mais en triangle : * ** *** S\u00e9rie de Fibonacci Afficher les n premiers termes de la suite de Fibonacci : 0, 1, 1, 2, 3, 5, 8\u2026 Petit jeu du d\u00e9 Simuler 10 lancers d\u2019un d\u00e9 \u00e0 6 faces. Afficher les r\u00e9sultats. Bonus : compter combien de fois le 6 est sorti.","title":"1. Boucles born\u00e9es"},{"location":"Premieres/exo_python/#2-boucles-non-bornees","text":"Compte \u00e0 rebours Demander \u00e0 l\u2019utilisateur un nombre entier positif n . Afficher un compte \u00e0 rebours de n jusqu\u2019\u00e0 0 inclus, en utilisant une boucle while . Mot de passe Cr\u00e9er une variable contenant un mot de passe. Demander \u00e0 le l'utilisateur. Tant que le mot de passe saisi est incorrect, redemander \u00e0 l\u2019utilisateur. Quand le bon mot de passe est saisi, afficher \"Acc\u00e8s autoris\u00e9\" . Somme jusqu\u2019\u00e0 z\u00e9ro L\u2019utilisateur saisit une suite de nombres entiers. La saisie s\u2019arr\u00eate quand l\u2019utilisateur entre 0 . Le programme affiche alors la somme de tous les nombres saisis (hors le z\u00e9ro final). Nombre myst\u00e8re Le programme choisit un nombre al\u00e9atoire entre 1 et 100. L\u2019utilisateur doit le deviner en proposant des valeurs. Le programme indique \"trop grand\" ou \"trop petit\" jusqu\u2019\u00e0 ce que la r\u00e9ponse soit trouv\u00e9e. Puissance Demander deux entiers a et b . Calculer a^b \u00e0 l\u2019aide d\u2019une boucle (sans utiliser ** ).","title":"2. Boucles non born\u00e9es"},{"location":"Premieres/exo_python/#listes","text":"Ces exercices sont tir\u00e9s du site France-IOI .","title":"Listes"},{"location":"Premieres/exo_python/#exercice-1-quantite-dingredient","text":"Un onguent n\u00e9cessite 10 ingr\u00e9dients, avec les quantit\u00e9s suivantes (en grammes) : 500, 180, 650, 25, 666, 42, 421, 1, 370, 211 \u00c9crivez un programme qui lit un entier (num\u00e9ro d\u2019ingr\u00e9dient entre 0 et 9) et affiche la quantit\u00e9 correspondante.","title":"Exercice 1 : Quantit\u00e9 d\u2019ingr\u00e9dient"},{"location":"Premieres/exo_python/#exercice-2-calcul-du-cout-des-achats","text":"Les prix au kilo de 10 ingr\u00e9dients sont : 9, 5, 12, 15, 7, 42, 13, 10, 1, 20 Votre programme lit 10 entiers (poids en kilos \u00e0 acheter pour chaque ingr\u00e9dient) et calcule le co\u00fbt total.","title":"Exercice 2 : Calcul du co\u00fbt des achats"},{"location":"Premieres/exo_python/#exercice-3-gestion-de-stock","text":"On g\u00e8re 10 produits dont le stock initial est nul. La premi\u00e8re ligne contient un entier nbOperations . Suivent nbOperations paires (numProduit, quantit\u00e9). quantit\u00e9 positive = achat quantit\u00e9 n\u00e9gative = vente Affichez le stock final de chaque produit (10 entiers).","title":"Exercice 3 : Gestion de stock"},{"location":"Premieres/exo_python/#exercice-4-produits-preferes","text":"On conna\u00eet les produits pr\u00e9f\u00e9r\u00e9s d\u2019un certain nombre de personnes. Entr\u00e9es : - nbProduits et nbPersonnes - puis nbPersonnes entiers (num\u00e9ros des produits pr\u00e9f\u00e9r\u00e9s). Affichez pour chaque produit, le nombre de personnes qui le pr\u00e9f\u00e8rent.","title":"Exercice 4 : Produits pr\u00e9f\u00e9r\u00e9s"},{"location":"Premieres/exo_python/#exercice-5-equilibrage-de-charrettes","text":"On lit un entier nbCharrettes , puis nbCharrettes nombres d\u00e9cimaux repr\u00e9sentant leur poids. Affichez, pour chaque charrette, le poids \u00e0 ajouter (ou retirer) pour que toutes transportent la m\u00eame charge, sans changer le total.","title":"Exercice 5 : \u00c9quilibrage de charrettes"},{"location":"Premieres/Chapitres/Types_de_base_bool/","text":"Les Bool\u00e9ens Introduction En informatique, en plus des nombres, il existe un type fondamental : le type bool\u00e9en . Il sert \u00e0 repr\u00e9senter des valeurs logiques : Vrai (not\u00e9 True ) Faux (not\u00e9 False ) Ce type porte le nom de George Boole , math\u00e9maticien du XIX\u1d49 si\u00e8cle, qui a formalis\u00e9 l\u2019alg\u00e8bre logique. C\u2019est un type essentiel en programmation car il permet de prendre des d\u00e9cisions et de contr\u00f4ler le d\u00e9roulement d\u2019un programme. Valeurs bool\u00e9ennes En Python (et dans la plupart des langages), on a deux constantes : True \u2192 repr\u00e9sente le vrai False \u2192 repr\u00e9sente le faux Ces deux valeurs peuvent aussi \u00eatre obtenues \u00e0 partir de comparaisons : 3 < 5 # True 10 == 2 # False Comparaisons Les bool\u00e9ens apparaissent tr\u00e8s souvent \u00e0 la suite de comparaisons. Voici les principaux op\u00e9rateurs en Python : Op\u00e9rateur Signification Exemple 1 R\u00e9sultat 1 Exemple 2 R\u00e9sultat 2 == \u00e9gal \u00e0 5 == 5 True 3 == 5 False != diff\u00e9rent de 3 != 5 True 5 != 5 False < strictement inf\u00e9rieur 5 < 10 True 5 < 5 False <= inf\u00e9rieur 5 <= 10 True 5 <= 5 True > strictement sup\u00e9rieur 5 > 10 False 5 > 5 False >= sup\u00e9rieur 5 >= 10 False 5 >= 5 True Ces comparaisons ne sont pas exclusives aux entiers, on peut les appliquer sur tous les types naturels : Exemples : 3.5 < 8.2 = True \"abc\" > \"def\" = False \"a\" > \"A\" = True False != False = False False < True = True Exercice \u00c9value mentalement chaque comparaison ci-dessous puis v\u00e9rifie avec Python. \u00c9cris le r\u00e9sultat attendu ( True ou False ) dans la colonne vide. Expression R\u00e9sultat attendu \"z\" < \"a\" \"abc\" <= \"abd\" \"chat\" <= \"Chat\" \"bonjour\" != \"bonsoir\" 7 >= 7 12 != 15 3.14 == 3 10 < 2 -5 < 0 False != True True == (5 < 3) Logique bool\u00e9enne Les op\u00e9rateurs logiques Le langage Python propose trois op\u00e9rateurs logiques principaux : Op\u00e9rateur Syntaxe python Syntaxe logique Signification Exemple R\u00e9sultat NON not \\(\\overline{a}\\) (non a) inverse la valeur not True False ET and . vrai si les deux sont vrais True and False False OU or + vrai si au moins un est vrai True or False True Il existe aussi un op\u00e9rateur important qui n'est pas naturel en python : OU EXCLUSIF xor vrai si l'un est faux et l'autre est vraie True xor True False Exemple : a = True b = False print(not a) # False print(a and b) # False print(a or b) # True Exercice \u00c9value mentalement chaque expression bool\u00e9enne puis v\u00e9rifie avec Python. \u00c9cris le r\u00e9sultat attendu ( True ou False ) dans la colonne vide. Expression R\u00e9sultat attendu not (3 < 5) (7 >= 7) and (2 != 3) (3.14 == 3) or (10 < 20) (\"z\" < \"a\") or (4 == 4) not (False) and (5 > 2) (6 <= 6) xor (2 > 10) (True and (8 != 8)) or (1 < 2) not (\"abc\" == \"def\") (False or (9 >= 9)) and (3 < 1) (7 != 7) xor (not (2 < 5)) (\"chat\" < \"chien\") or (not (4 <= 4)) ((5 > 1) and (2 == 2)) or (False) Les tables de v\u00e9rit\u00e9 a b a . b a + b ! a a XOR b False False False False True False False True False True True True True False False True False True True True True True False False Exercice Compl\u00e9tez ces tables de v\u00e9rit\u00e9. a b a.b \\(\\overline{a.b}\\) a+b \\(\\overline{a+b}\\) False False -- -- -- -- False True -- -- -- -- True False -- -- -- -- True True -- -- -- -- a b \\(\\overline{a}\\) \\(\\overline{b}\\) \\(\\overline{a}\\) + \\(\\overline{b}\\) \\(\\overline{a}\\) . \\(\\overline{b}\\) False False -- -- -- -- False True -- -- -- -- True False -- -- -- -- True True -- -- -- -- On remarque que : \\(\\overline{a+b} = \\overline a . \\overline b\\) \\(\\overline{a.b} = \\overline a + \\overline b\\) C'est ce qu'on appelle les lois de Morgan . Les conditions En programmation, les conditions permettent de prendre des d\u00e9cisions : le programme ex\u00e9cute certaines instructions seulement si une condition est vraie. En Python, cela s\u2019\u00e9crit avec les mots-cl\u00e9s if , elif et else . Structure de base if condition1: # instructions ex\u00e9cut\u00e9es si la condition1 est vraie elif condition2 : # instructions ex\u00e9cut\u00e9es si la condition1 est fausse mais que la condition2 est vraie # on peut encha\u00eener plusieurs elif else: # instructions ex\u00e9cut\u00e9es si les conditions 1 et 2 sont fausses On peut le lire ainsi : Si condition1 est vraie, je fais \u00e7a ... Sinon, si condition2 est vraie, je fais \u00e7a ... Dans tous les autre cas, je fais \u00e7a ... Exemple : age = 15 if age >= 18: print(\"Majeur\") else: print(\"Mineur\") Circuits logiques Jusqu\u2019ici, nous avons vu la logique bool\u00e9enne dans le langage Python . En \u00e9lectronique, ces m\u00eames op\u00e9rations logiques sont r\u00e9alis\u00e9es gr\u00e2ce \u00e0 des portes logiques . Chaque porte est un petit circuit qui applique une op\u00e9ration logique ( ET , OU , NON , etc.) sur ses entr\u00e9es pour produire une sortie. Symboles des principales portes logiques Voici les symboles normalis\u00e9s utilis\u00e9s en \u00e9lectronique : Exemple de circuit Un circuit combinant plusieurs portes peut \u00eatre repr\u00e9sent\u00e9 par un sch\u00e9ma. Exemple : Exercice Exercice 1 Recopiez le circuit et indiquez ses \u00e9tats interm\u00e9diaires et son \u00e9tat final : Utilisez les lois de Morgan pour simplifier l'expression. Exercice 2 On consid\u00e8re le sch\u00e9ma logique suivant : Donner la table de v\u00e9rit\u00e9 de ce sch\u00e9ma logique. Traduire ce sch\u00e9ma en une expression Python utilisant and et or . V\u00e9rifier en Python que votre expression donne les m\u00eames r\u00e9sultats que la table de v\u00e9rit\u00e9. Exercice 3 On consid\u00e8re les expressions bool\u00e9ennes suivantes : 1. (A or B) and (not C) 2. not(A and B) or C Pour chacune d\u2019elles : - Dessiner le sch\u00e9ma logique correspondant. - Compl\u00e9ter la table de v\u00e9rit\u00e9. Exercice 4 Un feu de circulation pi\u00e9ton s\u2019allume en vert si : - le bouton d\u2019appel a \u00e9t\u00e9 press\u00e9 ( bouton == True ), - et il n\u2019y a pas de voiture d\u00e9tect\u00e9e ( voiture == False ) ou qu\u2019il est minuit ( heure == 0 ). Dessiner le sch\u00e9ma logique correspondant. \u00c9crire en Python une fonction feu_pieton(bouton, voiture, heure) qui retourne True si le feu doit \u00eatre vert. Tester la fonction avec quelques cas concrets. Exercices Python Exercice 1 : Entr\u00e9e gratuite ou payante ? On organise une soir\u00e9e : - L\u2019entr\u00e9e est gratuite si la personne a moins de 12 ans ou plus de 65 ans . - Sinon, elle co\u00fbte 10 \u20ac. \u00c9crire un programme qui demande l\u2019\u00e2ge et affiche si l\u2019entr\u00e9e est gratuite ou payante. Exercice 2 : Acc\u00e8s r\u00e9serv\u00e9 Un site web n\u2019autorise l\u2019acc\u00e8s que si l\u2019utilisateur a au moins 13 ans, et a accept\u00e9 les conditions d\u2019utilisation (r\u00e9ponse \"oui\" ou \"non\" ). \u00c9crire un programme qui affiche \"Acc\u00e8s autoris\u00e9\" ou \"Acc\u00e8s refus\u00e9\" en fonction des deux variables. Exercice 3 : L\u2019ann\u00e9e bissextile Une ann\u00e9e est bissextile si elle est divisible par 4 et non divisible par 100, ou si elle est divisible par 400. \u00c9crire un programme qui demande une ann\u00e9e et affiche si elle est bissextile ou non. Exercice 4 : Jeu de devinette On choisit un nombre secret al\u00e9atoire : import random n = random.randint(0,1000) L\u2019utilisateur doit proposer un nombre, et le programme r\u00e9pond : - \"Trop petit\" , - \"Trop grand\" , - ou \"Bravo !\" . en fonction des tentatives du joueur jusqu'\u00e0 ce qu'il trouve l\u00e9 nombre secret. Exercice 5 : Triangle possible ? \u00c9crire un programme qui demande trois longueurs a , b , c . On rappelle qu\u2019un triangle est possible si chaque c\u00f4t\u00e9 est inf\u00e9rieur \u00e0 la somme des deux autres . Le programme doit afficher \"Triangle valide\" ou \"Triangle impossible\" . Exercice 6 : Nombre premier (version bool\u00e9ens) \u00c9crire un programme qui demande un entier n et affiche s\u2019il est premier ou non. On pourra utiliser une boucle for pour chercher un diviseur, mais le r\u00e9sultat final doit \u00eatre stock\u00e9 dans une variable bool\u00e9enne est_premier qui est True ou False . Exercice 7 : Acc\u00e8s \u00e0 la biblioth\u00e8que On donne acc\u00e8s \u00e0 une salle de biblioth\u00e8que si : - la personne est enseignant , - ou bien \u00e9l\u00e8ve mais avec une carte valide, - et pas en retard de plus de 3 jours. Consignes : 1. Demander le r\u00f4le ( \"enseignant\" ou \"\u00e9l\u00e8ve\" ). 2. Demander si la carte est valide ( \"oui\"/\"non\" ). 3. Demander le nombre de jours de retard. 4. \u00c9crire l\u2019expression bool\u00e9enne. 5. Afficher \"Acc\u00e8s autoris\u00e9\" ou \"Acc\u00e8s refus\u00e9\" . Exercice 8 : S\u00e9curit\u00e9 d\u2019un coffre Un coffre s\u2019ouvre si : - le code est correct - et si l\u2019utilisateur est admin ou qu\u2019il a utilis\u00e9 sa cl\u00e9 physique . Consignes : 1. D\u00e9finir une constante code_secret = 1234 . 2. Demander le code entr\u00e9. 3. Demander si l\u2019utilisateur est \"admin\" ou \"utilisateur\" . 4. Demander s\u2019il a une cl\u00e9 ( \"oui\"/\"non\" ). 5. Traduire la r\u00e8gle en Python avec and / or . 6. Afficher \"Coffre ouvert\" ou \"Acc\u00e8s refus\u00e9\" . Exercice 9 : Capteur de s\u00e9curit\u00e9 Une alarme se d\u00e9clenche si : - au moins une porte est ouverte, - et aucune fen\u00eatre n\u2019est ferm\u00e9e correctement, - ou si le capteur de mouvement est activ\u00e9. Consignes : 1. Demander l\u2019\u00e9tat de deux portes (ouverte/ferm\u00e9e). 2. Demander l\u2019\u00e9tat de deux fen\u00eatres (ouverte/ferm\u00e9e). 3. Demander si un mouvement est d\u00e9tect\u00e9 ( \"oui\"/\"non\" ). 4. Construire une formule logique combinant ces trois conditions. 5. Afficher \"Alarme d\u00e9clench\u00e9e\" ou \"Tout est normal\" . Exercice 10 : Admission en universit\u00e9 Un \u00e9tudiant est accept\u00e9 si : - sa moyenne est au moins 12 - et il a valid\u00e9 le bac - ou bien s\u2019il a une recommandation sp\u00e9ciale . Consignes : 1. Demander la moyenne (nombre). 2. Demander si le bac est valid\u00e9 ( \"oui\"/\"non\" ). 3. Demander si une recommandation est pr\u00e9sente ( \"oui\"/\"non\" ). 4. \u00c9crire une condition bool\u00e9enne. 5. Afficher \"Admis\" ou \"Refus\u00e9\" .","title":"Types de base (bool\u00e9ens)"},{"location":"Premieres/Chapitres/Types_de_base_bool/#les-booleens","text":"","title":"Les Bool\u00e9ens"},{"location":"Premieres/Chapitres/Types_de_base_bool/#introduction","text":"En informatique, en plus des nombres, il existe un type fondamental : le type bool\u00e9en . Il sert \u00e0 repr\u00e9senter des valeurs logiques : Vrai (not\u00e9 True ) Faux (not\u00e9 False ) Ce type porte le nom de George Boole , math\u00e9maticien du XIX\u1d49 si\u00e8cle, qui a formalis\u00e9 l\u2019alg\u00e8bre logique. C\u2019est un type essentiel en programmation car il permet de prendre des d\u00e9cisions et de contr\u00f4ler le d\u00e9roulement d\u2019un programme.","title":"Introduction"},{"location":"Premieres/Chapitres/Types_de_base_bool/#valeurs-booleennes","text":"En Python (et dans la plupart des langages), on a deux constantes : True \u2192 repr\u00e9sente le vrai False \u2192 repr\u00e9sente le faux Ces deux valeurs peuvent aussi \u00eatre obtenues \u00e0 partir de comparaisons : 3 < 5 # True 10 == 2 # False","title":"Valeurs bool\u00e9ennes"},{"location":"Premieres/Chapitres/Types_de_base_bool/#comparaisons","text":"Les bool\u00e9ens apparaissent tr\u00e8s souvent \u00e0 la suite de comparaisons. Voici les principaux op\u00e9rateurs en Python : Op\u00e9rateur Signification Exemple 1 R\u00e9sultat 1 Exemple 2 R\u00e9sultat 2 == \u00e9gal \u00e0 5 == 5 True 3 == 5 False != diff\u00e9rent de 3 != 5 True 5 != 5 False < strictement inf\u00e9rieur 5 < 10 True 5 < 5 False <= inf\u00e9rieur 5 <= 10 True 5 <= 5 True > strictement sup\u00e9rieur 5 > 10 False 5 > 5 False >= sup\u00e9rieur 5 >= 10 False 5 >= 5 True Ces comparaisons ne sont pas exclusives aux entiers, on peut les appliquer sur tous les types naturels : Exemples : 3.5 < 8.2 = True \"abc\" > \"def\" = False \"a\" > \"A\" = True False != False = False False < True = True Exercice \u00c9value mentalement chaque comparaison ci-dessous puis v\u00e9rifie avec Python. \u00c9cris le r\u00e9sultat attendu ( True ou False ) dans la colonne vide. Expression R\u00e9sultat attendu \"z\" < \"a\" \"abc\" <= \"abd\" \"chat\" <= \"Chat\" \"bonjour\" != \"bonsoir\" 7 >= 7 12 != 15 3.14 == 3 10 < 2 -5 < 0 False != True True == (5 < 3)","title":"Comparaisons"},{"location":"Premieres/Chapitres/Types_de_base_bool/#logique-booleenne","text":"","title":"Logique bool\u00e9enne"},{"location":"Premieres/Chapitres/Types_de_base_bool/#les-operateurs-logiques","text":"Le langage Python propose trois op\u00e9rateurs logiques principaux : Op\u00e9rateur Syntaxe python Syntaxe logique Signification Exemple R\u00e9sultat NON not \\(\\overline{a}\\) (non a) inverse la valeur not True False ET and . vrai si les deux sont vrais True and False False OU or + vrai si au moins un est vrai True or False True Il existe aussi un op\u00e9rateur important qui n'est pas naturel en python : OU EXCLUSIF xor vrai si l'un est faux et l'autre est vraie True xor True False Exemple : a = True b = False print(not a) # False print(a and b) # False print(a or b) # True Exercice \u00c9value mentalement chaque expression bool\u00e9enne puis v\u00e9rifie avec Python. \u00c9cris le r\u00e9sultat attendu ( True ou False ) dans la colonne vide. Expression R\u00e9sultat attendu not (3 < 5) (7 >= 7) and (2 != 3) (3.14 == 3) or (10 < 20) (\"z\" < \"a\") or (4 == 4) not (False) and (5 > 2) (6 <= 6) xor (2 > 10) (True and (8 != 8)) or (1 < 2) not (\"abc\" == \"def\") (False or (9 >= 9)) and (3 < 1) (7 != 7) xor (not (2 < 5)) (\"chat\" < \"chien\") or (not (4 <= 4)) ((5 > 1) and (2 == 2)) or (False)","title":"Les op\u00e9rateurs logiques"},{"location":"Premieres/Chapitres/Types_de_base_bool/#les-tables-de-verite","text":"a b a . b a + b ! a a XOR b False False False False True False False True False True True True True False False True False True True True True True False False Exercice Compl\u00e9tez ces tables de v\u00e9rit\u00e9. a b a.b \\(\\overline{a.b}\\) a+b \\(\\overline{a+b}\\) False False -- -- -- -- False True -- -- -- -- True False -- -- -- -- True True -- -- -- -- a b \\(\\overline{a}\\) \\(\\overline{b}\\) \\(\\overline{a}\\) + \\(\\overline{b}\\) \\(\\overline{a}\\) . \\(\\overline{b}\\) False False -- -- -- -- False True -- -- -- -- True False -- -- -- -- True True -- -- -- -- On remarque que : \\(\\overline{a+b} = \\overline a . \\overline b\\) \\(\\overline{a.b} = \\overline a + \\overline b\\) C'est ce qu'on appelle les lois de Morgan .","title":"Les tables de v\u00e9rit\u00e9"},{"location":"Premieres/Chapitres/Types_de_base_bool/#les-conditions","text":"En programmation, les conditions permettent de prendre des d\u00e9cisions : le programme ex\u00e9cute certaines instructions seulement si une condition est vraie. En Python, cela s\u2019\u00e9crit avec les mots-cl\u00e9s if , elif et else .","title":"Les conditions"},{"location":"Premieres/Chapitres/Types_de_base_bool/#structure-de-base","text":"if condition1: # instructions ex\u00e9cut\u00e9es si la condition1 est vraie elif condition2 : # instructions ex\u00e9cut\u00e9es si la condition1 est fausse mais que la condition2 est vraie # on peut encha\u00eener plusieurs elif else: # instructions ex\u00e9cut\u00e9es si les conditions 1 et 2 sont fausses On peut le lire ainsi : Si condition1 est vraie, je fais \u00e7a ... Sinon, si condition2 est vraie, je fais \u00e7a ... Dans tous les autre cas, je fais \u00e7a ... Exemple : age = 15 if age >= 18: print(\"Majeur\") else: print(\"Mineur\")","title":"Structure de base"},{"location":"Premieres/Chapitres/Types_de_base_bool/#circuits-logiques","text":"Jusqu\u2019ici, nous avons vu la logique bool\u00e9enne dans le langage Python . En \u00e9lectronique, ces m\u00eames op\u00e9rations logiques sont r\u00e9alis\u00e9es gr\u00e2ce \u00e0 des portes logiques . Chaque porte est un petit circuit qui applique une op\u00e9ration logique ( ET , OU , NON , etc.) sur ses entr\u00e9es pour produire une sortie.","title":"Circuits logiques"},{"location":"Premieres/Chapitres/Types_de_base_bool/#symboles-des-principales-portes-logiques","text":"Voici les symboles normalis\u00e9s utilis\u00e9s en \u00e9lectronique :","title":"Symboles des principales portes logiques"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exemple-de-circuit","text":"Un circuit combinant plusieurs portes peut \u00eatre repr\u00e9sent\u00e9 par un sch\u00e9ma. Exemple : Exercice Exercice 1 Recopiez le circuit et indiquez ses \u00e9tats interm\u00e9diaires et son \u00e9tat final : Utilisez les lois de Morgan pour simplifier l'expression. Exercice 2 On consid\u00e8re le sch\u00e9ma logique suivant : Donner la table de v\u00e9rit\u00e9 de ce sch\u00e9ma logique. Traduire ce sch\u00e9ma en une expression Python utilisant and et or . V\u00e9rifier en Python que votre expression donne les m\u00eames r\u00e9sultats que la table de v\u00e9rit\u00e9. Exercice 3 On consid\u00e8re les expressions bool\u00e9ennes suivantes : 1. (A or B) and (not C) 2. not(A and B) or C Pour chacune d\u2019elles : - Dessiner le sch\u00e9ma logique correspondant. - Compl\u00e9ter la table de v\u00e9rit\u00e9. Exercice 4 Un feu de circulation pi\u00e9ton s\u2019allume en vert si : - le bouton d\u2019appel a \u00e9t\u00e9 press\u00e9 ( bouton == True ), - et il n\u2019y a pas de voiture d\u00e9tect\u00e9e ( voiture == False ) ou qu\u2019il est minuit ( heure == 0 ). Dessiner le sch\u00e9ma logique correspondant. \u00c9crire en Python une fonction feu_pieton(bouton, voiture, heure) qui retourne True si le feu doit \u00eatre vert. Tester la fonction avec quelques cas concrets.","title":"Exemple de circuit"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exercices-python","text":"","title":"Exercices Python"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exercice-1-entree-gratuite-ou-payante","text":"On organise une soir\u00e9e : - L\u2019entr\u00e9e est gratuite si la personne a moins de 12 ans ou plus de 65 ans . - Sinon, elle co\u00fbte 10 \u20ac. \u00c9crire un programme qui demande l\u2019\u00e2ge et affiche si l\u2019entr\u00e9e est gratuite ou payante.","title":"Exercice 1 : Entr\u00e9e gratuite ou payante ?"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exercice-2-acces-reserve","text":"Un site web n\u2019autorise l\u2019acc\u00e8s que si l\u2019utilisateur a au moins 13 ans, et a accept\u00e9 les conditions d\u2019utilisation (r\u00e9ponse \"oui\" ou \"non\" ). \u00c9crire un programme qui affiche \"Acc\u00e8s autoris\u00e9\" ou \"Acc\u00e8s refus\u00e9\" en fonction des deux variables.","title":"Exercice 2 : Acc\u00e8s r\u00e9serv\u00e9"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exercice-3-lannee-bissextile","text":"Une ann\u00e9e est bissextile si elle est divisible par 4 et non divisible par 100, ou si elle est divisible par 400. \u00c9crire un programme qui demande une ann\u00e9e et affiche si elle est bissextile ou non.","title":"Exercice 3 : L\u2019ann\u00e9e bissextile"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exercice-4-jeu-de-devinette","text":"On choisit un nombre secret al\u00e9atoire : import random n = random.randint(0,1000) L\u2019utilisateur doit proposer un nombre, et le programme r\u00e9pond : - \"Trop petit\" , - \"Trop grand\" , - ou \"Bravo !\" . en fonction des tentatives du joueur jusqu'\u00e0 ce qu'il trouve l\u00e9 nombre secret.","title":"Exercice 4 : Jeu de devinette"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exercice-5-triangle-possible","text":"\u00c9crire un programme qui demande trois longueurs a , b , c . On rappelle qu\u2019un triangle est possible si chaque c\u00f4t\u00e9 est inf\u00e9rieur \u00e0 la somme des deux autres . Le programme doit afficher \"Triangle valide\" ou \"Triangle impossible\" .","title":"Exercice 5 : Triangle possible ?"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exercice-6-nombre-premier-version-booleens","text":"\u00c9crire un programme qui demande un entier n et affiche s\u2019il est premier ou non. On pourra utiliser une boucle for pour chercher un diviseur, mais le r\u00e9sultat final doit \u00eatre stock\u00e9 dans une variable bool\u00e9enne est_premier qui est True ou False .","title":"Exercice 6 : Nombre premier (version bool\u00e9ens)"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exercice-7-acces-a-la-bibliotheque","text":"On donne acc\u00e8s \u00e0 une salle de biblioth\u00e8que si : - la personne est enseignant , - ou bien \u00e9l\u00e8ve mais avec une carte valide, - et pas en retard de plus de 3 jours. Consignes : 1. Demander le r\u00f4le ( \"enseignant\" ou \"\u00e9l\u00e8ve\" ). 2. Demander si la carte est valide ( \"oui\"/\"non\" ). 3. Demander le nombre de jours de retard. 4. \u00c9crire l\u2019expression bool\u00e9enne. 5. Afficher \"Acc\u00e8s autoris\u00e9\" ou \"Acc\u00e8s refus\u00e9\" .","title":"Exercice 7 : Acc\u00e8s \u00e0 la biblioth\u00e8que"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exercice-8-securite-dun-coffre","text":"Un coffre s\u2019ouvre si : - le code est correct - et si l\u2019utilisateur est admin ou qu\u2019il a utilis\u00e9 sa cl\u00e9 physique . Consignes : 1. D\u00e9finir une constante code_secret = 1234 . 2. Demander le code entr\u00e9. 3. Demander si l\u2019utilisateur est \"admin\" ou \"utilisateur\" . 4. Demander s\u2019il a une cl\u00e9 ( \"oui\"/\"non\" ). 5. Traduire la r\u00e8gle en Python avec and / or . 6. Afficher \"Coffre ouvert\" ou \"Acc\u00e8s refus\u00e9\" .","title":"Exercice 8 : S\u00e9curit\u00e9 d\u2019un coffre"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exercice-9-capteur-de-securite","text":"Une alarme se d\u00e9clenche si : - au moins une porte est ouverte, - et aucune fen\u00eatre n\u2019est ferm\u00e9e correctement, - ou si le capteur de mouvement est activ\u00e9. Consignes : 1. Demander l\u2019\u00e9tat de deux portes (ouverte/ferm\u00e9e). 2. Demander l\u2019\u00e9tat de deux fen\u00eatres (ouverte/ferm\u00e9e). 3. Demander si un mouvement est d\u00e9tect\u00e9 ( \"oui\"/\"non\" ). 4. Construire une formule logique combinant ces trois conditions. 5. Afficher \"Alarme d\u00e9clench\u00e9e\" ou \"Tout est normal\" .","title":"Exercice 9 : Capteur de s\u00e9curit\u00e9"},{"location":"Premieres/Chapitres/Types_de_base_bool/#exercice-10-admission-en-universite","text":"Un \u00e9tudiant est accept\u00e9 si : - sa moyenne est au moins 12 - et il a valid\u00e9 le bac - ou bien s\u2019il a une recommandation sp\u00e9ciale . Consignes : 1. Demander la moyenne (nombre). 2. Demander si le bac est valid\u00e9 ( \"oui\"/\"non\" ). 3. Demander si une recommandation est pr\u00e9sente ( \"oui\"/\"non\" ). 4. \u00c9crire une condition bool\u00e9enne. 5. Afficher \"Admis\" ou \"Refus\u00e9\" .","title":"Exercice 10 : Admission en universit\u00e9"},{"location":"Premieres/Chapitres/Types_de_base_float/","text":"Types de base : flottants Contrairement aux entiers, les nombres r\u00e9els peuvent avoir une partie fractionnaire . Pour les repr\u00e9senter en informatique, on utilise le format nombre \u00e0 virgule flottante ( floating point ). Conversion d\u00e9cimal vers binaire Prenons \\(6.34375_{10}\\) On peut s\u00e9parer cette valeur en deux : - la partie enti\u00e9re : 6 - la partie fractionnaire : 0.34375 On sait d\u00e9ja transformer les valeurs enti\u00e9re : \\(6_{10} = 110_2\\) Pour la partie fractionnaire, \u00e0 l'inverse, on va effectuer des multiplications successives : On multiplie notre valeur par 2. Puis on recommence avec la partie fractionnaire du resultat. Et ainsi de suite jusqu'\u00e0 ce que le resultat soit une valeur enti\u00e9re. \\(0.34375 \\times 2 = 0.6875\\) \\(0.6875 \\times 2 = 1.375\\) \\(0.375 \\times 2 = 0.75\\) \\(0.75 \\times 2 = 1.5\\) \\(0.5 \\times 2 = 1\\) Pour finir on regarde les valeurs enti\u00e9res des resultats de haut en bas. On a donc comme partie fractionnaire : \\(0.01011_2\\) . Pour finir, il nous suffit d'additionner nos deux r\u00e9sultats : \\(6.34375_{10} = 110.01011_2\\) . Conversion binaire vers d\u00e9cimal Ici, nous utiliserons la m\u00eame m\u00e9thode que pour les valeurs enti\u00e9res. Les bits de la partie fractionnaire correspondent \u00e0 des puissances n\u00e9gatives. Reprenons notre r\u00e9sultat pr\u00e9c\u00e9dent : \\(110.01011_2\\) . \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(2^{-1}\\) \\(2^{-2}\\) \\(2^{-3}\\) \\(2^{-4}\\) \\(2^{-5}\\) 1 1 0 0 1 0 1 1 Pour retrouver notre valeur d\u00e9cimal nous pouvons effectuer ce calcul : $$ 2^2 + 2^1 + 2^{-2}+ 2^{-4}+ 2^{-5} = $$ $$4 + 2 + 0.25 + 0.0625 + 0.03125 = 6.34375 $$ Rappel sur les puissances Une puissance n\u00e9gative permet de repr\u00e9senter la division r\u00e9p\u00e9t\u00e9e . Pour tout nombre non nul \\(a\\) et tout entier \\(n > 0\\) : $$ a^{-n} = \\frac{1}{a^n} $$ Autrement dit, \\(a^{-n}\\) est l'inverse de \\(a^n\\) . \\(2^-1\\) \\(2^-2\\) \\(2^-3\\) \\(2^-4\\) \\(2^-5\\) \\(2^-6\\) \\(2^-7\\) \\(\\frac{1}{2^1}\\) \\(\\frac{1}{2^2}\\) \\(\\frac{1}{2^3}\\) \\(\\frac{1}{2^4}\\) \\(\\frac{1}{2^5}\\) \\(\\frac{1}{2^6}\\) \\(\\frac{1}{2^7}\\) \\(\\frac{1}{2}\\) \\(\\frac{1}{4}\\) \\(\\frac{1}{8}\\) \\(\\frac{1}{16}\\) \\(\\frac{1}{32}\\) \\(\\frac{1}{64}\\) \\(\\frac{1}{128}\\) \\(0.5\\) \\(0.25\\) \\(0.125\\) \\(0.0625\\) \\(0.03125\\) \\(0.015625\\) \\(0.0078125\\) Exemples \\(2^{-3} = \\frac{1}{2^3} = \\frac{1}{8} = 0.125\\) \\(5^{-2} = \\frac{1}{5^2} = \\frac{1}{25} = 0.04\\) \\(10^{-4} = \\frac{1}{10^4} = \\frac{1}{10000} = 0.0001\\) La norme IEEE 754 La norme IEEE 754 d\u00e9finit comment repr\u00e9senter un r\u00e9el sur un nombre fini de bits. Elle utilise trois composants : Signe (1 bit) : 0 \u2192 positif, 1 \u2192 n\u00e9gatif Exposant : encode la puissance de 2 Mantisse (ou fraction) : encode les chiffres significatifs Le nombre r\u00e9el est donc repr\u00e9sent\u00e9 comme : \\[ x = (-1)^{\\text{signe}} \\times 1.\\text{mantisse} \\times 2^{\\text{exposant}-\\text{biais}} \\] Le biais est un nombre ajout\u00e9 pour que l\u2019exposant puisse \u00eatre positif ou n\u00e9gatif. La mantisse permet de repr\u00e9senter les chiffres significatifs. Propri\u00e9t\u00e9s importantes Certains nombres ne peuvent pas \u00eatre repr\u00e9sent\u00e9s exactement. Exemple : \\(0.1_{10}\\) n\u2019a pas de repr\u00e9sentation binaire exacte. Les erreurs d\u2019arrondi peuvent s\u2019accumuler lors des calculs. Il ne faut jamais tester l\u2019\u00e9galit\u00e9 de deux flottants avec == . Exemples \\(0.25_{10} = 0.01_2\\) exactement \\(0.1_{10}\\) = une suite infinie en binaire \u2192 approximation \\(1/3_{10} \\approx 0.3333...\\) \u2192 approximation Exercices Convertir les nombres suivants en binaire flottant (approximatif sur 8 bits de mantisse) : 0.1 0.25 1/3 V\u00e9rifier pourquoi 0.2 + 0.1 != 0.3 en Python ou en pseudo-code.","title":"Types de base (flottants)"},{"location":"Premieres/Chapitres/Types_de_base_float/#types-de-base-flottants","text":"Contrairement aux entiers, les nombres r\u00e9els peuvent avoir une partie fractionnaire . Pour les repr\u00e9senter en informatique, on utilise le format nombre \u00e0 virgule flottante ( floating point ).","title":"Types de base : flottants"},{"location":"Premieres/Chapitres/Types_de_base_float/#conversion-decimal-vers-binaire","text":"Prenons \\(6.34375_{10}\\) On peut s\u00e9parer cette valeur en deux : - la partie enti\u00e9re : 6 - la partie fractionnaire : 0.34375 On sait d\u00e9ja transformer les valeurs enti\u00e9re : \\(6_{10} = 110_2\\) Pour la partie fractionnaire, \u00e0 l'inverse, on va effectuer des multiplications successives : On multiplie notre valeur par 2. Puis on recommence avec la partie fractionnaire du resultat. Et ainsi de suite jusqu'\u00e0 ce que le resultat soit une valeur enti\u00e9re. \\(0.34375 \\times 2 = 0.6875\\) \\(0.6875 \\times 2 = 1.375\\) \\(0.375 \\times 2 = 0.75\\) \\(0.75 \\times 2 = 1.5\\) \\(0.5 \\times 2 = 1\\) Pour finir on regarde les valeurs enti\u00e9res des resultats de haut en bas. On a donc comme partie fractionnaire : \\(0.01011_2\\) . Pour finir, il nous suffit d'additionner nos deux r\u00e9sultats : \\(6.34375_{10} = 110.01011_2\\) .","title":"Conversion d\u00e9cimal vers binaire"},{"location":"Premieres/Chapitres/Types_de_base_float/#conversion-binaire-vers-decimal","text":"Ici, nous utiliserons la m\u00eame m\u00e9thode que pour les valeurs enti\u00e9res. Les bits de la partie fractionnaire correspondent \u00e0 des puissances n\u00e9gatives. Reprenons notre r\u00e9sultat pr\u00e9c\u00e9dent : \\(110.01011_2\\) . \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(2^{-1}\\) \\(2^{-2}\\) \\(2^{-3}\\) \\(2^{-4}\\) \\(2^{-5}\\) 1 1 0 0 1 0 1 1 Pour retrouver notre valeur d\u00e9cimal nous pouvons effectuer ce calcul : $$ 2^2 + 2^1 + 2^{-2}+ 2^{-4}+ 2^{-5} = $$ $$4 + 2 + 0.25 + 0.0625 + 0.03125 = 6.34375 $$ Rappel sur les puissances Une puissance n\u00e9gative permet de repr\u00e9senter la division r\u00e9p\u00e9t\u00e9e . Pour tout nombre non nul \\(a\\) et tout entier \\(n > 0\\) : $$ a^{-n} = \\frac{1}{a^n} $$ Autrement dit, \\(a^{-n}\\) est l'inverse de \\(a^n\\) . \\(2^-1\\) \\(2^-2\\) \\(2^-3\\) \\(2^-4\\) \\(2^-5\\) \\(2^-6\\) \\(2^-7\\) \\(\\frac{1}{2^1}\\) \\(\\frac{1}{2^2}\\) \\(\\frac{1}{2^3}\\) \\(\\frac{1}{2^4}\\) \\(\\frac{1}{2^5}\\) \\(\\frac{1}{2^6}\\) \\(\\frac{1}{2^7}\\) \\(\\frac{1}{2}\\) \\(\\frac{1}{4}\\) \\(\\frac{1}{8}\\) \\(\\frac{1}{16}\\) \\(\\frac{1}{32}\\) \\(\\frac{1}{64}\\) \\(\\frac{1}{128}\\) \\(0.5\\) \\(0.25\\) \\(0.125\\) \\(0.0625\\) \\(0.03125\\) \\(0.015625\\) \\(0.0078125\\) Exemples \\(2^{-3} = \\frac{1}{2^3} = \\frac{1}{8} = 0.125\\) \\(5^{-2} = \\frac{1}{5^2} = \\frac{1}{25} = 0.04\\) \\(10^{-4} = \\frac{1}{10^4} = \\frac{1}{10000} = 0.0001\\)","title":"Conversion binaire vers d\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base_float/#la-norme-ieee-754","text":"La norme IEEE 754 d\u00e9finit comment repr\u00e9senter un r\u00e9el sur un nombre fini de bits. Elle utilise trois composants : Signe (1 bit) : 0 \u2192 positif, 1 \u2192 n\u00e9gatif Exposant : encode la puissance de 2 Mantisse (ou fraction) : encode les chiffres significatifs Le nombre r\u00e9el est donc repr\u00e9sent\u00e9 comme : \\[ x = (-1)^{\\text{signe}} \\times 1.\\text{mantisse} \\times 2^{\\text{exposant}-\\text{biais}} \\] Le biais est un nombre ajout\u00e9 pour que l\u2019exposant puisse \u00eatre positif ou n\u00e9gatif. La mantisse permet de repr\u00e9senter les chiffres significatifs.","title":"La norme IEEE 754"},{"location":"Premieres/Chapitres/Types_de_base_float/#proprietes-importantes","text":"Certains nombres ne peuvent pas \u00eatre repr\u00e9sent\u00e9s exactement. Exemple : \\(0.1_{10}\\) n\u2019a pas de repr\u00e9sentation binaire exacte. Les erreurs d\u2019arrondi peuvent s\u2019accumuler lors des calculs. Il ne faut jamais tester l\u2019\u00e9galit\u00e9 de deux flottants avec == . Exemples \\(0.25_{10} = 0.01_2\\) exactement \\(0.1_{10}\\) = une suite infinie en binaire \u2192 approximation \\(1/3_{10} \\approx 0.3333...\\) \u2192 approximation Exercices Convertir les nombres suivants en binaire flottant (approximatif sur 8 bits de mantisse) : 0.1 0.25 1/3 V\u00e9rifier pourquoi 0.2 + 0.1 != 0.3 en Python ou en pseudo-code.","title":"Propri\u00e9t\u00e9s importantes"},{"location":"Premieres/Chapitres/Types_de_base_int/","text":"Types de base : Entier Entier positif Le d\u00e9cimal Depuis toujours, nous utilisons la base 10, s\u00fbrement parce que nous avons\u2026 10 doigts. C'est ce que l'on appelle le syst\u00e8me d\u00e9cimal , car nous utilisons 10 chiffres (de 0 \u00e0 9) pour repr\u00e9senter toutes les valeurs. Dans un nombre d\u00e9cimal, chaque position correspond \u00e0 une puissance de 10, de droite \u00e0 gauche. \\(10^3\\) \\(10^2\\) \\(10^1\\) \\(10^0\\) \\(2025_{10}\\) 2 0 2 5 \\[ 2025_{10} = 2 \\times 10^3 + 0 \\times 10^2 + 2 \\times 10^1 + 5 \\times 10^0 \\] \\[ = 2 \\times 1000 + 0 \\times 100 + 2 \\times 10 + 5 \\times 1 \\] Rappel sur les puissances Une puissance est une fa\u00e7on d\u2019\u00e9crire une multiplication r\u00e9p\u00e9t\u00e9e. \\( a^n \\) se lit \u00ab\u202fa puissance n\u202f\u00bb et signifie que l\u2019on multiplie \\(a\\) par lui-m\u00eame \\(n\\) fois : $$ a^n = \\underbrace{a \\times a \\times \\dots \\times a}_{n \\text{ fois}} $$ exemples \\( 2^3 = 2 \\times 2 \\times 2 = 8 \\) \\( 5^0 = 1 \\) (par convention, toute base non nulle \u00e0 la puissance 0 vaut 1) \\( 10^4 = 10 \\times 10 \\times 10 \\times 10 = 10000 \\) Le binaire L\u2019ordinateur utilise la base 2, appel\u00e9e binaire , car les composants \u00e9lectroniques ne peuvent traiter que deux \u00e9tats : - 1 : pr\u00e9sence d\u2019une tension \u00e9lectrique - 0 : absence de tension \u00e9lectrique Il a donc fallu repr\u00e9senter toutes les informations en binaire. Dans ce syst\u00e8me, il n\u2019existe que deux symboles : 0 et 1, que l\u2019on appelle des bits (contraction de binary digit). Chaque position dans un nombre binaire correspond \u00e0 une puissance de 2 , de droite \u00e0 gauche. exemple Prenons le nombre binaire : \\(1011_2\\) On peut le d\u00e9composer en puissances de 2 : \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(1011_2\\) 1 0 1 1 Et le convertir en d\u00e9cimal : \\[ 1011_2 = 1 \\times 2^3 + 0 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0 \\] \\[ = 2^3 + 2^1 + 2^0 \\] \\[ = 8 + 2 + 1 \\] \\[ = 11 \\] donc \\(1011_{2} = 11_{10}\\) Exercice Convertir en d\u00e9cimal, ces valeurs binaires : \\(110010_{2}\\) \\(1100100_{2}\\) \\(100100101_{2}\\) Conversion du d\u00e9cimal vers le binaire On utilise la M\u00e9thode des divisions successives On divise le nombre par 2 . On note le reste (0 ou 1). On recommence avec le quotient , jusqu\u2019\u00e0 obtenir 0. Le nombre binaire est obtenu en lisant les restes de bas en haut . exemple Repr\u00e9sentons la valeur \\(50_{10}\\) en binaire. 50 / 2 = 25 reste 0 25 / 2 = 12 reste 1 12 / 2 = 6 reste 0 6 / 2 = 3 reste 0 3 / 2 = 1 reste 1 1 / 2 = 0 reste 1 donc \\(50_{10} = 110010_{2}\\) Exercice Convertir en binaire, ces valeurs d\u00e9cimales : \\(2025_{10}\\) \\(4050_{10}\\) \\(59400_{10}\\) L\u2019hexad\u00e9cimal Un autre syst\u00e8me de num\u00e9ration tr\u00e8s utilis\u00e9 en informatique est la base 16 , appel\u00e9e hexad\u00e9cimal . Pourquoi ? Parce qu\u2019il est plus compact que le binaire : au lieu de manipuler des suites tr\u00e8s longues de 0 et 1, on peut les regrouper par 4 bits (4 chiffres binaires) et les \u00e9crire avec un seul chiffre hexad\u00e9cimal. Les chiffres en base 16 La base 16 utilise 16 symboles diff\u00e9rents : - de 0 \u00e0 9 (comme en d\u00e9cimal) - puis les lettres A, B, C, D, E, F pour repr\u00e9senter les valeurs 10 \u00e0 15. D\u00e9cimal Hexad\u00e9cimal 10 A 11 B 12 C 13 D 14 E 15 F exemple \\(16^1\\) \\(16^0\\) \\(A2_{16}\\) A (= 10) 2 \\[ A2_{16} = 10 \\times 16^1 + 2 \\times 16^0 \\] \\[ = 160 + 2 \\] \\[ = 162_{10} \\] Lien entre binaire et hexad\u00e9cimal Chaque chiffre hexad\u00e9cimal correspond \u00e0 4 bits (car \\(2^4 = 16\\) ). Hexa 0 1 2 3 4 5 6 7 Binaire 0000 0001 0010 0011 0100 0101 0110 0111 Hexa 8 9 A B C D E F Binaire 1000 1001 1010 1011 1100 1101 1110 1111 Cela permet de convertir facilement du binaire en hexad\u00e9cimal en regroupant les bits par paquets de 4. exemple \\(111011_{2}\\) On regroupe par 4 bits (en partant de la droite) : 0011 1011 3 B Donc \\(111011_2 = 3B_{16}\\) Exercice Convertir en d\u00e9cimal : \\(FF_{16}\\) \\(1A3_{16}\\) Convertir en binaire : \\(7C4_{16}\\) \\(FADA_{16}\\) Convertir en hexad\u00e9cimal : \\(1999_{10}\\) \\(59400_{10}\\) \\(111100_{2}\\) \\(110100101111_{2}\\) Entier relatif Jusqu\u2019ici, nous avons vu la repr\u00e9sentation des entiers positifs . Mais il faut aussi repr\u00e9senter les entiers relatifs (positifs et n\u00e9gatifs). Nombre de bits n\u00e9cessaires En binaire, la taille d\u2019un entier est d\u00e9termin\u00e9e par le nombre de bits utilis\u00e9s. Avec n bits, on peut repr\u00e9senter au maximum : \\[ 0 \\; \\leqslant \\; N \\; < \\; 2^n \\] Exemple : - avec 8 bits (1 octet), on peut repr\u00e9senter 256 valeurs distinctes (de 0 \u00e0 255). - avec 16 bits , on peut repr\u00e9senter 65 536 valeurs (de 0 \u00e0 65 535). Les tailles courantes Les tailles les plus utilis\u00e9es en informatique sont : 8 bits (1 octet) 16 bits (2 octets) 32 bits (4 octets) 64 bits (8 octets) Chaque taille limite l\u2019intervalle de valeurs possibles. Questions Combien de valeurs diff\u00e9rentes peut-on repr\u00e9senter avec : 1. 5 bits ? 2. 10 bits ? 3. 32 bits ? Premi\u00e8re id\u00e9e : utiliser un bit de signe Une premi\u00e8re id\u00e9e consiste \u00e0 r\u00e9server le bit de poids fort (le plus \u00e0 gauche) pour indiquer le signe : - 0 \u2192 nombre positif - 1 \u2192 nombre n\u00e9gatif On aurait alors les repr\u00e9sentations suivantes sur 3 bits : n\u00e9gatif positif 0 100 000 1 101 001 2 110 010 3 111 011 Probl\u00e8mes de cette m\u00e9thode Deux repr\u00e9sentations pour la valeur 0. Cela introduit une incoh\u00e9rence et gaspille une combinaison binaire. Addition incorrecte Exemple avec \\( 5 + (-5) \\) sur 8 bits: \\(00000101_2 + 10000101_2 = 10001010_2\\) C'est \u00e0 dire \\(5 - 5 = - 10\\) , ce qui est \u00e9videmment faux ! Il faut donc trouver une autre m\u00e9thode. Exercice - Donner les repr\u00e9sentations binaires des valeurs entre -5 et 5 sur 4 bits. - Donner les repr\u00e9sentations binaires des valeurs -67 sur 8 bits. Solution : le compl\u00e9ment \u00e0 2 Pour corriger ces probl\u00e8mes, on utilise la m\u00e9thode du compl\u00e9ment \u00e0 2 . L\u2019id\u00e9e est comparable \u00e0 un compteur : - Si on compte en arri\u00e8re depuis 0 , on obtient directement le dernier nombre possible. - Exemple en base d\u00e9cimale avec deux chiffres : apr\u00e8s 00 , si on soustrait 1, on tombe sur 99 , puis 98 , etc. De la m\u00eame mani\u00e8re, en binaire, on utilise le \"rebouclage\" naturel des bits pour coder les nombres n\u00e9gatifs. n\u00e9gatif positif 0 000 1 111 001 2 110 010 3 101 011 4 100 M\u00e9thode de construction La m\u00e9thode est simple : Pour repr\u00e9senter un nombre n\u00e9gatif, on \u00e9crit en binaire sa valeur absolue, on inverse ensuite tous les bits, puis on ajoute 1. Exemple Imaginons que nous codions sur 4 bits. Nous voulons repr\u00e9senter la valeur -5. \\(5_{10} = 101_2\\) sur 4 bits : \\(0101_2\\) inversion des bits : \\(1010_2\\) +1 \u2192 \\(1011_2\\) Sur 4 bits, on r\u00e9presente donc -5 comme ceci : \\(1011_2\\) . Exercice Coder en compl\u00e9ment \u00e0 2 sur 4 bits les valeurs entre -5 et 5 sur 4 bits. Cette fois-ci l'addition fonctionne : Exemple Essayons de nouveau \\(5 + (-5)\\) sur 8 bits, c'est \u00e0 dire : \\(00000101_2 + 11111011_2\\) retenue 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 + 1 1 1 1 1 1 0 1 1 = 1 0 0 0 0 0 0 0 0 0 On obtient alors : \\(100000000_2\\) , or nous sommes sur 8 bits donc on a bien : \\(5_{10} + (-5_{10}) = 00000101_2 + 11111011_2 = 00000000_2 = 0_{10}\\) Exercice V\u00e9rifier \u00e0 la main les additions suivantes en compl\u00e9ment \u00e0 2 (sur 4 bits) : 1. \\(2 + (-2)\\) 2. \\(3 + (-1)\\) 3. \\(-3 + (-2)\\) Exercice Donner l\u2019intervalle des entiers repr\u00e9sentables avec : 1. 8 bits non sign\u00e9s 2. 8 bits avec bit de signe 3. 8 bits en compl\u00e9ment \u00e0 2 Jusqu\u2019ici, nous avons vu comment repr\u00e9senter et manipuler des nombres. En programmation, il est souvent n\u00e9cessaire de prendre des d\u00e9cisions : ex\u00e9cuter certaines instructions seulement si une condition est vraie. En Python, cela se fait avec les mots-cl\u00e9s if , elif et else .","title":"Types de base (entiers)"},{"location":"Premieres/Chapitres/Types_de_base_int/#types-de-base-entier","text":"","title":"Types de base : Entier"},{"location":"Premieres/Chapitres/Types_de_base_int/#entier-positif","text":"","title":"Entier positif"},{"location":"Premieres/Chapitres/Types_de_base_int/#le-decimal","text":"Depuis toujours, nous utilisons la base 10, s\u00fbrement parce que nous avons\u2026 10 doigts. C'est ce que l'on appelle le syst\u00e8me d\u00e9cimal , car nous utilisons 10 chiffres (de 0 \u00e0 9) pour repr\u00e9senter toutes les valeurs. Dans un nombre d\u00e9cimal, chaque position correspond \u00e0 une puissance de 10, de droite \u00e0 gauche. \\(10^3\\) \\(10^2\\) \\(10^1\\) \\(10^0\\) \\(2025_{10}\\) 2 0 2 5 \\[ 2025_{10} = 2 \\times 10^3 + 0 \\times 10^2 + 2 \\times 10^1 + 5 \\times 10^0 \\] \\[ = 2 \\times 1000 + 0 \\times 100 + 2 \\times 10 + 5 \\times 1 \\] Rappel sur les puissances Une puissance est une fa\u00e7on d\u2019\u00e9crire une multiplication r\u00e9p\u00e9t\u00e9e. \\( a^n \\) se lit \u00ab\u202fa puissance n\u202f\u00bb et signifie que l\u2019on multiplie \\(a\\) par lui-m\u00eame \\(n\\) fois : $$ a^n = \\underbrace{a \\times a \\times \\dots \\times a}_{n \\text{ fois}} $$ exemples \\( 2^3 = 2 \\times 2 \\times 2 = 8 \\) \\( 5^0 = 1 \\) (par convention, toute base non nulle \u00e0 la puissance 0 vaut 1) \\( 10^4 = 10 \\times 10 \\times 10 \\times 10 = 10000 \\)","title":"Le d\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base_int/#le-binaire","text":"L\u2019ordinateur utilise la base 2, appel\u00e9e binaire , car les composants \u00e9lectroniques ne peuvent traiter que deux \u00e9tats : - 1 : pr\u00e9sence d\u2019une tension \u00e9lectrique - 0 : absence de tension \u00e9lectrique Il a donc fallu repr\u00e9senter toutes les informations en binaire. Dans ce syst\u00e8me, il n\u2019existe que deux symboles : 0 et 1, que l\u2019on appelle des bits (contraction de binary digit). Chaque position dans un nombre binaire correspond \u00e0 une puissance de 2 , de droite \u00e0 gauche. exemple Prenons le nombre binaire : \\(1011_2\\) On peut le d\u00e9composer en puissances de 2 : \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(1011_2\\) 1 0 1 1 Et le convertir en d\u00e9cimal : \\[ 1011_2 = 1 \\times 2^3 + 0 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0 \\] \\[ = 2^3 + 2^1 + 2^0 \\] \\[ = 8 + 2 + 1 \\] \\[ = 11 \\] donc \\(1011_{2} = 11_{10}\\) Exercice Convertir en d\u00e9cimal, ces valeurs binaires : \\(110010_{2}\\) \\(1100100_{2}\\) \\(100100101_{2}\\)","title":"Le binaire"},{"location":"Premieres/Chapitres/Types_de_base_int/#conversion-du-decimal-vers-le-binaire","text":"On utilise la M\u00e9thode des divisions successives On divise le nombre par 2 . On note le reste (0 ou 1). On recommence avec le quotient , jusqu\u2019\u00e0 obtenir 0. Le nombre binaire est obtenu en lisant les restes de bas en haut . exemple Repr\u00e9sentons la valeur \\(50_{10}\\) en binaire. 50 / 2 = 25 reste 0 25 / 2 = 12 reste 1 12 / 2 = 6 reste 0 6 / 2 = 3 reste 0 3 / 2 = 1 reste 1 1 / 2 = 0 reste 1 donc \\(50_{10} = 110010_{2}\\) Exercice Convertir en binaire, ces valeurs d\u00e9cimales : \\(2025_{10}\\) \\(4050_{10}\\) \\(59400_{10}\\)","title":"Conversion du d\u00e9cimal vers le binaire"},{"location":"Premieres/Chapitres/Types_de_base_int/#lhexadecimal","text":"Un autre syst\u00e8me de num\u00e9ration tr\u00e8s utilis\u00e9 en informatique est la base 16 , appel\u00e9e hexad\u00e9cimal . Pourquoi ? Parce qu\u2019il est plus compact que le binaire : au lieu de manipuler des suites tr\u00e8s longues de 0 et 1, on peut les regrouper par 4 bits (4 chiffres binaires) et les \u00e9crire avec un seul chiffre hexad\u00e9cimal.","title":"L\u2019hexad\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base_int/#les-chiffres-en-base-16","text":"La base 16 utilise 16 symboles diff\u00e9rents : - de 0 \u00e0 9 (comme en d\u00e9cimal) - puis les lettres A, B, C, D, E, F pour repr\u00e9senter les valeurs 10 \u00e0 15. D\u00e9cimal Hexad\u00e9cimal 10 A 11 B 12 C 13 D 14 E 15 F exemple \\(16^1\\) \\(16^0\\) \\(A2_{16}\\) A (= 10) 2 \\[ A2_{16} = 10 \\times 16^1 + 2 \\times 16^0 \\] \\[ = 160 + 2 \\] \\[ = 162_{10} \\]","title":"Les chiffres en base 16"},{"location":"Premieres/Chapitres/Types_de_base_int/#lien-entre-binaire-et-hexadecimal","text":"Chaque chiffre hexad\u00e9cimal correspond \u00e0 4 bits (car \\(2^4 = 16\\) ). Hexa 0 1 2 3 4 5 6 7 Binaire 0000 0001 0010 0011 0100 0101 0110 0111 Hexa 8 9 A B C D E F Binaire 1000 1001 1010 1011 1100 1101 1110 1111 Cela permet de convertir facilement du binaire en hexad\u00e9cimal en regroupant les bits par paquets de 4. exemple \\(111011_{2}\\) On regroupe par 4 bits (en partant de la droite) : 0011 1011 3 B Donc \\(111011_2 = 3B_{16}\\) Exercice Convertir en d\u00e9cimal : \\(FF_{16}\\) \\(1A3_{16}\\) Convertir en binaire : \\(7C4_{16}\\) \\(FADA_{16}\\) Convertir en hexad\u00e9cimal : \\(1999_{10}\\) \\(59400_{10}\\) \\(111100_{2}\\) \\(110100101111_{2}\\)","title":"Lien entre binaire et hexad\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base_int/#entier-relatif","text":"Jusqu\u2019ici, nous avons vu la repr\u00e9sentation des entiers positifs . Mais il faut aussi repr\u00e9senter les entiers relatifs (positifs et n\u00e9gatifs).","title":"Entier relatif"},{"location":"Premieres/Chapitres/Types_de_base_int/#nombre-de-bits-necessaires","text":"En binaire, la taille d\u2019un entier est d\u00e9termin\u00e9e par le nombre de bits utilis\u00e9s. Avec n bits, on peut repr\u00e9senter au maximum : \\[ 0 \\; \\leqslant \\; N \\; < \\; 2^n \\] Exemple : - avec 8 bits (1 octet), on peut repr\u00e9senter 256 valeurs distinctes (de 0 \u00e0 255). - avec 16 bits , on peut repr\u00e9senter 65 536 valeurs (de 0 \u00e0 65 535). Les tailles courantes Les tailles les plus utilis\u00e9es en informatique sont : 8 bits (1 octet) 16 bits (2 octets) 32 bits (4 octets) 64 bits (8 octets) Chaque taille limite l\u2019intervalle de valeurs possibles. Questions Combien de valeurs diff\u00e9rentes peut-on repr\u00e9senter avec : 1. 5 bits ? 2. 10 bits ? 3. 32 bits ?","title":"Nombre de bits n\u00e9cessaires"},{"location":"Premieres/Chapitres/Types_de_base_int/#premiere-idee-utiliser-un-bit-de-signe","text":"Une premi\u00e8re id\u00e9e consiste \u00e0 r\u00e9server le bit de poids fort (le plus \u00e0 gauche) pour indiquer le signe : - 0 \u2192 nombre positif - 1 \u2192 nombre n\u00e9gatif On aurait alors les repr\u00e9sentations suivantes sur 3 bits : n\u00e9gatif positif 0 100 000 1 101 001 2 110 010 3 111 011 Probl\u00e8mes de cette m\u00e9thode Deux repr\u00e9sentations pour la valeur 0. Cela introduit une incoh\u00e9rence et gaspille une combinaison binaire. Addition incorrecte Exemple avec \\( 5 + (-5) \\) sur 8 bits: \\(00000101_2 + 10000101_2 = 10001010_2\\) C'est \u00e0 dire \\(5 - 5 = - 10\\) , ce qui est \u00e9videmment faux ! Il faut donc trouver une autre m\u00e9thode. Exercice - Donner les repr\u00e9sentations binaires des valeurs entre -5 et 5 sur 4 bits. - Donner les repr\u00e9sentations binaires des valeurs -67 sur 8 bits.","title":"Premi\u00e8re id\u00e9e : utiliser un bit de signe"},{"location":"Premieres/Chapitres/Types_de_base_int/#solution-le-complement-a-2","text":"Pour corriger ces probl\u00e8mes, on utilise la m\u00e9thode du compl\u00e9ment \u00e0 2 . L\u2019id\u00e9e est comparable \u00e0 un compteur : - Si on compte en arri\u00e8re depuis 0 , on obtient directement le dernier nombre possible. - Exemple en base d\u00e9cimale avec deux chiffres : apr\u00e8s 00 , si on soustrait 1, on tombe sur 99 , puis 98 , etc. De la m\u00eame mani\u00e8re, en binaire, on utilise le \"rebouclage\" naturel des bits pour coder les nombres n\u00e9gatifs. n\u00e9gatif positif 0 000 1 111 001 2 110 010 3 101 011 4 100","title":"Solution : le compl\u00e9ment \u00e0 2"},{"location":"Premieres/Chapitres/Types_de_base_int/#methode-de-construction","text":"La m\u00e9thode est simple : Pour repr\u00e9senter un nombre n\u00e9gatif, on \u00e9crit en binaire sa valeur absolue, on inverse ensuite tous les bits, puis on ajoute 1. Exemple Imaginons que nous codions sur 4 bits. Nous voulons repr\u00e9senter la valeur -5. \\(5_{10} = 101_2\\) sur 4 bits : \\(0101_2\\) inversion des bits : \\(1010_2\\) +1 \u2192 \\(1011_2\\) Sur 4 bits, on r\u00e9presente donc -5 comme ceci : \\(1011_2\\) . Exercice Coder en compl\u00e9ment \u00e0 2 sur 4 bits les valeurs entre -5 et 5 sur 4 bits. Cette fois-ci l'addition fonctionne : Exemple Essayons de nouveau \\(5 + (-5)\\) sur 8 bits, c'est \u00e0 dire : \\(00000101_2 + 11111011_2\\) retenue 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 + 1 1 1 1 1 1 0 1 1 = 1 0 0 0 0 0 0 0 0 0 On obtient alors : \\(100000000_2\\) , or nous sommes sur 8 bits donc on a bien : \\(5_{10} + (-5_{10}) = 00000101_2 + 11111011_2 = 00000000_2 = 0_{10}\\) Exercice V\u00e9rifier \u00e0 la main les additions suivantes en compl\u00e9ment \u00e0 2 (sur 4 bits) : 1. \\(2 + (-2)\\) 2. \\(3 + (-1)\\) 3. \\(-3 + (-2)\\) Exercice Donner l\u2019intervalle des entiers repr\u00e9sentables avec : 1. 8 bits non sign\u00e9s 2. 8 bits avec bit de signe 3. 8 bits en compl\u00e9ment \u00e0 2 Jusqu\u2019ici, nous avons vu comment repr\u00e9senter et manipuler des nombres. En programmation, il est souvent n\u00e9cessaire de prendre des d\u00e9cisions : ex\u00e9cuter certaines instructions seulement si une condition est vraie. En Python, cela se fait avec les mots-cl\u00e9s if , elif et else .","title":"M\u00e9thode de construction"},{"location":"Premieres/Chapitres/Types_de_base_str/","text":"Les cha\u00eenes de caract\u00e8res ( str ) D\u00e9finition Une cha\u00eene de caract\u00e8res est une suite ordonn\u00e9e de symboles (lettres, chiffres, ponctuation, espaces\u2026). En Python, une cha\u00eene est de type str . On peut l\u2019\u00e9crire entre guillemets simples '...' ou guillemets doubles \"...\" . Si la cha\u00eenes est sur plusieurs lignes on utilisera trois guillemets simples. Exemples : mot = \"Bonjour\" lettre = 'A' phrase = \"Ceci est une phrase.\" multi-ligne = '''Ceci est une cha\u00eene de caract\u00e9res tr\u00e8s longue ''' ASCII ASCII signifie American Standard Code for Information Interchange (en fran\u00e7ais : Code am\u00e9ricain standard pour l\u2019\u00e9change d\u2019informations). C\u2019est une norme de codage des caract\u00e8res cr\u00e9\u00e9e dans les ann\u00e9es 1960. Elle associe chaque symbole (lettre, chiffre, ponctuation, contr\u00f4le) \u00e0 un nombre entier. L\u2019id\u00e9e : comme l\u2019ordinateur ne comprend que des nombres (en binaire), il faut une correspondance caract\u00e8re \u2194 nombre. Exemple Un texte encod\u00e9 ressemeble donc \u00e0 ce ceci : \"NSI\" -> 4E 53 49 -> 01001110 01010011 01001001 Exercices Exercice 1 : Conversion binaire \u2192 texte On te donne la suite binaire suivante (chaque octet correspond \u00e0 un caract\u00e8re ASCII) : 0100100001100101011011000110110001101111 S\u00e9parer chaque octet et convertis-le en d\u00e9cimal. Trouver le caract\u00e8re ASCII correspondant \u00e0 chaque nombre. Recomposer la cha\u00eene de caract\u00e8res. Question : Quelle est la cha\u00eene finale ? Exercice 2 : Conversion hexad\u00e9cimal \u2192 texte On te donne la suite hexad\u00e9cimale suivante : 54 75 74 6F 72 Convertis chaque code hexad\u00e9cimal en d\u00e9cimal. Trouve le caract\u00e8re ASCII correspondant. Recompose le mot complet. Question : Quel est le mot obtenu ? ISO-8859-1 et manipulation des caract\u00e8res en Python Apr\u00e8s la norme ASCII, une extension appel\u00e9e ISO-8859-1 (ou Latin-1) a \u00e9t\u00e9 cr\u00e9\u00e9e pour repr\u00e9senter les caract\u00e8res utilis\u00e9s dans les langues europ\u00e9ennes. Contrairement \u00e0 ASCII qui utilise 7 bits (128 caract\u00e8res), ISO-8859-1 utilise 8 bits et peut coder 256 caract\u00e8res , incluant les lettres accentu\u00e9es (\u00e9, \u00e0, \u00fc, etc.), ainsi que certains symboles suppl\u00e9mentaires. Cette norme permet donc de g\u00e9rer beaucoup plus de textes europ\u00e9ens qu\u2019ASCII. En Python, on peut manipuler facilement les codes des caract\u00e8res gr\u00e2ce aux fonctions int\u00e9gr\u00e9es : ord(caract\u00e8re) : retourne le code num\u00e9rique du caract\u00e8re (ASCII ou ISO-8859-1). >>> ord('\u00e9') # str -> int (d\u00e9cimal) 233 chr(code) : retourne le caract\u00e8re correspondant \u00e0 un code num\u00e9rique. >>> chr(233) # int (d\u00e9cimal) -> str \u00e9 Codage universel : UTF-8 Les normes comme ASCII et ISO-8859-1 permettent de coder respectivement l\u2019anglais et les langues d\u2019Europe de l\u2019Ouest. Mais il ne s\u2019agit l\u00e0 que d\u2019une petite partie des besoins : d\u2019autres alphabets (grec, cyrillique, arabe, h\u00e9breu, chinois, japonais, cor\u00e9en, etc.) des symboles math\u00e9matiques, des caract\u00e8res techniques, et, plus r\u00e9cemment, les \u00e9motic\u00f4nes et emojis. Avec seulement 1 octet (256 possibilit\u00e9s), il est impossible de repr\u00e9senter tous ces caract\u00e8res. C\u2019est pour r\u00e9pondre \u00e0 ce probl\u00e8me qu\u2019a \u00e9t\u00e9 cr\u00e9\u00e9e la norme Unicode, qui attribue \u00e0 chaque caract\u00e8re du monde un num\u00e9ro unique (point de code). Cependant, il fallait \u00e9galement d\u00e9finir un mode de repr\u00e9sentation en m\u00e9moire de ces points de code. \u00c0 la fin des ann\u00e9es 1990, un nouvel encodage s\u2019impose progressivement : UTF-8. Il sera adopt\u00e9 massivement au cours des ann\u00e9es 2000, devenant le standard du web et des syst\u00e8mes modernes. UTF-8 s\u2019appuie sur le point de code de chaque caract\u00e8re. Un point de code est un identifiant num\u00e9rique unique d\u00e9fini par la norme Unicode, qui r\u00e9pertorie aujourd\u2019hui pr\u00e8s de 138 000 caract\u00e8res. Les 256 premiers points de code correspondent aux caract\u00e8res de l\u2019ISO-8859-1, assurant ainsi la compatibilit\u00e9 avec les alphabets occidentaux. On note un point de code sous la forme U+xxxx, o\u00f9 xxxx est la valeur en hexad\u00e9cimal. Exemples U+00E0 correspond au caract\u00e8re \u00e0 U+0052 correspond au caract\u00e8re R Conversion Les 127 premiers caract\u00e8res (0 \u00e0 127) sont cod\u00e9s sur un seul octet : UTF-8 est donc totalement compatible avec ASCII. Les autres caract\u00e8res n\u00e9cessitent plusieurs octets (jusqu\u2019\u00e0 4 octets). R\u00e8gles d\u2019encodage Cas ASCII (1 octet) : Si le bit de poids fort (le premier \u00e0 gauche) vaut 0, l\u2019octet correspond directement \u00e0 un caract\u00e8re ASCII (cod\u00e9 sur les 7 bits restants). Caract\u00e8res sur plusieurs octets : Si le bit de poids fort vaut 1, alors la s\u00e9quence de bits initiaux indique le nombre total d\u2019octets utilis\u00e9s pour repr\u00e9senter le caract\u00e8re. Cette s\u00e9quence se compose d\u2019une s\u00e9rie de 1 cons\u00e9cutifs suivis d\u2019un 0. Exemples 0xxxxxxx \u2192 le caract\u00e8re est cod\u00e9 sur 1 octet 110xxxxx \u2192 encodage sur 2 octets 1110xxxx \u2192 encodage sur 3 octets 11110xxx \u2192 encodage sur 4 octets Octets de continuation Dans un encodage sur k octets, les k \u2212 1 octets suivants (appel\u00e9s octets de continuation) commencent toujours par 10. Leur forme est donc 10xxxxxx. Nombre d'octets Forme de la repr\u00e9sentation binaire Caract\u00e8res (points de code 1 0 xxxxxxx U+0000 -> U+007F 2 110 xxxxx 10 xxxxxx U+0080 -> U+07FF 3 1110 xxxx 10 xxxxxx 10 xxxxxx U+0800 -> U+FFFF 4 11110 xxx 10 xxxxxx 10 xxxxxx 10 xxxxxx U+10000 -> U+10FFFF Exercices Vous aurez besoin des fonctions ord() et chr() . Convertir les caract\u00e8res suivants en UTF-8 (donner la valeur binaire puis hexad\u00e9cimale) : - A - z - 0 - ? - \u00e9 - \u00e7 - \u00e0 Donner la repr\u00e9sentation UTF-8 (binaire puis hexad\u00e9cimale) des caract\u00e8res suivants : - \u20ac (U+20AC) - \u03a9 (U+03A9) - \u6f22 (U+6F22) On vous donne des s\u00e9quences UTF-8. Donner le caract\u00e8re correspondant. 01000001 11000011 10101001 11100010 10000010 10101101 11100110 10111101 10100000 En python Concat\u00e9nation ( + ) prenom = \"Ada\" nom = \"Lovelace\" print(prenom + \" \" + nom) # Ada Lovelace R\u00e9p\u00e9tition ( * ) rire = \"ha\" print(rire * 3) # hahaha Longueur ( len ) texte = \"Bonjour\" print(len(texte)) # 7 Acc\u00e8s par indice Chaque caract\u00e8re est accessible par son indice (position, en commen\u00e7ant \u00e0 0) : mot = \"Python\" print(mot[0]) # P print(mot[3]) # h Tranches (slices) On peut extraire une partie de la cha\u00eene : mot = \"Python\" print(mot[1:4]) # yth (du 2e caract\u00e8re inclus au 4e exclu) print(mot[-2:]) # on (les 2 derniers caract\u00e8res) print(mot[:-2]) # Pyth (tout sauf les 2 derniers) print(mot[::2]) # Pto (un caract\u00e8re sur deux) print(mot[1::2]) # yhn (un caract\u00e8re sur deux en commen\u00e7ant \u00e0 l\u2019indice 1) print(mot[::-1]) # nohtyP (toute la cha\u00eene \u00e0 l\u2019envers) print(mot[3:0:-1]) # hty (du 4e caract\u00e8re vers le 1er en sens inverse) Fonctions utiles texte = \"bonjour\" print(texte.upper()) # BONJOUR print(texte.capitalize()) # Bonjour print(texte.isalpha()) # True si uniquement des lettres print(texte.isdigit()) # True si uniquement des chiffres print(\"123\".isdigit()) # True Caract\u00e9res sp\u00e9ciaux \\n : saut de ligne (newline) \\t : tabulation (tab) \\\\ : antislash \\' : apostrophe simple \\\" : guillemet double Parcours On peut parcourir les cha\u00eenes de caract\u00e9res gr\u00e2ce \u00e0 une boucle for . a = \"azerty\" for c in a: print(c) affichera : a z e r t y Exercices Exercice 1 Demander un mot et afficher son premier et son dernier caract\u00e8re. Exercice 2 Demander une phrase et afficher sa longueur. Exercice 3 V\u00e9rifier si une cha\u00eene donn\u00e9e contient uniquement des chiffres. Exercice 4 \u00c9crire un programme qui inverse une cha\u00eene de caract\u00e8res (sans utiliser un pas n\u00e9gatif). Exercice 5 \u00c9crire un programme qui compte le nombre de fois qu'un caract\u00e9re pr\u00e9cis apparait dans une cha\u00eene de caract\u00e9res. Exercice 6 Demander un mot et afficher \"Palindrome\" s\u2019il se lit dans les deux sens. Exercice 7 \u00c9crire un programme qui affiche une chaine de caract\u00e9re en plusieurs parties distinctes. Chaque partie commence apr\u00e8s une virgule. Salut, \u00e7a va ? donne donc : Salut ca va ? Exercice 8 Le code de C\u00e9sar est une m\u00e9thode de chiffrement tr\u00e8s simple utilis\u00e9e par Jules C\u00e9sar dans ses correspondances secr\u00e8tes (ce qui explique le nom). L'id\u00e9e est simple, nous choisissons une cl\u00e9 qui correspond \u00e0 un d\u00e9calage que nous allons appliquer sur chacun des caract\u00e9res du message. Exemple : Message : NSI Cl\u00e9 : 1 Message cod\u00e9 : OTJ Message : NSI Cl\u00e9 : 25 Message cod\u00e9 : MRK Imaginer un programme qui demande un message et une cl\u00e9 et qui affiche le message cod\u00e9 correspondant.","title":"Types de base (cha\u00eenes de caract\u00e9res)"},{"location":"Premieres/Chapitres/Types_de_base_str/#les-chaines-de-caracteres-str","text":"","title":"Les cha\u00eenes de caract\u00e8res (str)"},{"location":"Premieres/Chapitres/Types_de_base_str/#definition","text":"Une cha\u00eene de caract\u00e8res est une suite ordonn\u00e9e de symboles (lettres, chiffres, ponctuation, espaces\u2026). En Python, une cha\u00eene est de type str . On peut l\u2019\u00e9crire entre guillemets simples '...' ou guillemets doubles \"...\" . Si la cha\u00eenes est sur plusieurs lignes on utilisera trois guillemets simples. Exemples : mot = \"Bonjour\" lettre = 'A' phrase = \"Ceci est une phrase.\" multi-ligne = '''Ceci est une cha\u00eene de caract\u00e9res tr\u00e8s longue '''","title":"D\u00e9finition"},{"location":"Premieres/Chapitres/Types_de_base_str/#ascii","text":"ASCII signifie American Standard Code for Information Interchange (en fran\u00e7ais : Code am\u00e9ricain standard pour l\u2019\u00e9change d\u2019informations). C\u2019est une norme de codage des caract\u00e8res cr\u00e9\u00e9e dans les ann\u00e9es 1960. Elle associe chaque symbole (lettre, chiffre, ponctuation, contr\u00f4le) \u00e0 un nombre entier. L\u2019id\u00e9e : comme l\u2019ordinateur ne comprend que des nombres (en binaire), il faut une correspondance caract\u00e8re \u2194 nombre. Exemple Un texte encod\u00e9 ressemeble donc \u00e0 ce ceci : \"NSI\" -> 4E 53 49 -> 01001110 01010011 01001001 Exercices","title":"ASCII"},{"location":"Premieres/Chapitres/Types_de_base_str/#exercice-1-conversion-binaire-texte","text":"On te donne la suite binaire suivante (chaque octet correspond \u00e0 un caract\u00e8re ASCII) : 0100100001100101011011000110110001101111 S\u00e9parer chaque octet et convertis-le en d\u00e9cimal. Trouver le caract\u00e8re ASCII correspondant \u00e0 chaque nombre. Recomposer la cha\u00eene de caract\u00e8res. Question : Quelle est la cha\u00eene finale ?","title":"Exercice 1 : Conversion binaire \u2192 texte"},{"location":"Premieres/Chapitres/Types_de_base_str/#exercice-2-conversion-hexadecimal-texte","text":"On te donne la suite hexad\u00e9cimale suivante : 54 75 74 6F 72 Convertis chaque code hexad\u00e9cimal en d\u00e9cimal. Trouve le caract\u00e8re ASCII correspondant. Recompose le mot complet. Question : Quel est le mot obtenu ?","title":"Exercice 2 : Conversion hexad\u00e9cimal \u2192 texte"},{"location":"Premieres/Chapitres/Types_de_base_str/#iso-8859-1-et-manipulation-des-caracteres-en-python","text":"Apr\u00e8s la norme ASCII, une extension appel\u00e9e ISO-8859-1 (ou Latin-1) a \u00e9t\u00e9 cr\u00e9\u00e9e pour repr\u00e9senter les caract\u00e8res utilis\u00e9s dans les langues europ\u00e9ennes. Contrairement \u00e0 ASCII qui utilise 7 bits (128 caract\u00e8res), ISO-8859-1 utilise 8 bits et peut coder 256 caract\u00e8res , incluant les lettres accentu\u00e9es (\u00e9, \u00e0, \u00fc, etc.), ainsi que certains symboles suppl\u00e9mentaires. Cette norme permet donc de g\u00e9rer beaucoup plus de textes europ\u00e9ens qu\u2019ASCII. En Python, on peut manipuler facilement les codes des caract\u00e8res gr\u00e2ce aux fonctions int\u00e9gr\u00e9es : ord(caract\u00e8re) : retourne le code num\u00e9rique du caract\u00e8re (ASCII ou ISO-8859-1). >>> ord('\u00e9') # str -> int (d\u00e9cimal) 233 chr(code) : retourne le caract\u00e8re correspondant \u00e0 un code num\u00e9rique. >>> chr(233) # int (d\u00e9cimal) -> str \u00e9","title":"ISO-8859-1 et manipulation des caract\u00e8res en Python"},{"location":"Premieres/Chapitres/Types_de_base_str/#codage-universel-utf-8","text":"Les normes comme ASCII et ISO-8859-1 permettent de coder respectivement l\u2019anglais et les langues d\u2019Europe de l\u2019Ouest. Mais il ne s\u2019agit l\u00e0 que d\u2019une petite partie des besoins : d\u2019autres alphabets (grec, cyrillique, arabe, h\u00e9breu, chinois, japonais, cor\u00e9en, etc.) des symboles math\u00e9matiques, des caract\u00e8res techniques, et, plus r\u00e9cemment, les \u00e9motic\u00f4nes et emojis. Avec seulement 1 octet (256 possibilit\u00e9s), il est impossible de repr\u00e9senter tous ces caract\u00e8res. C\u2019est pour r\u00e9pondre \u00e0 ce probl\u00e8me qu\u2019a \u00e9t\u00e9 cr\u00e9\u00e9e la norme Unicode, qui attribue \u00e0 chaque caract\u00e8re du monde un num\u00e9ro unique (point de code). Cependant, il fallait \u00e9galement d\u00e9finir un mode de repr\u00e9sentation en m\u00e9moire de ces points de code. \u00c0 la fin des ann\u00e9es 1990, un nouvel encodage s\u2019impose progressivement : UTF-8. Il sera adopt\u00e9 massivement au cours des ann\u00e9es 2000, devenant le standard du web et des syst\u00e8mes modernes. UTF-8 s\u2019appuie sur le point de code de chaque caract\u00e8re. Un point de code est un identifiant num\u00e9rique unique d\u00e9fini par la norme Unicode, qui r\u00e9pertorie aujourd\u2019hui pr\u00e8s de 138 000 caract\u00e8res. Les 256 premiers points de code correspondent aux caract\u00e8res de l\u2019ISO-8859-1, assurant ainsi la compatibilit\u00e9 avec les alphabets occidentaux. On note un point de code sous la forme U+xxxx, o\u00f9 xxxx est la valeur en hexad\u00e9cimal. Exemples U+00E0 correspond au caract\u00e8re \u00e0 U+0052 correspond au caract\u00e8re R","title":"Codage universel : UTF-8"},{"location":"Premieres/Chapitres/Types_de_base_str/#conversion","text":"Les 127 premiers caract\u00e8res (0 \u00e0 127) sont cod\u00e9s sur un seul octet : UTF-8 est donc totalement compatible avec ASCII. Les autres caract\u00e8res n\u00e9cessitent plusieurs octets (jusqu\u2019\u00e0 4 octets). R\u00e8gles d\u2019encodage Cas ASCII (1 octet) : Si le bit de poids fort (le premier \u00e0 gauche) vaut 0, l\u2019octet correspond directement \u00e0 un caract\u00e8re ASCII (cod\u00e9 sur les 7 bits restants). Caract\u00e8res sur plusieurs octets : Si le bit de poids fort vaut 1, alors la s\u00e9quence de bits initiaux indique le nombre total d\u2019octets utilis\u00e9s pour repr\u00e9senter le caract\u00e8re. Cette s\u00e9quence se compose d\u2019une s\u00e9rie de 1 cons\u00e9cutifs suivis d\u2019un 0. Exemples 0xxxxxxx \u2192 le caract\u00e8re est cod\u00e9 sur 1 octet 110xxxxx \u2192 encodage sur 2 octets 1110xxxx \u2192 encodage sur 3 octets 11110xxx \u2192 encodage sur 4 octets Octets de continuation Dans un encodage sur k octets, les k \u2212 1 octets suivants (appel\u00e9s octets de continuation) commencent toujours par 10. Leur forme est donc 10xxxxxx. Nombre d'octets Forme de la repr\u00e9sentation binaire Caract\u00e8res (points de code 1 0 xxxxxxx U+0000 -> U+007F 2 110 xxxxx 10 xxxxxx U+0080 -> U+07FF 3 1110 xxxx 10 xxxxxx 10 xxxxxx U+0800 -> U+FFFF 4 11110 xxx 10 xxxxxx 10 xxxxxx 10 xxxxxx U+10000 -> U+10FFFF Exercices Vous aurez besoin des fonctions ord() et chr() . Convertir les caract\u00e8res suivants en UTF-8 (donner la valeur binaire puis hexad\u00e9cimale) : - A - z - 0 - ? - \u00e9 - \u00e7 - \u00e0 Donner la repr\u00e9sentation UTF-8 (binaire puis hexad\u00e9cimale) des caract\u00e8res suivants : - \u20ac (U+20AC) - \u03a9 (U+03A9) - \u6f22 (U+6F22) On vous donne des s\u00e9quences UTF-8. Donner le caract\u00e8re correspondant. 01000001 11000011 10101001 11100010 10000010 10101101 11100110 10111101 10100000","title":"Conversion"},{"location":"Premieres/Chapitres/Types_de_base_str/#en-python","text":"","title":"En python"},{"location":"Premieres/Chapitres/Types_de_base_str/#concatenation","text":"prenom = \"Ada\" nom = \"Lovelace\" print(prenom + \" \" + nom) # Ada Lovelace","title":"Concat\u00e9nation (+)"},{"location":"Premieres/Chapitres/Types_de_base_str/#repetition","text":"rire = \"ha\" print(rire * 3) # hahaha","title":"R\u00e9p\u00e9tition (*)"},{"location":"Premieres/Chapitres/Types_de_base_str/#longueur-len","text":"texte = \"Bonjour\" print(len(texte)) # 7","title":"Longueur (len)"},{"location":"Premieres/Chapitres/Types_de_base_str/#acces-par-indice","text":"Chaque caract\u00e8re est accessible par son indice (position, en commen\u00e7ant \u00e0 0) : mot = \"Python\" print(mot[0]) # P print(mot[3]) # h","title":"Acc\u00e8s par indice"},{"location":"Premieres/Chapitres/Types_de_base_str/#tranches-slices","text":"On peut extraire une partie de la cha\u00eene : mot = \"Python\" print(mot[1:4]) # yth (du 2e caract\u00e8re inclus au 4e exclu) print(mot[-2:]) # on (les 2 derniers caract\u00e8res) print(mot[:-2]) # Pyth (tout sauf les 2 derniers) print(mot[::2]) # Pto (un caract\u00e8re sur deux) print(mot[1::2]) # yhn (un caract\u00e8re sur deux en commen\u00e7ant \u00e0 l\u2019indice 1) print(mot[::-1]) # nohtyP (toute la cha\u00eene \u00e0 l\u2019envers) print(mot[3:0:-1]) # hty (du 4e caract\u00e8re vers le 1er en sens inverse)","title":"Tranches (slices)"},{"location":"Premieres/Chapitres/Types_de_base_str/#fonctions-utiles","text":"texte = \"bonjour\" print(texte.upper()) # BONJOUR print(texte.capitalize()) # Bonjour print(texte.isalpha()) # True si uniquement des lettres print(texte.isdigit()) # True si uniquement des chiffres print(\"123\".isdigit()) # True","title":"Fonctions utiles"},{"location":"Premieres/Chapitres/Types_de_base_str/#caracteres-speciaux","text":"\\n : saut de ligne (newline) \\t : tabulation (tab) \\\\ : antislash \\' : apostrophe simple \\\" : guillemet double","title":"Caract\u00e9res sp\u00e9ciaux"},{"location":"Premieres/Chapitres/Types_de_base_str/#parcours","text":"On peut parcourir les cha\u00eenes de caract\u00e9res gr\u00e2ce \u00e0 une boucle for . a = \"azerty\" for c in a: print(c) affichera : a z e r t y","title":"Parcours"},{"location":"Premieres/Chapitres/Types_de_base_str/#exercices","text":"","title":"Exercices"},{"location":"Premieres/Chapitres/Types_de_base_str/#exercice-1","text":"Demander un mot et afficher son premier et son dernier caract\u00e8re.","title":"Exercice 1"},{"location":"Premieres/Chapitres/Types_de_base_str/#exercice-2","text":"Demander une phrase et afficher sa longueur.","title":"Exercice 2"},{"location":"Premieres/Chapitres/Types_de_base_str/#exercice-3","text":"V\u00e9rifier si une cha\u00eene donn\u00e9e contient uniquement des chiffres.","title":"Exercice 3"},{"location":"Premieres/Chapitres/Types_de_base_str/#exercice-4","text":"\u00c9crire un programme qui inverse une cha\u00eene de caract\u00e8res (sans utiliser un pas n\u00e9gatif).","title":"Exercice 4"},{"location":"Premieres/Chapitres/Types_de_base_str/#exercice-5","text":"\u00c9crire un programme qui compte le nombre de fois qu'un caract\u00e9re pr\u00e9cis apparait dans une cha\u00eene de caract\u00e9res.","title":"Exercice 5"},{"location":"Premieres/Chapitres/Types_de_base_str/#exercice-6","text":"Demander un mot et afficher \"Palindrome\" s\u2019il se lit dans les deux sens.","title":"Exercice 6"},{"location":"Premieres/Chapitres/Types_de_base_str/#exercice-7","text":"\u00c9crire un programme qui affiche une chaine de caract\u00e9re en plusieurs parties distinctes. Chaque partie commence apr\u00e8s une virgule. Salut, \u00e7a va ? donne donc : Salut ca va ?","title":"Exercice 7"},{"location":"Premieres/Chapitres/Types_de_base_str/#exercice-8","text":"Le code de C\u00e9sar est une m\u00e9thode de chiffrement tr\u00e8s simple utilis\u00e9e par Jules C\u00e9sar dans ses correspondances secr\u00e8tes (ce qui explique le nom). L'id\u00e9e est simple, nous choisissons une cl\u00e9 qui correspond \u00e0 un d\u00e9calage que nous allons appliquer sur chacun des caract\u00e9res du message. Exemple : Message : NSI Cl\u00e9 : 1 Message cod\u00e9 : OTJ Message : NSI Cl\u00e9 : 25 Message cod\u00e9 : MRK Imaginer un programme qui demande un message et une cl\u00e9 et qui affiche le message cod\u00e9 correspondant.","title":"Exercice 8"},{"location":"Secondes/Secondes/","text":"SNT - Secondes L\u2019enseignement de Sciences Num\u00e9riques et Technologie (SNT) en classe de Seconde permet de d\u00e9couvrir les principaux concepts du num\u00e9rique et de comprendre l\u2019impact croissant des technologies sur notre quotidien. Les mobiles, ordinateurs et objets connect\u00e9s sont des exemples concrets : ils permettent de communiquer, de cr\u00e9er, de se localiser, de traiter des donn\u00e9es et d\u2019interagir avec le monde. Cet enseignement s\u2019appuie sur quelques concepts fondamentaux : - Les donn\u00e9es : textes, images, sons, mesures\u2026 tout peut \u00eatre repr\u00e9sent\u00e9 num\u00e9riquement. - Les algorithmes : instructions permettant de traiter ces donn\u00e9es. - Les langages : pour traduire les algorithmes en programmes ex\u00e9cutables. - Les machines et objets connect\u00e9s : pour ex\u00e9cuter les programmes et g\u00e9rer les donn\u00e9es. - Les interfaces : pour interagir avec les humains et les syst\u00e8mes. L\u2019objectif est de mieux comprendre le num\u00e9rique, ses enjeux scientifiques et soci\u00e9taux, et d\u2019adopter un usage r\u00e9fl\u00e9chi et responsable des technologies. Chaque th\u00e8me du programme (Internet, Web, r\u00e9seaux sociaux, donn\u00e9es, localisation, objets connect\u00e9s, photographie num\u00e9rique\u2026) est accompagn\u00e9 de projets, travaux pratiques et activit\u00e9s pour mettre en pratique les connaissances. Expos\u00e9s \ud83d\udd3a Les expos\u00e9s Python \ud83d\udd38 Print, variables et input \ud83d\udd38 Entiers et conditions Chapitres \ud83d\udd39 Internet","title":"Accueil"},{"location":"Secondes/Secondes/#snt-secondes","text":"L\u2019enseignement de Sciences Num\u00e9riques et Technologie (SNT) en classe de Seconde permet de d\u00e9couvrir les principaux concepts du num\u00e9rique et de comprendre l\u2019impact croissant des technologies sur notre quotidien. Les mobiles, ordinateurs et objets connect\u00e9s sont des exemples concrets : ils permettent de communiquer, de cr\u00e9er, de se localiser, de traiter des donn\u00e9es et d\u2019interagir avec le monde. Cet enseignement s\u2019appuie sur quelques concepts fondamentaux : - Les donn\u00e9es : textes, images, sons, mesures\u2026 tout peut \u00eatre repr\u00e9sent\u00e9 num\u00e9riquement. - Les algorithmes : instructions permettant de traiter ces donn\u00e9es. - Les langages : pour traduire les algorithmes en programmes ex\u00e9cutables. - Les machines et objets connect\u00e9s : pour ex\u00e9cuter les programmes et g\u00e9rer les donn\u00e9es. - Les interfaces : pour interagir avec les humains et les syst\u00e8mes. L\u2019objectif est de mieux comprendre le num\u00e9rique, ses enjeux scientifiques et soci\u00e9taux, et d\u2019adopter un usage r\u00e9fl\u00e9chi et responsable des technologies. Chaque th\u00e8me du programme (Internet, Web, r\u00e9seaux sociaux, donn\u00e9es, localisation, objets connect\u00e9s, photographie num\u00e9rique\u2026) est accompagn\u00e9 de projets, travaux pratiques et activit\u00e9s pour mettre en pratique les connaissances.","title":"SNT - Secondes"},{"location":"Secondes/Secondes/#exposes","text":"\ud83d\udd3a Les expos\u00e9s","title":"Expos\u00e9s"},{"location":"Secondes/Secondes/#python","text":"\ud83d\udd38 Print, variables et input \ud83d\udd38 Entiers et conditions","title":"Python"},{"location":"Secondes/Secondes/#chapitres","text":"\ud83d\udd39 Internet","title":"Chapitres"},{"location":"Secondes/exposes/","text":"Organisation des expos\u00e9s SNT Format des expos\u00e9s Travail en groupe : Groupe de 2 \u00e9l\u00e8ves \u2192 expos\u00e9 de 8 \u00e0 12 minutes Groupe de 3 \u00e9l\u00e8ves \u2192 expos\u00e9 de 12 \u00e0 15 minutes Sujet libre , \u00e0 condition qu\u2019il soit en lien avec le num\u00e9rique , l\u2019 informatique ou les technologies . Doublons possibles : plusieurs groupes peuvent traiter le m\u00eame th\u00e8me g\u00e9n\u00e9ral , mais la partie r\u00e9flexive obligatoire (analyse d\u2019un enjeu concret li\u00e9 au num\u00e9rique / informatique / technologie) doit \u00eatre unique \u00e0 chaque groupe. Plan attendu Chaque expos\u00e9 doit \u00eatre structur\u00e9 et comprendre : 1. Une pr\u00e9sentation du sujet choisi 2. Une partie r\u00e9flexive obligatoire qui relie le num\u00e9rique / la technologie \u00e0 des enjeux concrets dans le monde r\u00e9el (soci\u00e9t\u00e9, \u00e9conomie, politique, culture, \u00e9thique, sant\u00e9, etc.) 3. Une conclusion qui synth\u00e9tise les apports et ouvre sur une r\u00e9flexion plus large. Inspirations th\u00e9matiques Choisissez un sujet qui vous int\u00e9resse ou qui vous passionne : un jeu, un film, un r\u00e9seau social, une exp\u00e9rience, une ou un scientifique, une technologie, un \u00e9v\u00e9nement historique... Exemples de sujets Minecraft TikTok Les femmes dans l\u2019histoire de l\u2019informatique La r\u00e9gulation des plateformes de streaming (exemple : Kick vs Twitch) Alan Turing : vie, mort et h\u00e9ritage scientifique Les fake news et leur propagation World of Warcraft : l\u2019\u00e9pid\u00e9mie virtuelle comme mod\u00e8le d\u2019\u00e9tude scientifique Exemples de parties r\u00e9flexives Minecraft \u2192 le jeu sur les r\u00e9seaux sociaux / la tomatostone et les op\u00e9rations logiques / les changements apr\u00e8s le rachat par Microsoft TikTok \u2192 l\u2019algorithme de recommandation / les effets du doomscrolling / la vie priv\u00e9e et l\u2019exploitation des donn\u00e9es / les nouveaux m\u00e9tiers li\u00e9s \u00e0 la plateforme Doomscrolling \u2192 enjeux psychologiques et soci\u00e9taux Fake news \u2192 impacts politiques et d\u00e9mocratiques World of Warcraft \u2192 ce que l\u2019\u00e9pid\u00e9mie virtuelle a appris aux scientifiques Organisation et calendrier 30 septembre \u2192 Tous les groupes sont constitu\u00e9s (sinon le professeur les formera) 19 octobre \u2192 Chaque groupe a un sujet et un plan valid\u00e9s par le professeur 7 novembre \u2192 Publication de l\u2019ordre de passage Du 10 novembre au 19 d\u00e9cembre \u2192 Expos\u00e9s en classe Consignes Pr\u00e9parez un support visuel (PowerPoint, Google Slides, Canva, affiche, etc.) pour clarifier vos explications. R\u00e9partissez bien la parole entre les membres du groupe . Utilisez des exemples concrets ou des comparaisons pour rendre votre expos\u00e9 plus accessible. La partie r\u00e9flexive est essentielle : elle doit montrer que vous \u00eates capables de prendre du recul sur votre sujet. Indiquez vos sources ! (m\u00eame si ce sont des vid\u00e9os YouTube, tant que vous ne vous contentez pas de r\u00e9p\u00e9ter). Bar\u00e8me (sur 10 points) Crit\u00e8re Points Description Recul et analyse du sujet 2 Mise en lien du th\u00e8me avec des enjeux concrets, capacit\u00e9 \u00e0 prendre du recul Qualit\u00e9 du support visuel 2 Support clair, lisible, bien construit et utile \u00e0 l\u2019expos\u00e9 Clart\u00e9 des propos 2 Explications compr\u00e9hensibles, vocabulaire adapt\u00e9, bonne structuration Dynamisme et oral 2 Capacit\u00e9 \u00e0 capter l\u2019attention, engagement, gestion du temps, contact public R\u00e9partition de la parole 1 Participation \u00e9quilibr\u00e9e de tous les membres du groupe Vari\u00e9t\u00e9 des sources 1 Utilisation de plusieurs sources fiables et pertinentes Groupes Groupes form\u00e9es : - 2B : 100 % - 2D : 82 % - 2E : 67 % - 2F : 91 % Pas de panique ! Ceci n'est pas l'ordre de passage. Groupes Sujet Recul Classe Capucine G. Clivia V. Carla V. 2B Florent C. Hugo D. Nathael W. 2B Camille D. Eloise D. Sharon B. 2B Hatim Z. Emma L. Manel B. 2B Ilyes T. Thomas L. Adrien L. 2B Sacha D. Noah G. Gaston D. 2B Maissan E. Diana K. 2B Leo B. Lonny D. 2B Laly E. Maelle V. Lou D. 2B Kylian G. Ethan L. 2B Kamron R. Arthur M. 2B Martin B. Lucas S. 2B Elsa S. Manon V. 2B Emelyne F. Anne-rose B. 2D Camille C. Arthur P. Milo M. 2D Donovan F. Lucas H. Lucas F. 2D Altay K. Luca B. Maxence C. 2D Coleen A. Karolina L. Maelle D. 2D Camille B. Lena C. 2D Valentin G. Lucas W. 2D Lenaic D. Axel F. 2D Laura G. Gwenaelle L. 2D Zelie B. Emma M. Nina C. 2D Charlotte D. Iris D. 2D Alicia D. Leane D. 2D Emma P. Zelie S. 2E Nolhan D. Yelen P. Noe D. 2E Sarah G. Ilana B. Elize P. 2E Anais B. Romane L. 2E Lola C. Elyse N. Lana F. 2E Louis M. Tom C. 2E Melanie M. Suzanne M. 2E Lilian S. Simon M. Charly S. 2E Noeline B. Anais T. 2E Ines O. Tom O. 2E Zelie P-L. Pauline B. Naomie C. 2F Matteo B. Louis B. 2F Yoan B. Luka D. 2F Jules D. Flavien D. 2F Ilyes E. Nolan B 2F Matheo B. Hugo B. 2F Nolan H. Alexis V. 2F Maelys V. Louane H. Elora B. 2F Thimeo F. Axel P. 2F Camille B. Noham J. 2F Zelie M. Tess P. 2F Souad M. Zoe P. 2F Ocelia R. Chloe G. Noa T. 2F Giovanni C. Cyprien L. 2F","title":"Expos\u00e9s"},{"location":"Secondes/exposes/#organisation-des-exposes-snt","text":"","title":"Organisation des expos\u00e9s SNT"},{"location":"Secondes/exposes/#format-des-exposes","text":"Travail en groupe : Groupe de 2 \u00e9l\u00e8ves \u2192 expos\u00e9 de 8 \u00e0 12 minutes Groupe de 3 \u00e9l\u00e8ves \u2192 expos\u00e9 de 12 \u00e0 15 minutes Sujet libre , \u00e0 condition qu\u2019il soit en lien avec le num\u00e9rique , l\u2019 informatique ou les technologies . Doublons possibles : plusieurs groupes peuvent traiter le m\u00eame th\u00e8me g\u00e9n\u00e9ral , mais la partie r\u00e9flexive obligatoire (analyse d\u2019un enjeu concret li\u00e9 au num\u00e9rique / informatique / technologie) doit \u00eatre unique \u00e0 chaque groupe.","title":"Format des expos\u00e9s"},{"location":"Secondes/exposes/#plan-attendu","text":"Chaque expos\u00e9 doit \u00eatre structur\u00e9 et comprendre : 1. Une pr\u00e9sentation du sujet choisi 2. Une partie r\u00e9flexive obligatoire qui relie le num\u00e9rique / la technologie \u00e0 des enjeux concrets dans le monde r\u00e9el (soci\u00e9t\u00e9, \u00e9conomie, politique, culture, \u00e9thique, sant\u00e9, etc.) 3. Une conclusion qui synth\u00e9tise les apports et ouvre sur une r\u00e9flexion plus large.","title":"Plan attendu"},{"location":"Secondes/exposes/#inspirations-thematiques","text":"Choisissez un sujet qui vous int\u00e9resse ou qui vous passionne : un jeu, un film, un r\u00e9seau social, une exp\u00e9rience, une ou un scientifique, une technologie, un \u00e9v\u00e9nement historique...","title":"Inspirations th\u00e9matiques"},{"location":"Secondes/exposes/#exemples-de-sujets","text":"Minecraft TikTok Les femmes dans l\u2019histoire de l\u2019informatique La r\u00e9gulation des plateformes de streaming (exemple : Kick vs Twitch) Alan Turing : vie, mort et h\u00e9ritage scientifique Les fake news et leur propagation World of Warcraft : l\u2019\u00e9pid\u00e9mie virtuelle comme mod\u00e8le d\u2019\u00e9tude scientifique","title":"Exemples de sujets"},{"location":"Secondes/exposes/#exemples-de-parties-reflexives","text":"Minecraft \u2192 le jeu sur les r\u00e9seaux sociaux / la tomatostone et les op\u00e9rations logiques / les changements apr\u00e8s le rachat par Microsoft TikTok \u2192 l\u2019algorithme de recommandation / les effets du doomscrolling / la vie priv\u00e9e et l\u2019exploitation des donn\u00e9es / les nouveaux m\u00e9tiers li\u00e9s \u00e0 la plateforme Doomscrolling \u2192 enjeux psychologiques et soci\u00e9taux Fake news \u2192 impacts politiques et d\u00e9mocratiques World of Warcraft \u2192 ce que l\u2019\u00e9pid\u00e9mie virtuelle a appris aux scientifiques","title":"Exemples de parties r\u00e9flexives"},{"location":"Secondes/exposes/#organisation-et-calendrier","text":"30 septembre \u2192 Tous les groupes sont constitu\u00e9s (sinon le professeur les formera) 19 octobre \u2192 Chaque groupe a un sujet et un plan valid\u00e9s par le professeur 7 novembre \u2192 Publication de l\u2019ordre de passage Du 10 novembre au 19 d\u00e9cembre \u2192 Expos\u00e9s en classe","title":"Organisation et calendrier"},{"location":"Secondes/exposes/#consignes","text":"Pr\u00e9parez un support visuel (PowerPoint, Google Slides, Canva, affiche, etc.) pour clarifier vos explications. R\u00e9partissez bien la parole entre les membres du groupe . Utilisez des exemples concrets ou des comparaisons pour rendre votre expos\u00e9 plus accessible. La partie r\u00e9flexive est essentielle : elle doit montrer que vous \u00eates capables de prendre du recul sur votre sujet. Indiquez vos sources ! (m\u00eame si ce sont des vid\u00e9os YouTube, tant que vous ne vous contentez pas de r\u00e9p\u00e9ter).","title":"Consignes"},{"location":"Secondes/exposes/#bareme-sur-10-points","text":"Crit\u00e8re Points Description Recul et analyse du sujet 2 Mise en lien du th\u00e8me avec des enjeux concrets, capacit\u00e9 \u00e0 prendre du recul Qualit\u00e9 du support visuel 2 Support clair, lisible, bien construit et utile \u00e0 l\u2019expos\u00e9 Clart\u00e9 des propos 2 Explications compr\u00e9hensibles, vocabulaire adapt\u00e9, bonne structuration Dynamisme et oral 2 Capacit\u00e9 \u00e0 capter l\u2019attention, engagement, gestion du temps, contact public R\u00e9partition de la parole 1 Participation \u00e9quilibr\u00e9e de tous les membres du groupe Vari\u00e9t\u00e9 des sources 1 Utilisation de plusieurs sources fiables et pertinentes","title":"Bar\u00e8me (sur 10 points)"},{"location":"Secondes/exposes/#groupes","text":"Groupes form\u00e9es : - 2B : 100 % - 2D : 82 % - 2E : 67 % - 2F : 91 % Pas de panique ! Ceci n'est pas l'ordre de passage. Groupes Sujet Recul Classe Capucine G. Clivia V. Carla V. 2B Florent C. Hugo D. Nathael W. 2B Camille D. Eloise D. Sharon B. 2B Hatim Z. Emma L. Manel B. 2B Ilyes T. Thomas L. Adrien L. 2B Sacha D. Noah G. Gaston D. 2B Maissan E. Diana K. 2B Leo B. Lonny D. 2B Laly E. Maelle V. Lou D. 2B Kylian G. Ethan L. 2B Kamron R. Arthur M. 2B Martin B. Lucas S. 2B Elsa S. Manon V. 2B Emelyne F. Anne-rose B. 2D Camille C. Arthur P. Milo M. 2D Donovan F. Lucas H. Lucas F. 2D Altay K. Luca B. Maxence C. 2D Coleen A. Karolina L. Maelle D. 2D Camille B. Lena C. 2D Valentin G. Lucas W. 2D Lenaic D. Axel F. 2D Laura G. Gwenaelle L. 2D Zelie B. Emma M. Nina C. 2D Charlotte D. Iris D. 2D Alicia D. Leane D. 2D Emma P. Zelie S. 2E Nolhan D. Yelen P. Noe D. 2E Sarah G. Ilana B. Elize P. 2E Anais B. Romane L. 2E Lola C. Elyse N. Lana F. 2E Louis M. Tom C. 2E Melanie M. Suzanne M. 2E Lilian S. Simon M. Charly S. 2E Noeline B. Anais T. 2E Ines O. Tom O. 2E Zelie P-L. Pauline B. Naomie C. 2F Matteo B. Louis B. 2F Yoan B. Luka D. 2F Jules D. Flavien D. 2F Ilyes E. Nolan B 2F Matheo B. Hugo B. 2F Nolan H. Alexis V. 2F Maelys V. Louane H. Elora B. 2F Thimeo F. Axel P. 2F Camille B. Noham J. 2F Zelie M. Tess P. 2F Souad M. Zoe P. 2F Ocelia R. Chloe G. Noa T. 2F Giovanni C. Cyprien L. 2F","title":"Groupes"},{"location":"Secondes/Chapitres/Internet/","text":"\ud83c\udf10 SNT \u2013 Internet Internet = un r\u00e9seau de r\u00e9seaux Internet n\u2019est pas une seule machine g\u00e9ante. C\u2019est en r\u00e9alit\u00e9 un immense ensemble de r\u00e9seaux interconnect\u00e9s : Les r\u00e9seaux locaux (LAN, Local Area Network) Exemple : votre maison (box Internet + ordinateurs + t\u00e9l\u00e9phones connect\u00e9s en Wi-Fi ou en c\u00e2ble). Exemple : le r\u00e9seau du lyc\u00e9e (salles informatiques, imprimantes, serveurs p\u00e9dagogiques). Exemple : le r\u00e9seau d\u2019une entreprise. Ces r\u00e9seaux sont priv\u00e9s et limit\u00e9s dans l\u2019espace (on les appelle des r\u00e9seaux locaux ). Les Fournisseurs d\u2019Acc\u00e8s \u00e0 Internet (FAI) Pour communiquer avec le reste du monde, un r\u00e9seau local doit se connecter \u00e0 un Fournisseur d\u2019Acc\u00e8s \u00e0 Internet (FAI) : - En France : Orange, SFR, Free, Bouygues, etc. - Dans d\u2019autres pays : AT&T, Deutsche Telekom, etc. Un FAI g\u00e8re un r\u00e9seau beaucoup plus vaste qui relie des millions de clients. L\u2019interconnexion mondiale Les r\u00e9seaux des FAI sont eux-m\u00eames reli\u00e9s entre eux par de tr\u00e8s grandes lignes de communication (fibre optique, c\u00e2bles sous-marins, satellites). Les grandes entreprises (Google, Amazon, Microsoft, etc.) poss\u00e8dent aussi leurs propres r\u00e9seaux qui s\u2019interconnectent avec les FAI. R\u00e9sultat : Quand vous envoyez un message, il sort d\u2019abord de votre r\u00e9seau local \u2192 passe par le r\u00e9seau de votre FAI \u2192 traverse plusieurs autres r\u00e9seaux \u2192 atteint le r\u00e9seau du destinataire. Id\u00e9e cl\u00e9 \u00e0 retenir : Internet, c\u2019est l\u2019interconnexion de milliers de r\u00e9seaux locaux et de fournisseurs d\u2019acc\u00e8s \u00e0 l\u2019\u00e9chelle mondiale, qui communiquent tous gr\u00e2ce \u00e0 des protocoles communs . Histoire de la cr\u00e9ation d'Internet Internet trouve ses origines dans le contexte de la Guerre froide, o\u00f9 les \u00c9tats-Unis cherchaient \u00e0 d\u00e9velopper un r\u00e9seau de communication r\u00e9silient capable de fonctionner m\u00eame en cas de panne partielle ou d\u2019attaque. Dans les ann\u00e9es 1960, les universit\u00e9s et laboratoires de recherche ont commenc\u00e9 \u00e0 \u00eatre reli\u00e9s pour partager rapidement des informations et des ressources informatiques, ce qui a pos\u00e9 les bases des r\u00e9seaux \u00e0 grande \u00e9chelle. En 1970, ARPANET a \u00e9t\u00e9 cr\u00e9\u00e9 par l\u2019agence am\u00e9ricaine ARPA comme premier r\u00e9seau \u00e0 transmission par paquets, permettant de d\u00e9couper les messages en petites unit\u00e9s envoy\u00e9es ind\u00e9pendamment, puis r\u00e9assembl\u00e9es \u00e0 l\u2019arriv\u00e9e. En parall\u00e8le, en France, le r\u00e9seau exp\u00e9rimental Cyclades a \u00e9t\u00e9 d\u00e9velopp\u00e9 \u00e0 partir de 1971 sous la direction de Louis Pouzin, apportant des id\u00e9es fondamentales sur l\u2019adressage des paquets et la logique de communication d\u00e9centralis\u00e9e. Ces exp\u00e9rimentations ont conduit \u00e0 l\u2019adoption, en 1983, du mod\u00e9le TCP/IP, qui a standardis\u00e9 la fa\u00e7on dont les ordinateurs communiquent entre eux, marquant ainsi la naissance officielle d\u2019Internet tel que nous le connaissons aujourd\u2019hui. Cette \u00e9volution a ouvert la voie \u00e0 la g\u00e9n\u00e9ralisation des r\u00e9seaux interconnect\u00e9s \u00e0 l\u2019\u00e9chelle mondiale et \u00e0 l\u2019\u00e9mergence du Web dans les ann\u00e9es 90. Mod\u00e8le en couches TCP/IP La communication sur un r\u00e9seau se fait gr\u00e2ce \u00e0 des protocoles, qui sont des r\u00e8gles d\u00e9finissant comment les donn\u00e9es sont envoy\u00e9es, re\u00e7ues et comprises par les machines. Le mod\u00e9le TCP/IP organise la communication en 4 couches , chacune ayant un r\u00f4le sp\u00e9cifique et ses protocoles. Quand on envoie un message ou un fichier sur Internet, il n\u2019est jamais envoy\u00e9 en un seul bloc, mais d\u00e9coup\u00e9 en petits morceaux appel\u00e9s paquets . Chaque couche y ajoute des informations sp\u00e9cifiques (adresse de destination, num\u00e9ro du paquet, etc) avant de transmettre les donn\u00e9es, c'est l' encapsulation . \u00c0 la r\u00e9ception, chaque couche retire son en-t\u00eate pour reconstituer les donn\u00e9es originales c\u2019est la d\u00e9sencapsulation . Le protocole IP et l\u2019adressage Chaque appareil connect\u00e9 \u00e0 Internet doit \u00eatre identifiable de mani\u00e8re unique . Pour cela, deux types d\u2019adresses existent : Adresse MAC (adressage local) Chaque machine dispose d\u2019une ou plusieurs cartes r\u00e9seau (Wi-Fi, Ethernet\u2026) \u00e0 laquelle est attribu\u00e9e une adresse physique unique au monde : l\u2019adresse MAC qui n'est utilis\u00e9e que dans le r\u00e9seau local . Format : 6 blocs de 2 caract\u00e8res hexadecimal (0->9 + a->f) (ex. a1:b2:c3:d4:e5:f6 ). Adresse IP (adressage global) Chaque machine connect\u00e9e \u00e0 Internet re\u00e7oit une adresse IP , qui sert d\u2019 identifiant logique pour la retrouver parmi des milliards d\u2019autres. Elle change r\u00e9guli\u00e9rement. Compos\u00e9e de deux parties : R\u00e9seau \u2192 identifie le r\u00e9seau auquel appartient la machine. H\u00f4te (machine) \u2192 identifie l\u2019appareil dans ce r\u00e9seau. Les premi\u00e8res adresses IP \u00e9taient au format IPv4 , c'est-\u00e0-dire 4 nombres d\u00e9cimaux entre 0 et 255, comme ceci: 91.198.174.192 (serveur Wikip\u00e9dia) 127.0.0.1 \u2192 adresse sp\u00e9ciale localhost (sa propre machine) Cependant, ce format ne nous permet d'utiliser que 4 milliards d\u2019adresses , insuffisant pour le nombre d\u2019appareils connect\u00e9s. Encore aujourd'hui, nous faisons la transition vers un nouveau format IPv6 compos\u00e9e de 8 groupes de 4 caract\u00e8res hexad\u00e9cimaux (0\u20139, a\u2013f), s\u00e9par\u00e9s par des deux-points : 2001:0db8:100f:f000:0000:0000:0000:0001 (Wikip\u00e9dia en IPv6). Nous avons d\u00e9sormais 18 millions de milliards d'adresses possibles. DNS \u2013 Domain Name System Quand vous tapez un nom de site dans votre navigateur, par exemple wikipedia.org , votre ordinateur ne sait pas directement o\u00f9 envoyer les paquets, il a besoin de l\u2019adresse IP correspondante. Pour \u00e9viter d'avoir \u00e0 se souvenir des IPs de tous les sites, nous utilisons le DNS. Le DNS (Domain Name System) est un service qui fait la correspondance entre le Nom symbolique et l'Adresse IP par le biais de serveurs DNS. TCP et UDP : deux fa\u00e7ons de transmettre Chaque message envoy\u00e9 sur Internet est d\u00e9coup\u00e9 en paquets . Mais la mani\u00e8re de g\u00e9rer leur transmission d\u00e9pend du protocole choisi : UDP (User Datagram Protocol) Rapide : pas de v\u00e9rification ni de r\u00e9ordonnancement. Si un paquet est perdu \u2192 pas renvoy\u00e9. Utilis\u00e9 pour : visioconf\u00e9rence, streaming, jeux en ligne. La machine qui re\u00e7oit, envoie une requ\u00eate, puis l'autre machine envoie les paquets \u00e0 la cha\u00eene. Des pertes sont donc possibles. TCP (Transmission Control Protocol) Fiable : tous les paquets doivent arriver. Contr\u00f4le : accus\u00e9s de r\u00e9ception (ACK), r\u00e9ordonnancement. Utilis\u00e9 pour : mails, t\u00e9l\u00e9chargements, pages web. Les machines commencent par effectuer ce que l\u2019on appelle une triple poign\u00e9e de main . La machine qui envoie partage un num\u00e9ro pour se synchroniser (SYN). L\u2019autre r\u00e9pond avec un accus\u00e9 de r\u00e9ception (ACK) et fournit \u00e0 son tour un num\u00e9ro pour se synchroniser. La machine qui envoie transmet donc aussi un accus\u00e9 de r\u00e9ception. Ensuite, pour chaque paquet envoy\u00e9, la machine qui re\u00e7oit renvoie un accus\u00e9 de r\u00e9ception afin d\u2019\u00e9viter les pertes. Routage : comment les paquets voyagent ? Un paquet ne va jamais en ligne droite . Il traverse plusieurs routeurs, chacun choisissant le \u00ab meilleur chemin \u00bb au moment T. Un routeur est un appareil qui transmet les paquets de donn\u00e9es d\u2019un r\u00e9seau \u00e0 un autre. Chaque routeur conna\u00eet une carte locale seulement. Les paquets peuvent suivre des chemins diff\u00e9rents. Si un routeur tombe en panne, le trafic est r\u00e9orient\u00e9 automatiquement. Chaque routeur utilise une table de routage pour savoir o\u00f9 envoyer les paquets. Cette table liste toutes les destinations possibles et indique, pour chacune, vers quel appareil (routeur ou machine) envoyer le paquet afin de suivre le chemin le plus court jusqu\u2019\u00e0 sa destination. Exercice 1 : Remplir la table de routage suivante. Exercice 2 : Le routeur 4 tombe en panne, les tables de routage sont mise \u00e0 jour. Remplir les tables de routages des routeurs. R\u00e9seaux pair-\u00e0-pair (P2P) Dans un r\u00e9seau classique, les machines se connectent \u00e0 un serveur central qui g\u00e8re les donn\u00e9es (ex. : Netflix, YouTube, un site web). C'est ce que l'on appelle le modele client/serveur . Au centre : un serveur . Autour : plusieurs clients connect\u00e9s uniquement au serveur. Mais il existe un autre mod\u00e8le : le r\u00e9seau pair-\u00e0-pair (P2P) . Dans un r\u00e9seau P2P , chaque machine (appel\u00e9e un pair ) est \u00e0 la fois client et serveur : - Elle t\u00e9l\u00e9charge des donn\u00e9es depuis d\u2019autres pairs. - Elle partage en m\u00eame temps ses propres donn\u00e9es avec d\u2019autres. Exemples : Certains logiciel (ex. Windows) ou jeux (ex. Blizzard avec Battle.net, ou Steam pour certaines fonctionnalit\u00e9s) utilisent le P2P pour distribuer les mises \u00e0 jour aux joueurs. Les cryptomonnaies (ex. Bitcoin, Ethereum) fonctionnent en r\u00e9seau pair-\u00e0-pair. Les avantages Tr\u00e8s efficace pour partager de gros fichiers (les donn\u00e9es sont r\u00e9parties entre plusieurs sources). Pas besoin d\u2019un serveur central \u2192 le r\u00e9seau est plus r\u00e9silient . Les limites Certains usages l\u00e9gaux : distribution de mises \u00e0 jour de jeux vid\u00e9o, partage scientifique, logiciels libres. Mais aussi des usages illicites : piratage de films, musique, logiciels \u2192 ce qui pose des probl\u00e8mes juridiques . Types de r\u00e9seaux physiques et trafic Internet Types de r\u00e9seaux physiques Les r\u00e9seaux physiques d\u00e9signent la fa\u00e7on dont les donn\u00e9es circulent r\u00e9ellement entre les appareils. On peut les caract\u00e9riser ainsi : Obsol\u00e8tes / anciens : - Modem RTC : ligne t\u00e9l\u00e9phonique, tr\u00e8s lent (~56 kb/s) - C\u00e2ble coaxial ou ADSL : vitesse limit\u00e9e, adapt\u00e9e pour un usage basique Actuels / rapides : - Fibre optique : tr\u00e8s haut d\u00e9bit, fiable, adapt\u00e9e \u00e0 la vid\u00e9o HD et aux jeux en ligne - C\u00e2ble Ethernet moderne (CAT5e, CAT6) : stable, rapide, utilis\u00e9 en LAN - Wi-Fi : sans fil, pratique mais sensible aux interf\u00e9rences et aux distances - 4G/5G : mobile, rapide et flexible mais d\u00e9pendant de la couverture r\u00e9seau Filaire vs Sans fil : - Filaire : plus stable, moins sujet aux perturbations, d\u00e9bit constant - Sans fil : pratique, mobilit\u00e9, mais d\u00e9bits et stabilit\u00e9 variables Trafic Internet et son \u00e9volution Internet transporte des milliards de donn\u00e9es chaque seconde : emails, vid\u00e9os, jeux, fichiers, sites web. Ordre de grandeur du trafic : Ann\u00e9es 1990 : quelques dizaines de Go/jour Ann\u00e9es 2000 : plusieurs To/jour Aujourd'hui : plusieurs centaines de Po/jour (1 Po = 1 million de Go) \u00c9volution : Forte augmentation avec le streaming vid\u00e9o, les r\u00e9seaux sociaux, les objets connect\u00e9s et le t\u00e9l\u00e9travail N\u00e9cessit\u00e9 de r\u00e9seaux \u00e0 haut d\u00e9bit et fiables pour suivre la demande croissante Rappel : ko = kilooctet (1 000 octets) Mo = m\u00e9gaoctet (1 000 000 octets) Go = gigaoctet (1 000 000 000 octets) Zo = zettaoctet (1 000 000 000 000 000 000 000 000 octets) Un mail fait environ 2 millions octets. 1 minute de vid\u00e9o en HD (~1080p) \u00e9quivaut \u00e0 environ 100 Mo = 100 millions d\u2019octets.","title":"Internet"},{"location":"Secondes/Chapitres/Internet/#snt-internet","text":"","title":"\ud83c\udf10 SNT \u2013 Internet"},{"location":"Secondes/Chapitres/Internet/#internet-un-reseau-de-reseaux","text":"Internet n\u2019est pas une seule machine g\u00e9ante. C\u2019est en r\u00e9alit\u00e9 un immense ensemble de r\u00e9seaux interconnect\u00e9s : Les r\u00e9seaux locaux (LAN, Local Area Network) Exemple : votre maison (box Internet + ordinateurs + t\u00e9l\u00e9phones connect\u00e9s en Wi-Fi ou en c\u00e2ble). Exemple : le r\u00e9seau du lyc\u00e9e (salles informatiques, imprimantes, serveurs p\u00e9dagogiques). Exemple : le r\u00e9seau d\u2019une entreprise. Ces r\u00e9seaux sont priv\u00e9s et limit\u00e9s dans l\u2019espace (on les appelle des r\u00e9seaux locaux ).","title":"Internet = un r\u00e9seau de r\u00e9seaux"},{"location":"Secondes/Chapitres/Internet/#les-fournisseurs-dacces-a-internet-fai","text":"Pour communiquer avec le reste du monde, un r\u00e9seau local doit se connecter \u00e0 un Fournisseur d\u2019Acc\u00e8s \u00e0 Internet (FAI) : - En France : Orange, SFR, Free, Bouygues, etc. - Dans d\u2019autres pays : AT&T, Deutsche Telekom, etc. Un FAI g\u00e8re un r\u00e9seau beaucoup plus vaste qui relie des millions de clients.","title":"Les Fournisseurs d\u2019Acc\u00e8s \u00e0 Internet (FAI)"},{"location":"Secondes/Chapitres/Internet/#linterconnexion-mondiale","text":"Les r\u00e9seaux des FAI sont eux-m\u00eames reli\u00e9s entre eux par de tr\u00e8s grandes lignes de communication (fibre optique, c\u00e2bles sous-marins, satellites). Les grandes entreprises (Google, Amazon, Microsoft, etc.) poss\u00e8dent aussi leurs propres r\u00e9seaux qui s\u2019interconnectent avec les FAI. R\u00e9sultat : Quand vous envoyez un message, il sort d\u2019abord de votre r\u00e9seau local \u2192 passe par le r\u00e9seau de votre FAI \u2192 traverse plusieurs autres r\u00e9seaux \u2192 atteint le r\u00e9seau du destinataire. Id\u00e9e cl\u00e9 \u00e0 retenir : Internet, c\u2019est l\u2019interconnexion de milliers de r\u00e9seaux locaux et de fournisseurs d\u2019acc\u00e8s \u00e0 l\u2019\u00e9chelle mondiale, qui communiquent tous gr\u00e2ce \u00e0 des protocoles communs .","title":"L\u2019interconnexion mondiale"},{"location":"Secondes/Chapitres/Internet/#histoire-de-la-creation-dinternet","text":"Internet trouve ses origines dans le contexte de la Guerre froide, o\u00f9 les \u00c9tats-Unis cherchaient \u00e0 d\u00e9velopper un r\u00e9seau de communication r\u00e9silient capable de fonctionner m\u00eame en cas de panne partielle ou d\u2019attaque. Dans les ann\u00e9es 1960, les universit\u00e9s et laboratoires de recherche ont commenc\u00e9 \u00e0 \u00eatre reli\u00e9s pour partager rapidement des informations et des ressources informatiques, ce qui a pos\u00e9 les bases des r\u00e9seaux \u00e0 grande \u00e9chelle. En 1970, ARPANET a \u00e9t\u00e9 cr\u00e9\u00e9 par l\u2019agence am\u00e9ricaine ARPA comme premier r\u00e9seau \u00e0 transmission par paquets, permettant de d\u00e9couper les messages en petites unit\u00e9s envoy\u00e9es ind\u00e9pendamment, puis r\u00e9assembl\u00e9es \u00e0 l\u2019arriv\u00e9e. En parall\u00e8le, en France, le r\u00e9seau exp\u00e9rimental Cyclades a \u00e9t\u00e9 d\u00e9velopp\u00e9 \u00e0 partir de 1971 sous la direction de Louis Pouzin, apportant des id\u00e9es fondamentales sur l\u2019adressage des paquets et la logique de communication d\u00e9centralis\u00e9e. Ces exp\u00e9rimentations ont conduit \u00e0 l\u2019adoption, en 1983, du mod\u00e9le TCP/IP, qui a standardis\u00e9 la fa\u00e7on dont les ordinateurs communiquent entre eux, marquant ainsi la naissance officielle d\u2019Internet tel que nous le connaissons aujourd\u2019hui. Cette \u00e9volution a ouvert la voie \u00e0 la g\u00e9n\u00e9ralisation des r\u00e9seaux interconnect\u00e9s \u00e0 l\u2019\u00e9chelle mondiale et \u00e0 l\u2019\u00e9mergence du Web dans les ann\u00e9es 90.","title":"Histoire de la cr\u00e9ation d'Internet"},{"location":"Secondes/Chapitres/Internet/#modele-en-couches-tcpip","text":"La communication sur un r\u00e9seau se fait gr\u00e2ce \u00e0 des protocoles, qui sont des r\u00e8gles d\u00e9finissant comment les donn\u00e9es sont envoy\u00e9es, re\u00e7ues et comprises par les machines. Le mod\u00e9le TCP/IP organise la communication en 4 couches , chacune ayant un r\u00f4le sp\u00e9cifique et ses protocoles. Quand on envoie un message ou un fichier sur Internet, il n\u2019est jamais envoy\u00e9 en un seul bloc, mais d\u00e9coup\u00e9 en petits morceaux appel\u00e9s paquets . Chaque couche y ajoute des informations sp\u00e9cifiques (adresse de destination, num\u00e9ro du paquet, etc) avant de transmettre les donn\u00e9es, c'est l' encapsulation . \u00c0 la r\u00e9ception, chaque couche retire son en-t\u00eate pour reconstituer les donn\u00e9es originales c\u2019est la d\u00e9sencapsulation .","title":"Mod\u00e8le en couches TCP/IP"},{"location":"Secondes/Chapitres/Internet/#le-protocole-ip-et-ladressage","text":"Chaque appareil connect\u00e9 \u00e0 Internet doit \u00eatre identifiable de mani\u00e8re unique . Pour cela, deux types d\u2019adresses existent :","title":"Le protocole IP et l\u2019adressage"},{"location":"Secondes/Chapitres/Internet/#adresse-mac-adressage-local","text":"Chaque machine dispose d\u2019une ou plusieurs cartes r\u00e9seau (Wi-Fi, Ethernet\u2026) \u00e0 laquelle est attribu\u00e9e une adresse physique unique au monde : l\u2019adresse MAC qui n'est utilis\u00e9e que dans le r\u00e9seau local . Format : 6 blocs de 2 caract\u00e8res hexadecimal (0->9 + a->f) (ex. a1:b2:c3:d4:e5:f6 ).","title":"Adresse MAC (adressage local)"},{"location":"Secondes/Chapitres/Internet/#adresse-ip-adressage-global","text":"Chaque machine connect\u00e9e \u00e0 Internet re\u00e7oit une adresse IP , qui sert d\u2019 identifiant logique pour la retrouver parmi des milliards d\u2019autres. Elle change r\u00e9guli\u00e9rement. Compos\u00e9e de deux parties : R\u00e9seau \u2192 identifie le r\u00e9seau auquel appartient la machine. H\u00f4te (machine) \u2192 identifie l\u2019appareil dans ce r\u00e9seau. Les premi\u00e8res adresses IP \u00e9taient au format IPv4 , c'est-\u00e0-dire 4 nombres d\u00e9cimaux entre 0 et 255, comme ceci: 91.198.174.192 (serveur Wikip\u00e9dia) 127.0.0.1 \u2192 adresse sp\u00e9ciale localhost (sa propre machine) Cependant, ce format ne nous permet d'utiliser que 4 milliards d\u2019adresses , insuffisant pour le nombre d\u2019appareils connect\u00e9s. Encore aujourd'hui, nous faisons la transition vers un nouveau format IPv6 compos\u00e9e de 8 groupes de 4 caract\u00e8res hexad\u00e9cimaux (0\u20139, a\u2013f), s\u00e9par\u00e9s par des deux-points : 2001:0db8:100f:f000:0000:0000:0000:0001 (Wikip\u00e9dia en IPv6). Nous avons d\u00e9sormais 18 millions de milliards d'adresses possibles.","title":"Adresse IP (adressage global)"},{"location":"Secondes/Chapitres/Internet/#dns-domain-name-system","text":"Quand vous tapez un nom de site dans votre navigateur, par exemple wikipedia.org , votre ordinateur ne sait pas directement o\u00f9 envoyer les paquets, il a besoin de l\u2019adresse IP correspondante. Pour \u00e9viter d'avoir \u00e0 se souvenir des IPs de tous les sites, nous utilisons le DNS. Le DNS (Domain Name System) est un service qui fait la correspondance entre le Nom symbolique et l'Adresse IP par le biais de serveurs DNS.","title":"DNS \u2013 Domain Name System"},{"location":"Secondes/Chapitres/Internet/#tcp-et-udp-deux-facons-de-transmettre","text":"Chaque message envoy\u00e9 sur Internet est d\u00e9coup\u00e9 en paquets . Mais la mani\u00e8re de g\u00e9rer leur transmission d\u00e9pend du protocole choisi :","title":"TCP et UDP : deux fa\u00e7ons de transmettre"},{"location":"Secondes/Chapitres/Internet/#udp-user-datagram-protocol","text":"Rapide : pas de v\u00e9rification ni de r\u00e9ordonnancement. Si un paquet est perdu \u2192 pas renvoy\u00e9. Utilis\u00e9 pour : visioconf\u00e9rence, streaming, jeux en ligne. La machine qui re\u00e7oit, envoie une requ\u00eate, puis l'autre machine envoie les paquets \u00e0 la cha\u00eene. Des pertes sont donc possibles.","title":"UDP (User Datagram Protocol)"},{"location":"Secondes/Chapitres/Internet/#tcp-transmission-control-protocol","text":"Fiable : tous les paquets doivent arriver. Contr\u00f4le : accus\u00e9s de r\u00e9ception (ACK), r\u00e9ordonnancement. Utilis\u00e9 pour : mails, t\u00e9l\u00e9chargements, pages web. Les machines commencent par effectuer ce que l\u2019on appelle une triple poign\u00e9e de main . La machine qui envoie partage un num\u00e9ro pour se synchroniser (SYN). L\u2019autre r\u00e9pond avec un accus\u00e9 de r\u00e9ception (ACK) et fournit \u00e0 son tour un num\u00e9ro pour se synchroniser. La machine qui envoie transmet donc aussi un accus\u00e9 de r\u00e9ception. Ensuite, pour chaque paquet envoy\u00e9, la machine qui re\u00e7oit renvoie un accus\u00e9 de r\u00e9ception afin d\u2019\u00e9viter les pertes.","title":"TCP (Transmission Control Protocol)"},{"location":"Secondes/Chapitres/Internet/#routage-comment-les-paquets-voyagent","text":"Un paquet ne va jamais en ligne droite . Il traverse plusieurs routeurs, chacun choisissant le \u00ab meilleur chemin \u00bb au moment T. Un routeur est un appareil qui transmet les paquets de donn\u00e9es d\u2019un r\u00e9seau \u00e0 un autre. Chaque routeur conna\u00eet une carte locale seulement. Les paquets peuvent suivre des chemins diff\u00e9rents. Si un routeur tombe en panne, le trafic est r\u00e9orient\u00e9 automatiquement. Chaque routeur utilise une table de routage pour savoir o\u00f9 envoyer les paquets. Cette table liste toutes les destinations possibles et indique, pour chacune, vers quel appareil (routeur ou machine) envoyer le paquet afin de suivre le chemin le plus court jusqu\u2019\u00e0 sa destination. Exercice 1 : Remplir la table de routage suivante. Exercice 2 : Le routeur 4 tombe en panne, les tables de routage sont mise \u00e0 jour. Remplir les tables de routages des routeurs.","title":"Routage : comment les paquets voyagent ?"},{"location":"Secondes/Chapitres/Internet/#reseaux-pair-a-pair-p2p","text":"Dans un r\u00e9seau classique, les machines se connectent \u00e0 un serveur central qui g\u00e8re les donn\u00e9es (ex. : Netflix, YouTube, un site web). C'est ce que l'on appelle le modele client/serveur . Au centre : un serveur . Autour : plusieurs clients connect\u00e9s uniquement au serveur. Mais il existe un autre mod\u00e8le : le r\u00e9seau pair-\u00e0-pair (P2P) . Dans un r\u00e9seau P2P , chaque machine (appel\u00e9e un pair ) est \u00e0 la fois client et serveur : - Elle t\u00e9l\u00e9charge des donn\u00e9es depuis d\u2019autres pairs. - Elle partage en m\u00eame temps ses propres donn\u00e9es avec d\u2019autres.","title":"R\u00e9seaux pair-\u00e0-pair (P2P)"},{"location":"Secondes/Chapitres/Internet/#exemples","text":"Certains logiciel (ex. Windows) ou jeux (ex. Blizzard avec Battle.net, ou Steam pour certaines fonctionnalit\u00e9s) utilisent le P2P pour distribuer les mises \u00e0 jour aux joueurs. Les cryptomonnaies (ex. Bitcoin, Ethereum) fonctionnent en r\u00e9seau pair-\u00e0-pair.","title":"Exemples :"},{"location":"Secondes/Chapitres/Internet/#les-avantages","text":"Tr\u00e8s efficace pour partager de gros fichiers (les donn\u00e9es sont r\u00e9parties entre plusieurs sources). Pas besoin d\u2019un serveur central \u2192 le r\u00e9seau est plus r\u00e9silient .","title":"Les avantages"},{"location":"Secondes/Chapitres/Internet/#les-limites","text":"Certains usages l\u00e9gaux : distribution de mises \u00e0 jour de jeux vid\u00e9o, partage scientifique, logiciels libres. Mais aussi des usages illicites : piratage de films, musique, logiciels \u2192 ce qui pose des probl\u00e8mes juridiques .","title":"Les limites"},{"location":"Secondes/Chapitres/Internet/#types-de-reseaux-physiques-et-trafic-internet","text":"","title":"Types de r\u00e9seaux physiques et trafic Internet"},{"location":"Secondes/Chapitres/Internet/#types-de-reseaux-physiques","text":"Les r\u00e9seaux physiques d\u00e9signent la fa\u00e7on dont les donn\u00e9es circulent r\u00e9ellement entre les appareils. On peut les caract\u00e9riser ainsi : Obsol\u00e8tes / anciens : - Modem RTC : ligne t\u00e9l\u00e9phonique, tr\u00e8s lent (~56 kb/s) - C\u00e2ble coaxial ou ADSL : vitesse limit\u00e9e, adapt\u00e9e pour un usage basique Actuels / rapides : - Fibre optique : tr\u00e8s haut d\u00e9bit, fiable, adapt\u00e9e \u00e0 la vid\u00e9o HD et aux jeux en ligne - C\u00e2ble Ethernet moderne (CAT5e, CAT6) : stable, rapide, utilis\u00e9 en LAN - Wi-Fi : sans fil, pratique mais sensible aux interf\u00e9rences et aux distances - 4G/5G : mobile, rapide et flexible mais d\u00e9pendant de la couverture r\u00e9seau Filaire vs Sans fil : - Filaire : plus stable, moins sujet aux perturbations, d\u00e9bit constant - Sans fil : pratique, mobilit\u00e9, mais d\u00e9bits et stabilit\u00e9 variables","title":"Types de r\u00e9seaux physiques"},{"location":"Secondes/Chapitres/Internet/#trafic-internet-et-son-evolution","text":"Internet transporte des milliards de donn\u00e9es chaque seconde : emails, vid\u00e9os, jeux, fichiers, sites web. Ordre de grandeur du trafic : Ann\u00e9es 1990 : quelques dizaines de Go/jour Ann\u00e9es 2000 : plusieurs To/jour Aujourd'hui : plusieurs centaines de Po/jour (1 Po = 1 million de Go) \u00c9volution : Forte augmentation avec le streaming vid\u00e9o, les r\u00e9seaux sociaux, les objets connect\u00e9s et le t\u00e9l\u00e9travail N\u00e9cessit\u00e9 de r\u00e9seaux \u00e0 haut d\u00e9bit et fiables pour suivre la demande croissante Rappel : ko = kilooctet (1 000 octets) Mo = m\u00e9gaoctet (1 000 000 octets) Go = gigaoctet (1 000 000 000 octets) Zo = zettaoctet (1 000 000 000 000 000 000 000 000 octets) Un mail fait environ 2 millions octets. 1 minute de vid\u00e9o en HD (~1080p) \u00e9quivaut \u00e0 environ 100 Mo = 100 millions d\u2019octets.","title":"Trafic Internet et son \u00e9volution"},{"location":"Secondes/Chapitres/bases_python/","text":"Cours : Bases de Python \u2013 Print, Variables et Input Objectifs : - Comprendre et utiliser print pour afficher des informations. - Cr\u00e9er et manipuler des variables. - Utiliser input pour r\u00e9cup\u00e9rer des donn\u00e9es de l\u2019utilisateur. 2. Affichage avec print Th\u00e9orie : - Syntaxe : print(\"texte\") Exemples : print(\"Bonjour Python !\") Exercice rapide : - Afficher votre nom et votre \u00e2ge. 3. Variables Th\u00e9orie : - D\u00e9finition d\u2019une variable : \"un nom qui contient une valeur\". - Affectation : nom_variable = valeur - Types de variables : nombres (int, float), cha\u00eenes (str), bool\u00e9ens (bool) - Conventions : noms clairs, pas d\u2019espaces, sensible \u00e0 la casse. Exemples : nom = \"Alice\" age = 17 print(nom, \"a\", age, \"ans\") Exercice pratique : - Cr\u00e9er deux variables : prenom et ville , puis les afficher dans une phrase. 4. R\u00e9cup\u00e9rer des donn\u00e9es avec input Th\u00e9orie : - Syntaxe : variable = input(\"Question \u00e0 l'utilisateur : \") - Les donn\u00e9es re\u00e7ues sont toujours de type str . - Conversion de type si n\u00e9cessaire : int(input(...)) ou float(input(...)) Exemples : nom = input(\"Quel est ton nom ? \") age = int(input(\"Quel est ton \u00e2ge ? \")) print(\"Bonjour\", nom, \"tu as\", age, \"ans\") Exercice pratique : - Demander \u00e0 l\u2019utilisateur son pr\u00e9nom et sa ville, puis afficher : \"Bonjour <pr\u00e9nom>, tu habites \u00e0 <ville>.\" - Bonus : demander l\u2019\u00e2ge et afficher : \"L\u2019an prochain, tu auras <\u00e2ge+1> ans.\" 5. Mise en pratique / mini-projet Combiner print , variables et input dans un petit script interactif. Exemple : un mini questionnaire ou calcul simple (ex : demander deux nombres et afficher leur somme). 6. Conclusion et r\u00e9capitulatif Points cl\u00e9s : - print = afficher - Variables = stocker des informations - input = r\u00e9cup\u00e9rer des informations","title":"Cours : Bases de Python \u2013 Print, Variables et Input"},{"location":"Secondes/Chapitres/bases_python/#cours-bases-de-python-print-variables-et-input","text":"Objectifs : - Comprendre et utiliser print pour afficher des informations. - Cr\u00e9er et manipuler des variables. - Utiliser input pour r\u00e9cup\u00e9rer des donn\u00e9es de l\u2019utilisateur.","title":"Cours : Bases de Python \u2013 Print, Variables et Input"},{"location":"Secondes/Chapitres/bases_python/#2-affichage-avec-print","text":"Th\u00e9orie : - Syntaxe : print(\"texte\") Exemples : print(\"Bonjour Python !\") Exercice rapide : - Afficher votre nom et votre \u00e2ge.","title":"2. Affichage avec print"},{"location":"Secondes/Chapitres/bases_python/#3-variables","text":"Th\u00e9orie : - D\u00e9finition d\u2019une variable : \"un nom qui contient une valeur\". - Affectation : nom_variable = valeur - Types de variables : nombres (int, float), cha\u00eenes (str), bool\u00e9ens (bool) - Conventions : noms clairs, pas d\u2019espaces, sensible \u00e0 la casse. Exemples : nom = \"Alice\" age = 17 print(nom, \"a\", age, \"ans\") Exercice pratique : - Cr\u00e9er deux variables : prenom et ville , puis les afficher dans une phrase.","title":"3. Variables"},{"location":"Secondes/Chapitres/bases_python/#4-recuperer-des-donnees-avec-input","text":"Th\u00e9orie : - Syntaxe : variable = input(\"Question \u00e0 l'utilisateur : \") - Les donn\u00e9es re\u00e7ues sont toujours de type str . - Conversion de type si n\u00e9cessaire : int(input(...)) ou float(input(...)) Exemples : nom = input(\"Quel est ton nom ? \") age = int(input(\"Quel est ton \u00e2ge ? \")) print(\"Bonjour\", nom, \"tu as\", age, \"ans\") Exercice pratique : - Demander \u00e0 l\u2019utilisateur son pr\u00e9nom et sa ville, puis afficher : \"Bonjour <pr\u00e9nom>, tu habites \u00e0 <ville>.\" - Bonus : demander l\u2019\u00e2ge et afficher : \"L\u2019an prochain, tu auras <\u00e2ge+1> ans.\"","title":"4. R\u00e9cup\u00e9rer des donn\u00e9es avec input"},{"location":"Secondes/Chapitres/bases_python/#5-mise-en-pratique-mini-projet","text":"Combiner print , variables et input dans un petit script interactif. Exemple : un mini questionnaire ou calcul simple (ex : demander deux nombres et afficher leur somme).","title":"5. Mise en pratique / mini-projet"},{"location":"Secondes/Chapitres/bases_python/#6-conclusion-et-recapitulatif","text":"Points cl\u00e9s : - print = afficher - Variables = stocker des informations - input = r\u00e9cup\u00e9rer des informations","title":"6. Conclusion et r\u00e9capitulatif"},{"location":"Secondes/Chapitres/python1/","text":"Cours 1 \u2013 Print, variables, input 1. Afficher du texte avec print En Python, la fonction print permet d\u2019afficher du texte \u00e0 l\u2019\u00e9cran. Il faut \u00e9crire le texte entre guillemets ( \" ou ' ) et mettre des parenth\u00e8ses . Exemple : print(\"Bonjour tout le monde !\") print('Python est un langage simple.') Les parenth\u00e8ses indiquent ce qu\u2019on veut afficher. Les guillemets indiquent qu\u2019il s\u2019agit d\u2019un texte (une cha\u00eene de caract\u00e8res, ou string ). Exercice 1 \u00c9cris un programme qui affiche une phrase vous pr\u00e9sentant (pr\u00e9nom, \u00e2ge, etc)... 2. Les variables Une variable permet de stocker une information et de la r\u00e9utiliser. On utilise le signe = pour donner une valeur \u00e0 une variable. Exemple : prenom = \"Alice\" print(prenom) R\u00e9sultat : Alice Ici, la variable prenom contient le texte \"Alice\" . Quand on \u00e9crit print(prenom) , Python affiche la valeur stock\u00e9e. On peut aussi changer la valeur d\u2019une variable : prenom = \"Alice\" prenom = \"Bob\" print(prenom) R\u00e9sultat : Bob Exercice 2 Cr\u00e9e une variable animal contenant le texte \"chien\" . Affiche son contenu avec print . Change la valeur de animal en \"chat\" et affiche-la \u00e0 nouveau. 3. Demander une valeur \u00e0 l\u2019utilisateur avec input La fonction input permet de poser une question \u00e0 l\u2019utilisateur et de r\u00e9cup\u00e9rer ce qu\u2019il \u00e9crit. Exemple : nom = input(\"Quel est ton nom ? \") print(\"Bonjour \", nom, \" !\") Le texte dans les parenth\u00e8ses de input est affich\u00e9 comme une question. Ce que l\u2019utilisateur \u00e9crit est stock\u00e9 dans une variable (ici nom ). On peut ensuite l\u2019afficher avec print . Exercice 3 \u00c9cris un programme qui : Demande ton pr\u00e9nom avec input . Affiche : Enchant\u00e9, <ton pr\u00e9nom> ! 4. Exercices Exercice 1 \u00c9cris un programme qui : Demande ton pr\u00e9nom avec input . Stocke la r\u00e9ponse dans une variable prenom . Affiche : Bonjour prenom , bienvenue dans ton premier programme Python ! Exercice 2 \u00c9cris un programme qui : Demande \u00e0 l\u2019utilisateur le nom d\u2019un animal. Stocke la r\u00e9ponse dans une variable animal . Affiche une phrase du type : J'aimerais avoir un animal . Exercice 3 \u00c9cris un programme qui : Demande \u00e0 l\u2019utilisateur son film pr\u00e9f\u00e9r\u00e9. Stocke la r\u00e9ponse dans une variable film . Affiche : Ton film pr\u00e9f\u00e9r\u00e9 est film .","title":"Cours 1 \u2013 Print, variables, input"},{"location":"Secondes/Chapitres/python1/#cours-1-print-variables-input","text":"","title":"Cours 1 \u2013 Print, variables, input"},{"location":"Secondes/Chapitres/python1/#1-afficher-du-texte-avec-print","text":"En Python, la fonction print permet d\u2019afficher du texte \u00e0 l\u2019\u00e9cran. Il faut \u00e9crire le texte entre guillemets ( \" ou ' ) et mettre des parenth\u00e8ses . Exemple : print(\"Bonjour tout le monde !\") print('Python est un langage simple.') Les parenth\u00e8ses indiquent ce qu\u2019on veut afficher. Les guillemets indiquent qu\u2019il s\u2019agit d\u2019un texte (une cha\u00eene de caract\u00e8res, ou string ).","title":"1. Afficher du texte avec print"},{"location":"Secondes/Chapitres/python1/#exercice-1","text":"\u00c9cris un programme qui affiche une phrase vous pr\u00e9sentant (pr\u00e9nom, \u00e2ge, etc)...","title":"Exercice 1"},{"location":"Secondes/Chapitres/python1/#2-les-variables","text":"Une variable permet de stocker une information et de la r\u00e9utiliser. On utilise le signe = pour donner une valeur \u00e0 une variable. Exemple : prenom = \"Alice\" print(prenom) R\u00e9sultat : Alice Ici, la variable prenom contient le texte \"Alice\" . Quand on \u00e9crit print(prenom) , Python affiche la valeur stock\u00e9e. On peut aussi changer la valeur d\u2019une variable : prenom = \"Alice\" prenom = \"Bob\" print(prenom) R\u00e9sultat : Bob","title":"2. Les variables"},{"location":"Secondes/Chapitres/python1/#exercice-2","text":"Cr\u00e9e une variable animal contenant le texte \"chien\" . Affiche son contenu avec print . Change la valeur de animal en \"chat\" et affiche-la \u00e0 nouveau.","title":"Exercice 2"},{"location":"Secondes/Chapitres/python1/#3-demander-une-valeur-a-lutilisateur-avec-input","text":"La fonction input permet de poser une question \u00e0 l\u2019utilisateur et de r\u00e9cup\u00e9rer ce qu\u2019il \u00e9crit. Exemple : nom = input(\"Quel est ton nom ? \") print(\"Bonjour \", nom, \" !\") Le texte dans les parenth\u00e8ses de input est affich\u00e9 comme une question. Ce que l\u2019utilisateur \u00e9crit est stock\u00e9 dans une variable (ici nom ). On peut ensuite l\u2019afficher avec print .","title":"3. Demander une valeur \u00e0 l\u2019utilisateur avec input"},{"location":"Secondes/Chapitres/python1/#exercice-3","text":"\u00c9cris un programme qui : Demande ton pr\u00e9nom avec input . Affiche : Enchant\u00e9, <ton pr\u00e9nom> !","title":"Exercice 3"},{"location":"Secondes/Chapitres/python1/#4-exercices","text":"","title":"4. Exercices"},{"location":"Secondes/Chapitres/python1/#exercice-1_1","text":"\u00c9cris un programme qui : Demande ton pr\u00e9nom avec input . Stocke la r\u00e9ponse dans une variable prenom . Affiche : Bonjour prenom , bienvenue dans ton premier programme Python !","title":"Exercice 1"},{"location":"Secondes/Chapitres/python1/#exercice-2_1","text":"\u00c9cris un programme qui : Demande \u00e0 l\u2019utilisateur le nom d\u2019un animal. Stocke la r\u00e9ponse dans une variable animal . Affiche une phrase du type : J'aimerais avoir un animal .","title":"Exercice 2"},{"location":"Secondes/Chapitres/python1/#exercice-3_1","text":"\u00c9cris un programme qui : Demande \u00e0 l\u2019utilisateur son film pr\u00e9f\u00e9r\u00e9. Stocke la r\u00e9ponse dans une variable film . Affiche : Ton film pr\u00e9f\u00e9r\u00e9 est film .","title":"Exercice 3"},{"location":"Secondes/Chapitres/python2/","text":"Entiers et conditions 1. Les entiers ( int ) et les op\u00e9rations Jusqu\u2019ici, nous avons utilis\u00e9 uniquement des textes ( string ). Python permet aussi de manipuler des nombres entiers ( int ). On peut effectuer des op\u00e9rations math\u00e9matiques : a = 10 b = 3 print(a + b) # addition print(a - b) # soustraction print(a * b) # multiplication print(a // b) # division enti\u00e8re print(a % b) # reste de la division (modulo) R\u00e9sultat : 13 7 30 3 1 Exercice 1 Cr\u00e9e deux variables avec des valeurs enti\u00e8res. Affiche : leur somme leur diff\u00e9rence 2. La fonction int() La fonction input renvoie toujours un texte. Si l\u2019on veut l\u2019utiliser comme un nombre, il faut le convertir en entier avec int() . Exemple : age = int(input(\"Quel est ton \u00e2ge ? \")) print(\"Dans 5 ans, tu auras\", age + 5, \"ans.\") Ici, int(input(...)) transforme la r\u00e9ponse en entier. On peut ensuite faire des calculs avec. Exercice 2 Demande \u00e0 l'utilisateur les valeurs des deux variables x et y . Affiche : - leur produit - le reste de la division de x par y 3. Les conditions if , elif , else En Python, on peut ex\u00e9cuter des instructions diff\u00e9rentes selon une condition. On utilise if , \u00e9ventuellement suivi de elif (sinon si), et enfin de else (sinon). Exemple : age = int(input(\"Quel est ton \u00e2ge ? \")) if age < 18: print(\"Tu es mineur.\") elif age == 18: print(\"Tu as exactement 18 ans.\") else: print(\"Tu es majeur.\") L\u2019indentation est obligatoire apr\u00e8s if , elif , else . Les conditions possibles : < , <= , > , >= , == , != . Exercice 3 \u00c9cris un programme qui demande un nombre \u00e0 l\u2019utilisateur : si le nombre est positif, affiche \"Ce nombre est positif\" , si le nombre est nul, affiche \"Ce nombre est nul\" , sinon affiche \"Ce nombre est n\u00e9gatif\" . 4. S\u00e9rie d\u2019exercices \u00c9cris un programme qui demande un \u00e2ge et affiche : - \"Tu es mineur\" si l\u2019\u00e2ge est strictement inf\u00e9rieur \u00e0 18, - \"Tu es majeur\" sinon. \u00c9cris un programme qui demande deux nombres et affiche le plus grand des deux. \u00c9cris un programme qui demande un nombre et affiche : - \"Pair\" si le nombre est divisible par 2, - \"Impair\" sinon. \u00c9cris un programme qui demande une note sur 20 et affiche : - \"Insuffisant\" si la note est strictement inf\u00e9rieure \u00e0 10, - \"Assez bien\" si la note est entre 10 et 13, - \"Bien\" si la note est entre 14 et 16, - \"Tr\u00e8s bien\" si la note est 17 ou plus. 5. Exercices suppl\u00e9mentaires Demande \u00e0 l\u2019utilisateur deux nombres et affiche leur moyenne. Demande un nombre \u00e0 l\u2019utilisateur et affiche : - \"Multiple de 3\" si le nombre est divisible par 3, - \"Pas multiple de 3\" sinon. Demande l\u2019\u00e2ge d\u2019une personne et affiche : - \"Enfant\" si l\u2019\u00e2ge est inf\u00e9rieur \u00e0 12, - \"Adolescent\" si l\u2019\u00e2ge est entre 12 et 17 inclus, - \"Adulte\" sinon. Demande \u00e0 l\u2019utilisateur un nombre entier et affiche : - \"Divisible par 2 et par 3\" si c\u2019est le cas, - \"Pas divisible par 2 et 3 en m\u00eame temps\" sinon. Demande trois notes sur 20, calcule la moyenne et affiche : - \"Admis\" si la moyenne est sup\u00e9rieure ou \u00e9gale \u00e0 10, - \"Refus\u00e9\" sinon.","title":"Entiers et conditions"},{"location":"Secondes/Chapitres/python2/#entiers-et-conditions","text":"","title":"Entiers et conditions"},{"location":"Secondes/Chapitres/python2/#1-les-entiers-int-et-les-operations","text":"Jusqu\u2019ici, nous avons utilis\u00e9 uniquement des textes ( string ). Python permet aussi de manipuler des nombres entiers ( int ). On peut effectuer des op\u00e9rations math\u00e9matiques : a = 10 b = 3 print(a + b) # addition print(a - b) # soustraction print(a * b) # multiplication print(a // b) # division enti\u00e8re print(a % b) # reste de la division (modulo) R\u00e9sultat : 13 7 30 3 1","title":"1. Les entiers (int) et les op\u00e9rations"},{"location":"Secondes/Chapitres/python2/#exercice-1","text":"Cr\u00e9e deux variables avec des valeurs enti\u00e8res. Affiche : leur somme leur diff\u00e9rence","title":"Exercice 1"},{"location":"Secondes/Chapitres/python2/#2-la-fonction-int","text":"La fonction input renvoie toujours un texte. Si l\u2019on veut l\u2019utiliser comme un nombre, il faut le convertir en entier avec int() . Exemple : age = int(input(\"Quel est ton \u00e2ge ? \")) print(\"Dans 5 ans, tu auras\", age + 5, \"ans.\") Ici, int(input(...)) transforme la r\u00e9ponse en entier. On peut ensuite faire des calculs avec.","title":"2. La fonction int()"},{"location":"Secondes/Chapitres/python2/#exercice-2","text":"Demande \u00e0 l'utilisateur les valeurs des deux variables x et y . Affiche : - leur produit - le reste de la division de x par y","title":"Exercice 2"},{"location":"Secondes/Chapitres/python2/#3-les-conditions-if-elif-else","text":"En Python, on peut ex\u00e9cuter des instructions diff\u00e9rentes selon une condition. On utilise if , \u00e9ventuellement suivi de elif (sinon si), et enfin de else (sinon). Exemple : age = int(input(\"Quel est ton \u00e2ge ? \")) if age < 18: print(\"Tu es mineur.\") elif age == 18: print(\"Tu as exactement 18 ans.\") else: print(\"Tu es majeur.\") L\u2019indentation est obligatoire apr\u00e8s if , elif , else . Les conditions possibles : < , <= , > , >= , == , != .","title":"3. Les conditions if, elif, else"},{"location":"Secondes/Chapitres/python2/#exercice-3","text":"\u00c9cris un programme qui demande un nombre \u00e0 l\u2019utilisateur : si le nombre est positif, affiche \"Ce nombre est positif\" , si le nombre est nul, affiche \"Ce nombre est nul\" , sinon affiche \"Ce nombre est n\u00e9gatif\" .","title":"Exercice 3"},{"location":"Secondes/Chapitres/python2/#4-serie-dexercices","text":"\u00c9cris un programme qui demande un \u00e2ge et affiche : - \"Tu es mineur\" si l\u2019\u00e2ge est strictement inf\u00e9rieur \u00e0 18, - \"Tu es majeur\" sinon. \u00c9cris un programme qui demande deux nombres et affiche le plus grand des deux. \u00c9cris un programme qui demande un nombre et affiche : - \"Pair\" si le nombre est divisible par 2, - \"Impair\" sinon. \u00c9cris un programme qui demande une note sur 20 et affiche : - \"Insuffisant\" si la note est strictement inf\u00e9rieure \u00e0 10, - \"Assez bien\" si la note est entre 10 et 13, - \"Bien\" si la note est entre 14 et 16, - \"Tr\u00e8s bien\" si la note est 17 ou plus.","title":"4. S\u00e9rie d\u2019exercices"},{"location":"Secondes/Chapitres/python2/#5-exercices-supplementaires","text":"Demande \u00e0 l\u2019utilisateur deux nombres et affiche leur moyenne. Demande un nombre \u00e0 l\u2019utilisateur et affiche : - \"Multiple de 3\" si le nombre est divisible par 3, - \"Pas multiple de 3\" sinon. Demande l\u2019\u00e2ge d\u2019une personne et affiche : - \"Enfant\" si l\u2019\u00e2ge est inf\u00e9rieur \u00e0 12, - \"Adolescent\" si l\u2019\u00e2ge est entre 12 et 17 inclus, - \"Adulte\" sinon. Demande \u00e0 l\u2019utilisateur un nombre entier et affiche : - \"Divisible par 2 et par 3\" si c\u2019est le cas, - \"Pas divisible par 2 et 3 en m\u00eame temps\" sinon. Demande trois notes sur 20, calcule la moyenne et affiche : - \"Admis\" si la moyenne est sup\u00e9rieure ou \u00e9gale \u00e0 10, - \"Refus\u00e9\" sinon.","title":"5. Exercices suppl\u00e9mentaires"},{"location":"Terminales/BDD/","text":"\ud83c\udf10 Cours Terminale NSI \u2013 Bases de donn\u00e9es \ud83c\udfaf Objectifs du chapitre \u00c0 la fin de ce cours, vous devez \u00eatre capables de : - Comprendre le mod\u00e8le relationnel (tables, attributs, cl\u00e9s). - Distinguer structure et contenu d\u2019une base de donn\u00e9es. - Manipuler une base de donn\u00e9es via SQL (interrogation et mise \u00e0 jour). - Conna\u00eetre le r\u00f4le d\u2019un SGBD (s\u00e9curit\u00e9, efficacit\u00e9, persistance). - Porter un regard critique sur l\u2019usage des donn\u00e9es (confidentialit\u00e9, RGPD). 1. Introduction Une base de donn\u00e9es est un outil permettant de stocker, organiser et manipuler de grandes quantit\u00e9s de donn\u00e9es. Exemples : - Amazon \u2192 millions de commandes et utilisateurs. - Spotify \u2192 catalogues de musiques, playlists personnelles. - Un lyc\u00e9e \u2192 notes, emplois du temps, enseignants, salles. \ud83d\udc49 Les simples tableaux vus en Premi\u00e8re ne suffisent plus : il faut un mod\u00e8le plus robuste \u2192 le mod\u00e8le relationnel . 2. Le mod\u00e8le relationnel Concepts de base Relation = table. Attribut = colonne. Tuple = ligne. Domaine = type des valeurs d\u2019une colonne. Les cl\u00e9s Cl\u00e9 primaire : identifie de mani\u00e8re unique un enregistrement. Cl\u00e9 \u00e9trang\u00e8re : fait le lien entre deux tables. Exemple : base Lyc\u00e9e \u00c9l\u00e8ves(id_eleve, nom, prenom, classe) Professeurs(id_prof, nom, discipline) Cours(id_cours, mati\u00e8re, id_prof) Inscription(id_eleve, id_cours, note) \ud83d\udccc \u00c0 retenir : Un sch\u00e9ma relationnel d\u00e9crit la structure de la base, pas encore son contenu. Il impose des contraintes d\u2019int\u00e9grit\u00e9 (unicit\u00e9, r\u00e9f\u00e9rences valides). 3. SGBD (Syst\u00e8me de Gestion de Base de Donn\u00e9es) Un SGBD (ex. MySQL, PostgreSQL, SQLite) assure : - La persistance des donn\u00e9es (elles survivent \u00e0 l\u2019arr\u00eat du programme). - La s\u00e9curit\u00e9 (contr\u00f4le des acc\u00e8s). - La gestion des acc\u00e8s concurrents (plusieurs utilisateurs). - L\u2019 optimisation des requ\u00eates (rapidit\u00e9). \u26a0\ufe0f Enjeux citoyens : Big Data, confidentialit\u00e9, RGPD. 4. Le langage SQL \u2013 Requ\u00eates d\u2019interrogation Structure g\u00e9n\u00e9rale SELECT attributs FROM table WHERE condition; Exemples Tous les films : SELECT * FROM Films; Films sortis apr\u00e8s 2020 : SELECT titre, annee FROM Films WHERE annee > 2020; Trier les films par date : SELECT titre, annee FROM Films ORDER BY annee DESC; Nombre de spectateurs pour un film : SELECT COUNT(*) FROM Reservations WHERE id_film = 3; Jointure (films + r\u00e9alisateurs) : SELECT Films.titre, Realisateurs.nom FROM Films JOIN Realisateurs ON Films.id_realisateur = Realisateurs.id_realisateur; \ud83d\udccc \u00c0 retenir : Les clauses principales sont SELECT , FROM , WHERE , ORDER BY , JOIN . 5. Le langage SQL \u2013 Requ\u00eates de mise \u00e0 jour Insertion : INSERT INTO Films (id_film, titre, annee) VALUES (5, \"Inception\", 2010); Mise \u00e0 jour : UPDATE Films SET annee = 2012 WHERE id_film = 5; Suppression : DELETE FROM Films WHERE id_film = 5; 6. Exercices pour s\u2019entra\u00eener Exercice 1 \u2013 Sch\u00e9ma relationnel Proposez un sch\u00e9ma relationnel pour g\u00e9rer une biblioth\u00e8que (livres, auteurs, emprunteurs, pr\u00eats). Exercice 2 \u2013 Interrogation Sur la base Cin\u00e9ma : 1. Lister tous les films. 2. Trouver les films d\u2019un r\u00e9alisateur donn\u00e9. 3. Donner le nombre de spectateurs pour chaque film. Exercice 3 \u2013 Mise \u00e0 jour Toujours sur la base Cin\u00e9ma : 1. Ajouter un nouveau film. 2. Mettre \u00e0 jour la date d\u2019une s\u00e9ance. 3. Supprimer un spectateur. 7. Synth\u00e8se et ouverture Le mod\u00e8le relationnel permet d\u2019organiser les donn\u00e9es en tables reli\u00e9es par des cl\u00e9s. Le SGBD garantit s\u00e9curit\u00e9, rapidit\u00e9 et gestion multi-utilisateurs. Le SQL est le langage universel pour interroger et modifier les bases. \ud83d\udd0e Ouverture : les bases NoSQL (MongoDB, Cassandra\u2026) apparaissent pour r\u00e9pondre aux besoins du Big Data. \ud83d\udcda Supports et outils Exercices papier (sch\u00e9ma relationnel). TP SQLite (local ou en ligne : SQLite Online ). \u00c9tudes de cas r\u00e9alistes : lyc\u00e9e, cin\u00e9ma, biblioth\u00e8que. Ressources RGPD : CNIL .","title":"\ud83c\udf10 Cours Terminale NSI \u2013 Bases de donn\u00e9es"},{"location":"Terminales/BDD/#cours-terminale-nsi-bases-de-donnees","text":"","title":"\ud83c\udf10 Cours Terminale NSI \u2013 Bases de donn\u00e9es"},{"location":"Terminales/BDD/#objectifs-du-chapitre","text":"\u00c0 la fin de ce cours, vous devez \u00eatre capables de : - Comprendre le mod\u00e8le relationnel (tables, attributs, cl\u00e9s). - Distinguer structure et contenu d\u2019une base de donn\u00e9es. - Manipuler une base de donn\u00e9es via SQL (interrogation et mise \u00e0 jour). - Conna\u00eetre le r\u00f4le d\u2019un SGBD (s\u00e9curit\u00e9, efficacit\u00e9, persistance). - Porter un regard critique sur l\u2019usage des donn\u00e9es (confidentialit\u00e9, RGPD).","title":"\ud83c\udfaf Objectifs du chapitre"},{"location":"Terminales/BDD/#1-introduction","text":"Une base de donn\u00e9es est un outil permettant de stocker, organiser et manipuler de grandes quantit\u00e9s de donn\u00e9es. Exemples : - Amazon \u2192 millions de commandes et utilisateurs. - Spotify \u2192 catalogues de musiques, playlists personnelles. - Un lyc\u00e9e \u2192 notes, emplois du temps, enseignants, salles. \ud83d\udc49 Les simples tableaux vus en Premi\u00e8re ne suffisent plus : il faut un mod\u00e8le plus robuste \u2192 le mod\u00e8le relationnel .","title":"1. Introduction"},{"location":"Terminales/BDD/#2-le-modele-relationnel","text":"","title":"2. Le mod\u00e8le relationnel"},{"location":"Terminales/BDD/#concepts-de-base","text":"Relation = table. Attribut = colonne. Tuple = ligne. Domaine = type des valeurs d\u2019une colonne.","title":"Concepts de base"},{"location":"Terminales/BDD/#les-cles","text":"Cl\u00e9 primaire : identifie de mani\u00e8re unique un enregistrement. Cl\u00e9 \u00e9trang\u00e8re : fait le lien entre deux tables.","title":"Les cl\u00e9s"},{"location":"Terminales/BDD/#exemple-base-lycee","text":"\u00c9l\u00e8ves(id_eleve, nom, prenom, classe) Professeurs(id_prof, nom, discipline) Cours(id_cours, mati\u00e8re, id_prof) Inscription(id_eleve, id_cours, note) \ud83d\udccc \u00c0 retenir : Un sch\u00e9ma relationnel d\u00e9crit la structure de la base, pas encore son contenu. Il impose des contraintes d\u2019int\u00e9grit\u00e9 (unicit\u00e9, r\u00e9f\u00e9rences valides).","title":"Exemple : base Lyc\u00e9e"},{"location":"Terminales/BDD/#3-sgbd-systeme-de-gestion-de-base-de-donnees","text":"Un SGBD (ex. MySQL, PostgreSQL, SQLite) assure : - La persistance des donn\u00e9es (elles survivent \u00e0 l\u2019arr\u00eat du programme). - La s\u00e9curit\u00e9 (contr\u00f4le des acc\u00e8s). - La gestion des acc\u00e8s concurrents (plusieurs utilisateurs). - L\u2019 optimisation des requ\u00eates (rapidit\u00e9). \u26a0\ufe0f Enjeux citoyens : Big Data, confidentialit\u00e9, RGPD.","title":"3. SGBD (Syst\u00e8me de Gestion de Base de Donn\u00e9es)"},{"location":"Terminales/BDD/#4-le-langage-sql-requetes-dinterrogation","text":"","title":"4. Le langage SQL \u2013 Requ\u00eates d\u2019interrogation"},{"location":"Terminales/BDD/#structure-generale","text":"SELECT attributs FROM table WHERE condition;","title":"Structure g\u00e9n\u00e9rale"},{"location":"Terminales/BDD/#exemples","text":"Tous les films : SELECT * FROM Films; Films sortis apr\u00e8s 2020 : SELECT titre, annee FROM Films WHERE annee > 2020; Trier les films par date : SELECT titre, annee FROM Films ORDER BY annee DESC; Nombre de spectateurs pour un film : SELECT COUNT(*) FROM Reservations WHERE id_film = 3; Jointure (films + r\u00e9alisateurs) : SELECT Films.titre, Realisateurs.nom FROM Films JOIN Realisateurs ON Films.id_realisateur = Realisateurs.id_realisateur; \ud83d\udccc \u00c0 retenir : Les clauses principales sont SELECT , FROM , WHERE , ORDER BY , JOIN .","title":"Exemples"},{"location":"Terminales/BDD/#5-le-langage-sql-requetes-de-mise-a-jour","text":"Insertion : INSERT INTO Films (id_film, titre, annee) VALUES (5, \"Inception\", 2010); Mise \u00e0 jour : UPDATE Films SET annee = 2012 WHERE id_film = 5; Suppression : DELETE FROM Films WHERE id_film = 5;","title":"5. Le langage SQL \u2013 Requ\u00eates de mise \u00e0 jour"},{"location":"Terminales/BDD/#6-exercices-pour-sentrainer","text":"","title":"6. Exercices pour s\u2019entra\u00eener"},{"location":"Terminales/BDD/#exercice-1-schema-relationnel","text":"Proposez un sch\u00e9ma relationnel pour g\u00e9rer une biblioth\u00e8que (livres, auteurs, emprunteurs, pr\u00eats).","title":"Exercice 1 \u2013 Sch\u00e9ma relationnel"},{"location":"Terminales/BDD/#exercice-2-interrogation","text":"Sur la base Cin\u00e9ma : 1. Lister tous les films. 2. Trouver les films d\u2019un r\u00e9alisateur donn\u00e9. 3. Donner le nombre de spectateurs pour chaque film.","title":"Exercice 2 \u2013 Interrogation"},{"location":"Terminales/BDD/#exercice-3-mise-a-jour","text":"Toujours sur la base Cin\u00e9ma : 1. Ajouter un nouveau film. 2. Mettre \u00e0 jour la date d\u2019une s\u00e9ance. 3. Supprimer un spectateur.","title":"Exercice 3 \u2013 Mise \u00e0 jour"},{"location":"Terminales/BDD/#7-synthese-et-ouverture","text":"Le mod\u00e8le relationnel permet d\u2019organiser les donn\u00e9es en tables reli\u00e9es par des cl\u00e9s. Le SGBD garantit s\u00e9curit\u00e9, rapidit\u00e9 et gestion multi-utilisateurs. Le SQL est le langage universel pour interroger et modifier les bases. \ud83d\udd0e Ouverture : les bases NoSQL (MongoDB, Cassandra\u2026) apparaissent pour r\u00e9pondre aux besoins du Big Data.","title":"7. Synth\u00e8se et ouverture"},{"location":"Terminales/BDD/#supports-et-outils","text":"Exercices papier (sch\u00e9ma relationnel). TP SQLite (local ou en ligne : SQLite Online ). \u00c9tudes de cas r\u00e9alistes : lyc\u00e9e, cin\u00e9ma, biblioth\u00e8que. Ressources RGPD : CNIL .","title":"\ud83d\udcda Supports et outils"},{"location":"Terminales/Terminales/","text":"NSI - Terminales R\u00e9visions Rappels de premi\u00e8res Exercices de r\u00e9vision Projets \ud83d\udcc2 Dessine ta rue Chapitres \ud83d\udd39 1 - Programmation Orient\u00e9 Objet \ud83d\udd39 2 - Bases de Donn\u00e9es","title":"Accueil"},{"location":"Terminales/Terminales/#nsi-terminales","text":"","title":"NSI - Terminales"},{"location":"Terminales/Terminales/#revisions","text":"Rappels de premi\u00e8res Exercices de r\u00e9vision","title":"R\u00e9visions"},{"location":"Terminales/Terminales/#projets","text":"\ud83d\udcc2 Dessine ta rue","title":"Projets"},{"location":"Terminales/Terminales/#chapitres","text":"\ud83d\udd39 1 - Programmation Orient\u00e9 Objet \ud83d\udd39 2 - Bases de Donn\u00e9es","title":"Chapitres"},{"location":"Terminales/correction/","text":"Correction Exercice 1 : Bonjour ! Objectif Demander le pr\u00e9nom de l\u2019utilisateur et afficher un message de salutation. Explication pas \u00e0 pas input() lit une cha\u00eene tap\u00e9e par l\u2019utilisateur et la renvoie. print() affiche du texte \u00e0 l'\u00e9cran. On peut afficher plusieurs \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules ; Python ins\u00e8re des espaces automatiquement entre eux. Erreurs fr\u00e9quentes Essayer de convertir le pr\u00e9nom en nombre (inutile). Oublier les guillemets dans le message de input() (pas grave mais moins clair pour l'utilisateur). Code corrig\u00e9 # On demande le pr\u00e9nom \u00e0 l'utilisateur et on l'affiche dans une phrase prenom = input(\"Entrez votre pr\u00e9nom : \") # input() renvoie une cha\u00eene (str) print(\"Bonjour,\", prenom, \"!\") # print concat\u00e8ne avec des espaces automatiques Exemple d'ex\u00e9cution Si l'utilisateur tape Alice , le programme affiche : Bonjour, Alice ! Exercice 2 : Op\u00e9rations simples Objectif Lire deux nombres et afficher leur somme, produit et diff\u00e9rence. Explication pas \u00e0 pas input() renvoie une cha\u00eene. Pour faire des op\u00e9rations num\u00e9riques, on convertit avec int() (entiers) ou float() (nombres \u00e0 virgule). On stocke les deux nombres dans des variables a et b . On utilise les op\u00e9rateurs + , * , - pour les calculs. print() affiche les r\u00e9sultats. Erreurs fr\u00e9quentes Oublier de convertir en int / float : concat\u00e9nation au lieu d'addition (ex : '2' + '3' donne '23' ). Conversion en int alors que l'utilisateur tape 3.5 (provoque ValueError ). Si on attend des d\u00e9cimaux, utiliser float() . Code corrig\u00e9 # Lire deux nombres et afficher les r\u00e9sultats a = int(input(\"Entrez un premier nombre : \")) # convertir en entier b = int(input(\"Entrez un deuxi\u00e8me nombre : \")) print(\"Somme :\", a + b) # addition print(\"Produit :\", a * b) # multiplication print(\"Diff\u00e9rence :\", a - b) # soustraction Exercice 4 : Tuple et liste Objectif Utiliser un tuple pour stocker des mati\u00e8res (fixe) et une liste pour stocker des notes (modifiable). Calculer la moyenne. Explication pas \u00e0 pas Un tuple est d\u00e9fini avec des parenth\u00e8ses (...) et est immuable : on ne peut pas ajouter d'\u00e9l\u00e9ments. Une liste est d\u00e9finie avec des crochets [...] et on peut utiliser append() pour ajouter des \u00e9l\u00e9ments. sum(notes) calcule la somme des \u00e9l\u00e9ments d'une liste num\u00e9rique. len(notes) donne le nombre d'\u00e9l\u00e9ments. La moyenne est sum / len . Toujours v\u00e9rifier que len(notes) n'est pas z\u00e9ro avant de diviser (\u00e9viter division par z\u00e9ro). Erreurs fr\u00e9quentes Tenter d'utiliser append() sur un tuple (provoque une erreur). Diviser par z\u00e9ro si la liste est vide. Code corrig\u00e9 # Tuple fixe pour les mati\u00e8res matieres = (\"Maths\", \"NSI\", \"Physique\") # Liste vide pour recueillir les notes notes = [] # On demande 3 notes \u00e0 l'utilisateur for i in range(3): note = int(input(\"Entrez la note : \")) # on convertit en int notes.append(note) # on ajoute \u00e0 la liste # Calcul de la moyenne (on sait qu'il y a 3 notes ici) moyenne = sum(notes) / len(notes) print(\"Vos mati\u00e8res :\", matieres) print(\"Vos notes :\", notes) print(\"Moyenne :\", moyenne) Exercice 5 : Boucles Objectif Afficher les carr\u00e9s des nombres de 1 \u00e0 10. Explication pas \u00e0 pas range(1, 11) g\u00e9n\u00e8re les entiers 1,2,...,10 (le second argument est exclu). i**2 calcule le carr\u00e9 de i . Boucler permet d'\u00e9viter d'\u00e9crire 10 lignes r\u00e9p\u00e9titives. Code corrig\u00e9 for i in range(1, 11): # parcourt 1 \u00e0 10 print(i, \"au carr\u00e9 =\", i**2) Erreurs fr\u00e9quentes Utiliser range(10) et penser que \u00e7a commence \u00e0 1 (i prendra les valeurs de 0 \u00e0 9). Confondre i*i et i**2 (les deux fonctionnent, mais ** est l'op\u00e9rateur d'exponentiation). Exercice 6 : Conditions Objectif Classer une personne en \u00ab enfant \u00bb, \u00ab adolescent \u00bb ou \u00ab adulte \u00bb selon son \u00e2ge. Explication pas \u00e0 pas On lit l'\u00e2ge avec int() . if teste la premi\u00e8re condition ; si elle est vraie, Python ex\u00e9cute le bloc associ\u00e9 et saute le reste. elif si la premi\u00e8re condition \u00e9tait fausse, teste une autre condition, si elle est vraie, Python ex\u00e9cute le bloc associ\u00e9 et saute le reste. else si toutes les autres conditions \u00e9taient fausses, Python ex\u00e9cute le bloc associ\u00e9. Code corrig\u00e9 age = int(input(\"Quel est ton \u00e2ge ? \")) if age < 12: # moins de 12 ans => enfant print(\"enfant\") elif age <= 17: # entre 12 et 17 inclus => adolescent print(\"adolescent\") else: # 18 ans et plus => adulte print(\"adulte\") Erreurs fr\u00e9quentes Mettre les conditions dans le mauvais ordre : ici l'ordre pr\u00e9sent\u00e9 fonctionne (test du plus petit d'abord). Utiliser plusieurs if ind\u00e9pendants au lieu de elif : cela pourrait afficher plusieurs lignes pour une m\u00eame entr\u00e9e. Exercice 7 : Mot de passe Objectif Demander un mot de passe et r\u00e9p\u00e9ter la demande tant qu'il est incorrect. Explication pas \u00e0 pas On utilise une boucle while dont la condition reste vraie tant que le mot de passe n'est pas correct. On met la saisie \u00e0 l'int\u00e9rieur de la boucle pour permettre plusieurs tentatives. Une fois que la condition devient fausse (mot de passe correct), la boucle s'arr\u00eate. Code corrig\u00e9 mdp = \"\" # initialisation while mdp != \"python123\": # tant que le mot de passe n'est pas \u00e9gal \u00e0 la cha\u00eene attendue mdp = input(\"Entrez le mot de passe : \") print(\"Mot de passe correct !\") Erreurs fr\u00e9quentes Oublier d'initialiser mdp avant la boucle (la premi\u00e8re comparaison doit \u00eatre possible). Utiliser == \u00e0 l'int\u00e9rieur de la boucle sans mise \u00e0 jour de mdp (boucle infinie). Exercice 8 : Fonction simple Objectif \u00c9crire une fonction aire_rectangle(longueur, largeur) qui renvoie l'aire. Explication pas \u00e0 pas Une fonction est d\u00e9finie avec def nom(params): . return renvoie la valeur calcul\u00e9e \u00e0 l'appelant. Pour accepter des nombres d\u00e9cimaux, on convertit les entr\u00e9es en float . Code corrig\u00e9 def aire_rectangle(longueur, largeur): \"\"\"Retourne l'aire d'un rectangle. longueur et largeur sont des nombres (float ou int). \"\"\" return longueur * largeur # Lecture des valeurs utilisateur L = float(input(\"Longueur : \")) l = float(input(\"Largeur : \")) # Appel de la fonction et affichage du r\u00e9sultat print(\"Aire =\", aire_rectangle(L, l)) Erreurs fr\u00e9quentes Oublier return dans la fonction (la fonction renverra None ). Convertir en int alors qu'on veut garder les d\u00e9cimales. Exercice 9 : Plus grand \u00e9l\u00e9ment Objectif \u00c9crire max_liste(liste) sans utiliser la fonction max() int\u00e9gr\u00e9e. Explication pas \u00e0 pas On suppose que le premier \u00e9l\u00e9ment est le maximum initial. On parcourt la liste et, si on trouve un \u00e9l\u00e9ment plus grand, on met \u00e0 jour maximum . \u00c0 la fin, on retourne maximum . Erreurs fr\u00e9quentes Oublier que la liste peut \u00eatre vide. Ici on teste sur une liste connue non vide. Utiliser max() (ici l'objectif est d'\u00e9crire la logique soi-m\u00eame). Code corrig\u00e9 def max_liste(liste): # On suppose que la liste contient au moins un \u00e9l\u00e9ment maximum = liste[0] for element in liste: if element > maximum: maximum = element return maximum # Exemple de test nombres = [3, 17, 9, 25, 4] print(\"Liste :\", nombres) print(\"Plus grand \u00e9l\u00e9ment :\", max_liste(nombres)) Exercice 10 : Petit projet Objectif Lire des notes jusqu'\u00e0 ce que l'utilisateur tape -1 , puis afficher la liste, la moyenne et le nombre de notes >= moyenne. Explication pas \u00e0 pas On cr\u00e9e une liste notes vide. On lit des notes dans une boucle while jusqu'\u00e0 la valeur sentinelle -1 . On n'ajoute -1 pas \u00e0 la liste (contr\u00f4le n\u00e9cessaire). Si la liste est non vide, on calcule moyenne = sum(notes) / len(notes) . On parcourt la liste pour compter les \u00e9l\u00e9ments sup\u00e9rieurs ou \u00e9gaux \u00e0 la moyenne. Erreurs fr\u00e9quentes Oublier d'exclure -1 (alors la moyenne est fauss\u00e9e). Tenter de calculer la moyenne sur une liste vide (division par z\u00e9ro). Code corrig\u00e9 notes = [] note = 0 # valeur initiale (autre que -1) # Lecture des notes while note != -1: # On convertit en int ; si l'utilisateur tape une valeur non num\u00e9rique, il y aura une erreur note = int(input(\"Entrez une note (-1 pour arr\u00eater) : \")) if note != -1: notes.append(note) # on n'ajoute pas -1 # Affichage des notes saisies print(\"Toutes les notes :\", notes) # Calculs seulement si la liste contient au moins une note if len(notes) > 0: moyenne = sum(notes) / len(notes) print(\"Moyenne :\", moyenne) # Compter les notes >= moyenne nb_sup = 0 for n in notes: if n >= moyenne: nb_sup += 1 print(\"Nombre de notes >= moyenne :\", nb_sup) else: print(\"Aucune note entr\u00e9e.\") Remarque Si tu veux ignorer les notes invalides (ex : n\u00e9gatives, sup\u00e9rieures \u00e0 20), ajoute des v\u00e9rifications avant append() . On pourrait aussi afficher la m\u00e9diane, l'\u00e9cart-type, etc., mais cela d\u00e9passe l'exercice.","title":"Correction"},{"location":"Terminales/correction/#correction","text":"","title":"Correction"},{"location":"Terminales/correction/#exercice-1-bonjour","text":"","title":"Exercice 1 : Bonjour !"},{"location":"Terminales/correction/#objectif","text":"Demander le pr\u00e9nom de l\u2019utilisateur et afficher un message de salutation.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas","text":"input() lit une cha\u00eene tap\u00e9e par l\u2019utilisateur et la renvoie. print() affiche du texte \u00e0 l'\u00e9cran. On peut afficher plusieurs \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules ; Python ins\u00e8re des espaces automatiquement entre eux.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#erreurs-frequentes","text":"Essayer de convertir le pr\u00e9nom en nombre (inutile). Oublier les guillemets dans le message de input() (pas grave mais moins clair pour l'utilisateur).","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#code-corrige","text":"# On demande le pr\u00e9nom \u00e0 l'utilisateur et on l'affiche dans une phrase prenom = input(\"Entrez votre pr\u00e9nom : \") # input() renvoie une cha\u00eene (str) print(\"Bonjour,\", prenom, \"!\") # print concat\u00e8ne avec des espaces automatiques","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#exemple-dexecution","text":"Si l'utilisateur tape Alice , le programme affiche : Bonjour, Alice !","title":"Exemple d'ex\u00e9cution"},{"location":"Terminales/correction/#exercice-2-operations-simples","text":"","title":"Exercice 2 : Op\u00e9rations simples"},{"location":"Terminales/correction/#objectif_1","text":"Lire deux nombres et afficher leur somme, produit et diff\u00e9rence.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_1","text":"input() renvoie une cha\u00eene. Pour faire des op\u00e9rations num\u00e9riques, on convertit avec int() (entiers) ou float() (nombres \u00e0 virgule). On stocke les deux nombres dans des variables a et b . On utilise les op\u00e9rateurs + , * , - pour les calculs. print() affiche les r\u00e9sultats.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#erreurs-frequentes_1","text":"Oublier de convertir en int / float : concat\u00e9nation au lieu d'addition (ex : '2' + '3' donne '23' ). Conversion en int alors que l'utilisateur tape 3.5 (provoque ValueError ). Si on attend des d\u00e9cimaux, utiliser float() .","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#code-corrige_1","text":"# Lire deux nombres et afficher les r\u00e9sultats a = int(input(\"Entrez un premier nombre : \")) # convertir en entier b = int(input(\"Entrez un deuxi\u00e8me nombre : \")) print(\"Somme :\", a + b) # addition print(\"Produit :\", a * b) # multiplication print(\"Diff\u00e9rence :\", a - b) # soustraction","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#exercice-4-tuple-et-liste","text":"","title":"Exercice 4 : Tuple et liste"},{"location":"Terminales/correction/#objectif_2","text":"Utiliser un tuple pour stocker des mati\u00e8res (fixe) et une liste pour stocker des notes (modifiable). Calculer la moyenne.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_2","text":"Un tuple est d\u00e9fini avec des parenth\u00e8ses (...) et est immuable : on ne peut pas ajouter d'\u00e9l\u00e9ments. Une liste est d\u00e9finie avec des crochets [...] et on peut utiliser append() pour ajouter des \u00e9l\u00e9ments. sum(notes) calcule la somme des \u00e9l\u00e9ments d'une liste num\u00e9rique. len(notes) donne le nombre d'\u00e9l\u00e9ments. La moyenne est sum / len . Toujours v\u00e9rifier que len(notes) n'est pas z\u00e9ro avant de diviser (\u00e9viter division par z\u00e9ro).","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#erreurs-frequentes_2","text":"Tenter d'utiliser append() sur un tuple (provoque une erreur). Diviser par z\u00e9ro si la liste est vide.","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#code-corrige_2","text":"# Tuple fixe pour les mati\u00e8res matieres = (\"Maths\", \"NSI\", \"Physique\") # Liste vide pour recueillir les notes notes = [] # On demande 3 notes \u00e0 l'utilisateur for i in range(3): note = int(input(\"Entrez la note : \")) # on convertit en int notes.append(note) # on ajoute \u00e0 la liste # Calcul de la moyenne (on sait qu'il y a 3 notes ici) moyenne = sum(notes) / len(notes) print(\"Vos mati\u00e8res :\", matieres) print(\"Vos notes :\", notes) print(\"Moyenne :\", moyenne)","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#exercice-5-boucles","text":"","title":"Exercice 5 : Boucles"},{"location":"Terminales/correction/#objectif_3","text":"Afficher les carr\u00e9s des nombres de 1 \u00e0 10.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_3","text":"range(1, 11) g\u00e9n\u00e8re les entiers 1,2,...,10 (le second argument est exclu). i**2 calcule le carr\u00e9 de i . Boucler permet d'\u00e9viter d'\u00e9crire 10 lignes r\u00e9p\u00e9titives.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#code-corrige_3","text":"for i in range(1, 11): # parcourt 1 \u00e0 10 print(i, \"au carr\u00e9 =\", i**2)","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#erreurs-frequentes_3","text":"Utiliser range(10) et penser que \u00e7a commence \u00e0 1 (i prendra les valeurs de 0 \u00e0 9). Confondre i*i et i**2 (les deux fonctionnent, mais ** est l'op\u00e9rateur d'exponentiation).","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#exercice-6-conditions","text":"","title":"Exercice 6 : Conditions"},{"location":"Terminales/correction/#objectif_4","text":"Classer une personne en \u00ab enfant \u00bb, \u00ab adolescent \u00bb ou \u00ab adulte \u00bb selon son \u00e2ge.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_4","text":"On lit l'\u00e2ge avec int() . if teste la premi\u00e8re condition ; si elle est vraie, Python ex\u00e9cute le bloc associ\u00e9 et saute le reste. elif si la premi\u00e8re condition \u00e9tait fausse, teste une autre condition, si elle est vraie, Python ex\u00e9cute le bloc associ\u00e9 et saute le reste. else si toutes les autres conditions \u00e9taient fausses, Python ex\u00e9cute le bloc associ\u00e9.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#code-corrige_4","text":"age = int(input(\"Quel est ton \u00e2ge ? \")) if age < 12: # moins de 12 ans => enfant print(\"enfant\") elif age <= 17: # entre 12 et 17 inclus => adolescent print(\"adolescent\") else: # 18 ans et plus => adulte print(\"adulte\")","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#erreurs-frequentes_4","text":"Mettre les conditions dans le mauvais ordre : ici l'ordre pr\u00e9sent\u00e9 fonctionne (test du plus petit d'abord). Utiliser plusieurs if ind\u00e9pendants au lieu de elif : cela pourrait afficher plusieurs lignes pour une m\u00eame entr\u00e9e.","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#exercice-7-mot-de-passe","text":"","title":"Exercice 7 : Mot de passe"},{"location":"Terminales/correction/#objectif_5","text":"Demander un mot de passe et r\u00e9p\u00e9ter la demande tant qu'il est incorrect.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_5","text":"On utilise une boucle while dont la condition reste vraie tant que le mot de passe n'est pas correct. On met la saisie \u00e0 l'int\u00e9rieur de la boucle pour permettre plusieurs tentatives. Une fois que la condition devient fausse (mot de passe correct), la boucle s'arr\u00eate.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#code-corrige_5","text":"mdp = \"\" # initialisation while mdp != \"python123\": # tant que le mot de passe n'est pas \u00e9gal \u00e0 la cha\u00eene attendue mdp = input(\"Entrez le mot de passe : \") print(\"Mot de passe correct !\")","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#erreurs-frequentes_5","text":"Oublier d'initialiser mdp avant la boucle (la premi\u00e8re comparaison doit \u00eatre possible). Utiliser == \u00e0 l'int\u00e9rieur de la boucle sans mise \u00e0 jour de mdp (boucle infinie).","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#exercice-8-fonction-simple","text":"","title":"Exercice 8 : Fonction simple"},{"location":"Terminales/correction/#objectif_6","text":"\u00c9crire une fonction aire_rectangle(longueur, largeur) qui renvoie l'aire.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_6","text":"Une fonction est d\u00e9finie avec def nom(params): . return renvoie la valeur calcul\u00e9e \u00e0 l'appelant. Pour accepter des nombres d\u00e9cimaux, on convertit les entr\u00e9es en float .","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#code-corrige_6","text":"def aire_rectangle(longueur, largeur): \"\"\"Retourne l'aire d'un rectangle. longueur et largeur sont des nombres (float ou int). \"\"\" return longueur * largeur # Lecture des valeurs utilisateur L = float(input(\"Longueur : \")) l = float(input(\"Largeur : \")) # Appel de la fonction et affichage du r\u00e9sultat print(\"Aire =\", aire_rectangle(L, l))","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#erreurs-frequentes_6","text":"Oublier return dans la fonction (la fonction renverra None ). Convertir en int alors qu'on veut garder les d\u00e9cimales.","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#exercice-9-plus-grand-element","text":"","title":"Exercice 9 : Plus grand \u00e9l\u00e9ment"},{"location":"Terminales/correction/#objectif_7","text":"\u00c9crire max_liste(liste) sans utiliser la fonction max() int\u00e9gr\u00e9e.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_7","text":"On suppose que le premier \u00e9l\u00e9ment est le maximum initial. On parcourt la liste et, si on trouve un \u00e9l\u00e9ment plus grand, on met \u00e0 jour maximum . \u00c0 la fin, on retourne maximum .","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#erreurs-frequentes_7","text":"Oublier que la liste peut \u00eatre vide. Ici on teste sur une liste connue non vide. Utiliser max() (ici l'objectif est d'\u00e9crire la logique soi-m\u00eame).","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#code-corrige_7","text":"def max_liste(liste): # On suppose que la liste contient au moins un \u00e9l\u00e9ment maximum = liste[0] for element in liste: if element > maximum: maximum = element return maximum # Exemple de test nombres = [3, 17, 9, 25, 4] print(\"Liste :\", nombres) print(\"Plus grand \u00e9l\u00e9ment :\", max_liste(nombres))","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#exercice-10-petit-projet","text":"","title":"Exercice 10 : Petit projet"},{"location":"Terminales/correction/#objectif_8","text":"Lire des notes jusqu'\u00e0 ce que l'utilisateur tape -1 , puis afficher la liste, la moyenne et le nombre de notes >= moyenne.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_8","text":"On cr\u00e9e une liste notes vide. On lit des notes dans une boucle while jusqu'\u00e0 la valeur sentinelle -1 . On n'ajoute -1 pas \u00e0 la liste (contr\u00f4le n\u00e9cessaire). Si la liste est non vide, on calcule moyenne = sum(notes) / len(notes) . On parcourt la liste pour compter les \u00e9l\u00e9ments sup\u00e9rieurs ou \u00e9gaux \u00e0 la moyenne.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#erreurs-frequentes_8","text":"Oublier d'exclure -1 (alors la moyenne est fauss\u00e9e). Tenter de calculer la moyenne sur une liste vide (division par z\u00e9ro).","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#code-corrige_8","text":"notes = [] note = 0 # valeur initiale (autre que -1) # Lecture des notes while note != -1: # On convertit en int ; si l'utilisateur tape une valeur non num\u00e9rique, il y aura une erreur note = int(input(\"Entrez une note (-1 pour arr\u00eater) : \")) if note != -1: notes.append(note) # on n'ajoute pas -1 # Affichage des notes saisies print(\"Toutes les notes :\", notes) # Calculs seulement si la liste contient au moins une note if len(notes) > 0: moyenne = sum(notes) / len(notes) print(\"Moyenne :\", moyenne) # Compter les notes >= moyenne nb_sup = 0 for n in notes: if n >= moyenne: nb_sup += 1 print(\"Nombre de notes >= moyenne :\", nb_sup) else: print(\"Aucune note entr\u00e9e.\")","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#remarque","text":"Si tu veux ignorer les notes invalides (ex : n\u00e9gatives, sup\u00e9rieures \u00e0 20), ajoute des v\u00e9rifications avant append() . On pourrait aussi afficher la m\u00e9diane, l'\u00e9cart-type, etc., mais cela d\u00e9passe l'exercice.","title":"Remarque"},{"location":"Terminales/rappel/","text":"R\u00e9visions Python - Premi\u00e8re Ce document reprend les notions essentielles de Python vues en Premi\u00e8re, avec explications, exemples et rappels importants. 1. Affichage avec print() La fonction print() permet d\u2019afficher du texte ou des r\u00e9sultats \u00e0 l\u2019\u00e9cran. On peut afficher plusieurs \u00e9l\u00e9ments en les s\u00e9parant par des virgules. print(\"Bonjour\") # affiche : Bonjour print(3 + 5) # affiche : 8 print(\"R\u00e9sultat :\", 3 * 4) # affiche : R\u00e9sultat : 12 \ud83d\udc49 Astuce : print() ajoute automatiquement un retour \u00e0 la ligne \u00e0 la fin de l\u2019affichage. 2. Lire une valeur avec input() La fonction input() permet de demander une saisie \u00e0 l\u2019utilisateur . Le texte entre parenth\u00e8ses est un message affich\u00e9 \u00e0 l\u2019\u00e9cran. \u26a0\ufe0f Attention : la valeur saisie est toujours de type cha\u00eene de caract\u00e8res ( str ). nom = input(\"Quel est ton nom ? \") print(\"Bonjour\", nom) 3. Conversion avec int() Si l\u2019on veut travailler avec des nombres, il faut convertir la cha\u00eene saisie. La fonction int() transforme une cha\u00eene en entier . age = int(input(\"Quel est ton \u00e2ge ? \")) print(\"Dans 10 ans tu auras\", age + 10) \u26a0\ufe0f Si l\u2019utilisateur tape un texte qui n\u2019est pas un nombre, int() provoque une erreur. 4. Les bool\u00e9ens ( True , False ) Un bool\u00e9en est un type de donn\u00e9e qui peut avoir deux valeurs seulement : True \u2192 vrai False \u2192 faux Ils apparaissent souvent comme r\u00e9sultat d\u2019une comparaison. a = 5 b = 10 print(a < b) # True (car 5 est plus petit que 10) print(a == b) # False (car 5 n\u2019est pas \u00e9gal \u00e0 10) print(a != b) # True (car 5 est diff\u00e9rent de 10) \ud83d\udc49 On utilise beaucoup les bool\u00e9ens dans les conditions et les boucles. 5. Les cha\u00eenes de caract\u00e8res ( str ) Une cha\u00eene est un texte entre guillemets. mot = \"Python\" Quelques op\u00e9rations utiles : Acc\u00e9der \u00e0 une lettre : mot[0] \u2192 \"P\" Conna\u00eetre la longueur : len(mot) \u2192 6 Transformer en majuscules : mot.upper() \u2192 \"PYTHON\" Transformer en minuscules : mot.lower() \u2192 \"python\" print(mot[0]) # P print(len(mot)) # 6 print(mot.upper()) # PYTHON \u26a0\ufe0f Les indices commencent \u00e0 0 en Python. 6. Les listes Une liste permet de stocker plusieurs valeurs. Les listes sont modifiables : on peut ajouter, enlever ou remplacer des \u00e9l\u00e9ments. fruits = [\"pomme\", \"banane\", \"cerise\"] print(fruits[0]) # pomme fruits.append(\"kiwi\") # ajoute \u00e0 la fin print(fruits) # ['pomme', 'banane', 'cerise', 'kiwi'] fruits[1] = \"orange\" # remplace \"banane\" par \"orange\" print(fruits) # ['pomme', 'orange', 'cerise', 'kiwi'] 7. Les tuples Un tuple ressemble \u00e0 une liste, mais il est immuable : on ne peut pas modifier ses valeurs apr\u00e8s sa cr\u00e9ation. coordonnees = (3, 5) print(coordonnees[0]) # 3 \ud83d\udc49 Les tuples sont utiles pour stocker des donn\u00e9es fixes (exemple : une position en 2D). 8. Les conditions ( if , elif , else ) Une condition permet de choisir entre plusieurs actions selon une expression bool\u00e9enne. age = int(input(\"Ton \u00e2ge ? \")) if age < 18: print(\"Tu es mineur\") elif age == 18: print(\"Tout juste majeur !\") else: print(\"Tu es majeur\") \ud83d\udc49 Le mot-cl\u00e9 elif signifie \u00ab sinon si \u00bb. 9. La boucle for La boucle for permet de r\u00e9p\u00e9ter une action sur une s\u00e9quence (liste, cha\u00eene, etc.) ou un certain nombre de fois avec range() . for i in range(5): # r\u00e9p\u00e8te 5 fois (0 \u2192 4) print(\"i =\", i) fruits = [\"pomme\", \"banane\", \"cerise\"] for f in fruits: print(\"J\u2019aime\", f) 10. La boucle while La boucle while r\u00e9p\u00e8te une action tant qu\u2019une condition est vraie . \u26a0\ufe0f Attention : si la condition n\u2019est jamais fausse \u2192 boucle infinie ! n = 0 while n < 3: print(\"n =\", n) n = n + 1 11. Les fonctions Une fonction est un bloc de code r\u00e9utilisable. On la d\u00e9finit avec def , et elle peut renvoyer un r\u00e9sultat avec return . def carre(x): return x * x print(carre(5)) # 25 print(carre(10)) # 100 \ud83d\udc49 Avantages des fonctions : - \u00c9viter les r\u00e9p\u00e9titions - Organiser le code - Le rendre plus lisible \ud83d\udcdd \u00c0 retenir Entr\u00e9es/sorties : print() , input() , int() Types : str (cha\u00eene), list (liste modifiable), tuple (fixe), bool (vrai/faux) Structures de contr\u00f4le : if , for , while Organisation du code : def pour cr\u00e9er des fonctions","title":"R\u00e9visions Python - Premi\u00e8re"},{"location":"Terminales/rappel/#revisions-python-premiere","text":"Ce document reprend les notions essentielles de Python vues en Premi\u00e8re, avec explications, exemples et rappels importants.","title":"R\u00e9visions Python - Premi\u00e8re"},{"location":"Terminales/rappel/#1-affichage-avec-print","text":"La fonction print() permet d\u2019afficher du texte ou des r\u00e9sultats \u00e0 l\u2019\u00e9cran. On peut afficher plusieurs \u00e9l\u00e9ments en les s\u00e9parant par des virgules. print(\"Bonjour\") # affiche : Bonjour print(3 + 5) # affiche : 8 print(\"R\u00e9sultat :\", 3 * 4) # affiche : R\u00e9sultat : 12 \ud83d\udc49 Astuce : print() ajoute automatiquement un retour \u00e0 la ligne \u00e0 la fin de l\u2019affichage.","title":"1. Affichage avec print()"},{"location":"Terminales/rappel/#2-lire-une-valeur-avec-input","text":"La fonction input() permet de demander une saisie \u00e0 l\u2019utilisateur . Le texte entre parenth\u00e8ses est un message affich\u00e9 \u00e0 l\u2019\u00e9cran. \u26a0\ufe0f Attention : la valeur saisie est toujours de type cha\u00eene de caract\u00e8res ( str ). nom = input(\"Quel est ton nom ? \") print(\"Bonjour\", nom)","title":"2. Lire une valeur avec input()"},{"location":"Terminales/rappel/#3-conversion-avec-int","text":"Si l\u2019on veut travailler avec des nombres, il faut convertir la cha\u00eene saisie. La fonction int() transforme une cha\u00eene en entier . age = int(input(\"Quel est ton \u00e2ge ? \")) print(\"Dans 10 ans tu auras\", age + 10) \u26a0\ufe0f Si l\u2019utilisateur tape un texte qui n\u2019est pas un nombre, int() provoque une erreur.","title":"3. Conversion avec int()"},{"location":"Terminales/rappel/#4-les-booleens-true-false","text":"Un bool\u00e9en est un type de donn\u00e9e qui peut avoir deux valeurs seulement : True \u2192 vrai False \u2192 faux Ils apparaissent souvent comme r\u00e9sultat d\u2019une comparaison. a = 5 b = 10 print(a < b) # True (car 5 est plus petit que 10) print(a == b) # False (car 5 n\u2019est pas \u00e9gal \u00e0 10) print(a != b) # True (car 5 est diff\u00e9rent de 10) \ud83d\udc49 On utilise beaucoup les bool\u00e9ens dans les conditions et les boucles.","title":"4. Les bool\u00e9ens (True, False)"},{"location":"Terminales/rappel/#5-les-chaines-de-caracteres-str","text":"Une cha\u00eene est un texte entre guillemets. mot = \"Python\"","title":"5. Les cha\u00eenes de caract\u00e8res (str)"},{"location":"Terminales/rappel/#quelques-operations-utiles","text":"Acc\u00e9der \u00e0 une lettre : mot[0] \u2192 \"P\" Conna\u00eetre la longueur : len(mot) \u2192 6 Transformer en majuscules : mot.upper() \u2192 \"PYTHON\" Transformer en minuscules : mot.lower() \u2192 \"python\" print(mot[0]) # P print(len(mot)) # 6 print(mot.upper()) # PYTHON \u26a0\ufe0f Les indices commencent \u00e0 0 en Python.","title":"Quelques op\u00e9rations utiles :"},{"location":"Terminales/rappel/#6-les-listes","text":"Une liste permet de stocker plusieurs valeurs. Les listes sont modifiables : on peut ajouter, enlever ou remplacer des \u00e9l\u00e9ments. fruits = [\"pomme\", \"banane\", \"cerise\"] print(fruits[0]) # pomme fruits.append(\"kiwi\") # ajoute \u00e0 la fin print(fruits) # ['pomme', 'banane', 'cerise', 'kiwi'] fruits[1] = \"orange\" # remplace \"banane\" par \"orange\" print(fruits) # ['pomme', 'orange', 'cerise', 'kiwi']","title":"6. Les listes"},{"location":"Terminales/rappel/#7-les-tuples","text":"Un tuple ressemble \u00e0 une liste, mais il est immuable : on ne peut pas modifier ses valeurs apr\u00e8s sa cr\u00e9ation. coordonnees = (3, 5) print(coordonnees[0]) # 3 \ud83d\udc49 Les tuples sont utiles pour stocker des donn\u00e9es fixes (exemple : une position en 2D).","title":"7. Les tuples"},{"location":"Terminales/rappel/#8-les-conditions-if-elif-else","text":"Une condition permet de choisir entre plusieurs actions selon une expression bool\u00e9enne. age = int(input(\"Ton \u00e2ge ? \")) if age < 18: print(\"Tu es mineur\") elif age == 18: print(\"Tout juste majeur !\") else: print(\"Tu es majeur\") \ud83d\udc49 Le mot-cl\u00e9 elif signifie \u00ab sinon si \u00bb.","title":"8. Les conditions (if, elif, else)"},{"location":"Terminales/rappel/#9-la-boucle-for","text":"La boucle for permet de r\u00e9p\u00e9ter une action sur une s\u00e9quence (liste, cha\u00eene, etc.) ou un certain nombre de fois avec range() . for i in range(5): # r\u00e9p\u00e8te 5 fois (0 \u2192 4) print(\"i =\", i) fruits = [\"pomme\", \"banane\", \"cerise\"] for f in fruits: print(\"J\u2019aime\", f)","title":"9. La boucle for"},{"location":"Terminales/rappel/#10-la-boucle-while","text":"La boucle while r\u00e9p\u00e8te une action tant qu\u2019une condition est vraie . \u26a0\ufe0f Attention : si la condition n\u2019est jamais fausse \u2192 boucle infinie ! n = 0 while n < 3: print(\"n =\", n) n = n + 1","title":"10. La boucle while"},{"location":"Terminales/rappel/#11-les-fonctions","text":"Une fonction est un bloc de code r\u00e9utilisable. On la d\u00e9finit avec def , et elle peut renvoyer un r\u00e9sultat avec return . def carre(x): return x * x print(carre(5)) # 25 print(carre(10)) # 100 \ud83d\udc49 Avantages des fonctions : - \u00c9viter les r\u00e9p\u00e9titions - Organiser le code - Le rendre plus lisible","title":"11. Les fonctions"},{"location":"Terminales/rappel/#a-retenir","text":"Entr\u00e9es/sorties : print() , input() , int() Types : str (cha\u00eene), list (liste modifiable), tuple (fixe), bool (vrai/faux) Structures de contr\u00f4le : if , for , while Organisation du code : def pour cr\u00e9er des fonctions","title":"\ud83d\udcdd \u00c0 retenir"},{"location":"Terminales/revisions/","text":"Exercices de pratique Python - Terminale Avant de commencer : - Si vous n'avez pas acc\u00e9s \u00e0 un PC, voici un site en ligne : https://www.online-python.com . Il n'existe pas, \u00e0 ma connaissance, d'app IOS pour compiler du Python qui soit totalement gratuite et qui ne n\u00e9cessite pas de connexion internet. - Si vous avez besoin de revoir les bases, retournez dans la section Rappel : Bases de Python . - La correction est ici , \u00e9vitez de regarder la correction avant d'essayer. Exercice 1 : Bonjour ! \u00c9crivez un programme qui : - Demande le pr\u00e9nom de l\u2019utilisateur avec input() . - Affiche un message du type : Bonjour, (pr\u00e9nom) ! Exercice 2 : Op\u00e9rations simples Demandez \u00e0 l\u2019utilisateur deux nombres et affichez : - leur somme, - leur produit, - leur diff\u00e9rence. Exercice 4 : Tuple et liste Cr\u00e9ez un tuple contenant trois mati\u00e8res scolaires. Cr\u00e9ez une liste vide. Demandez \u00e0 l\u2019utilisateur d\u2019ajouter 3 notes (nombres entiers) dans la liste. Affichez la moyenne des notes. Exercice 5 : Boucles \u00c9crivez un programme qui affiche les 10 premiers entiers (de 1 \u00e0 10) au carr\u00e9. Exercice 6 : Conditions Demandez l\u2019\u00e2ge d\u2019un utilisateur : - Si l\u2019\u00e2ge est inf\u00e9rieur \u00e0 12 : affichez \u00ab enfant \u00bb - Si l\u2019\u00e2ge est entre 12 et 17 inclus : affichez \u00ab adolescent \u00bb - Sinon : affichez \u00ab adulte \u00bb. Exercice 7 : Mot de passe Demandez \u00e0 l\u2019utilisateur de saisir un mot de passe. Tant que la saisie est diff\u00e9rente de \"python123\" , redemandez. Affichez ensuite : Mot de passe correct ! Exercice 8 : Fonction simple \u00c9crivez une fonction aire_rectangle(longueur, largeur) qui retourne l\u2019aire d\u2019un rectangle. Demandez \u00e0 l\u2019utilisateur la longueur et la largeur, puis utilisez la fonction pour afficher l\u2019aire. Exercice 9 : Plus grand \u00e9l\u00e9ment \u00c9crivez une fonction max_liste(liste) qui retourne le plus grand \u00e9l\u00e9ment d\u2019une liste. Testez-la sur une liste de nombres que vous aurez d\u00e9finie dans le code. Exercice 10 : Petit projet Demandez \u00e0 l\u2019utilisateur de saisir une liste de notes (tant qu\u2019il ne saisit pas -1 ). Ensuite : 1. Affichez toutes les notes, 2. Calculez la moyenne, 3. Affichez le nombre de notes sup\u00e9rieures ou \u00e9gales \u00e0 la moyenne.","title":"Exercices de pratique Python - Terminale"},{"location":"Terminales/revisions/#exercices-de-pratique-python-terminale","text":"Avant de commencer : - Si vous n'avez pas acc\u00e9s \u00e0 un PC, voici un site en ligne : https://www.online-python.com . Il n'existe pas, \u00e0 ma connaissance, d'app IOS pour compiler du Python qui soit totalement gratuite et qui ne n\u00e9cessite pas de connexion internet. - Si vous avez besoin de revoir les bases, retournez dans la section Rappel : Bases de Python . - La correction est ici , \u00e9vitez de regarder la correction avant d'essayer.","title":"Exercices de pratique Python - Terminale"},{"location":"Terminales/revisions/#exercice-1-bonjour","text":"\u00c9crivez un programme qui : - Demande le pr\u00e9nom de l\u2019utilisateur avec input() . - Affiche un message du type : Bonjour, (pr\u00e9nom) !","title":"Exercice 1 : Bonjour !"},{"location":"Terminales/revisions/#exercice-2-operations-simples","text":"Demandez \u00e0 l\u2019utilisateur deux nombres et affichez : - leur somme, - leur produit, - leur diff\u00e9rence.","title":"Exercice 2 : Op\u00e9rations simples"},{"location":"Terminales/revisions/#exercice-4-tuple-et-liste","text":"Cr\u00e9ez un tuple contenant trois mati\u00e8res scolaires. Cr\u00e9ez une liste vide. Demandez \u00e0 l\u2019utilisateur d\u2019ajouter 3 notes (nombres entiers) dans la liste. Affichez la moyenne des notes.","title":"Exercice 4 : Tuple et liste"},{"location":"Terminales/revisions/#exercice-5-boucles","text":"\u00c9crivez un programme qui affiche les 10 premiers entiers (de 1 \u00e0 10) au carr\u00e9.","title":"Exercice 5 : Boucles"},{"location":"Terminales/revisions/#exercice-6-conditions","text":"Demandez l\u2019\u00e2ge d\u2019un utilisateur : - Si l\u2019\u00e2ge est inf\u00e9rieur \u00e0 12 : affichez \u00ab enfant \u00bb - Si l\u2019\u00e2ge est entre 12 et 17 inclus : affichez \u00ab adolescent \u00bb - Sinon : affichez \u00ab adulte \u00bb.","title":"Exercice 6 : Conditions"},{"location":"Terminales/revisions/#exercice-7-mot-de-passe","text":"Demandez \u00e0 l\u2019utilisateur de saisir un mot de passe. Tant que la saisie est diff\u00e9rente de \"python123\" , redemandez. Affichez ensuite : Mot de passe correct !","title":"Exercice 7 : Mot de passe"},{"location":"Terminales/revisions/#exercice-8-fonction-simple","text":"\u00c9crivez une fonction aire_rectangle(longueur, largeur) qui retourne l\u2019aire d\u2019un rectangle. Demandez \u00e0 l\u2019utilisateur la longueur et la largeur, puis utilisez la fonction pour afficher l\u2019aire.","title":"Exercice 8 : Fonction simple"},{"location":"Terminales/revisions/#exercice-9-plus-grand-element","text":"\u00c9crivez une fonction max_liste(liste) qui retourne le plus grand \u00e9l\u00e9ment d\u2019une liste. Testez-la sur une liste de nombres que vous aurez d\u00e9finie dans le code.","title":"Exercice 9 : Plus grand \u00e9l\u00e9ment"},{"location":"Terminales/revisions/#exercice-10-petit-projet","text":"Demandez \u00e0 l\u2019utilisateur de saisir une liste de notes (tant qu\u2019il ne saisit pas -1 ). Ensuite : 1. Affichez toutes les notes, 2. Calculez la moyenne, 3. Affichez le nombre de notes sup\u00e9rieures ou \u00e9gales \u00e0 la moyenne.","title":"Exercice 10 : Petit projet"},{"location":"Terminales/Chapitres/BDD/","text":"Bases de donn\u00e9es Objectifs du chapitre \u00c0 la fin de ce cours, vous devez \u00eatre capables de : - Comprendre le mod\u00e8le relationnel (tables, attributs, cl\u00e9s). - Distinguer structure et contenu d\u2019une base de donn\u00e9es. - Manipuler une base de donn\u00e9es via SQL (interrogation et mise \u00e0 jour). - Conna\u00eetre le r\u00f4le d\u2019un SGBD (s\u00e9curit\u00e9, efficacit\u00e9, persistance). - Porter un regard critique sur l\u2019usage des donn\u00e9es (confidentialit\u00e9, RGPD). Introduction Une donn\u00e9e est une repr\u00e9sentation \u00e9l\u00e9mentaire d'une information, exprim\u00e9e sous une forme interpr\u00e9table par un syst\u00e8me informatique. Une base de donn\u00e9es est un outil permettant de stocker, organiser et manipuler de grandes quantit\u00e9s de donn\u00e9es. Exemples : - Amazon \u2192 millions de commandes et utilisateurs. - Spotify \u2192 catalogues de musiques, playlists personnelles. - Un lyc\u00e9e \u2192 notes, emplois du temps, enseignants, salles. Les simples tableaux vus en Premi\u00e8re ne suffisent plus : il faut un mod\u00e8le plus robuste \u2192 le mod\u00e8le relationnel . Le mod\u00e8le relationnel Une table est une structure qui permet de stocker des donn\u00e9es dans une base de donn\u00e9es relationnelle. Elle est compos\u00e9e : - de colonnes (appel\u00e9es attributs ) qui d\u00e9crivent la nature des donn\u00e9es - de lignes (appel\u00e9es tuples ou enregistrements ) qui contiennent les valeurs concr\u00e8tes Voici un exemple : La table : Eleve Chaque attribut est d\u00e9fini sur un domaine de valeurs. Le domaine n\u2019est pas seulement le type de donn\u00e9e (entier, texte, date), mais aussi parfois des contraintes suppl\u00e9mentaires (ex. : \u00e2ge \u2265 0, email respectant un format particulier, etc). Pour identifier de mani\u00e8re unique chaque ligne (chaque enregistrement) d\u2019une table, on utilisera ce qu'on appelle une cl\u00e9 primaire qui peut \u00eatre un attribut ou un ensemble d\u2019attributs. Elle doit \u00eatre unique : deux lignes ne peuvent pas avoir la m\u00eame valeur de cl\u00e9 primaire. Elle doit \u00eatre non nulle (NOT NULL). Elle ne doit pas changer dans le temps (stabilit\u00e9). Exercices : Determiner la cl\u00e9 primaire ainsi que les domaines et contraintes des attributs de la classe Eleve. Tr\u00e8s souvent, la cl\u00e9 primaire est constitu\u00e9e d\u2019un unique attribut d\u00e9fini comme un identifiant num\u00e9rique unique et auto-incr\u00e9ment\u00e9, garantissant l\u2019unicit\u00e9 et la stabilit\u00e9 des enregistrements. Probl\u00e8mes : Redondance et anomalies Professeurs r\u00e9p\u00e9t\u00e9s : Le professeur principal de la classe 1A (M. Beline) appara\u00eet plusieurs fois (Alice et C\u00e9dric). Si le professeur principal devait changer, il faudrait alors le corriger partout, sinon incoh\u00e9rence. Ann\u00e9es li\u00e9es aux classes : L\u2019\"Ann\u00e9e\" est implicitement li\u00e9e \u00e0 la \"Classe\". On stocke plusieur fois la m\u00eame information : la 1A est une classe de premi\u00e8re. Les anomalies : - d' insertion : si on veut enregistrer une classe qui n'a pas encore d'\u00e9l\u00e8ve, on ne peut pas - de mise \u00e0 jour : si un professeur change de nom, il faut le modifier partout dans la base sinon incoh\u00e9rence - de suppression : Si on supprime tous les \u00e9l\u00e8ves de la classe 1A, on perd toute les informations sur cette derni\u00e8re Afin d\u2019\u00e9viter les redondances et les anomalies, on s\u00e9pare les informations dans plusieurs tables reli\u00e9es entre elles par des cl\u00e9s \u00e9trang\u00e8res. Une cl\u00e9 \u00e9trang\u00e8re est un attribut (ou un ensemble d\u2019attributs) d\u2019une table qui fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire d\u2019une autre table . Elle permet de lier deux tables entre elles et d\u2019assurer la coh\u00e9rence des donn\u00e9es. Dans notre exemple, il est pertinent d'utiliser deux classes : Eleve et Classe. Repr\u00e9sentation : Le sch\u00e9ma relationnel Le sch\u00e9ma relationnel d\u00e9crit la structure d\u2019une base de donn\u00e9es relationnelle de mani\u00e8re formelle. Il pr\u00e9cise pour chaque table : - Le nom de la table . - Les attributs (colonnes) avec leur domaine de valeurs et leurs contraintes (type, non null, valeurs autoris\u00e9es). - La cl\u00e9 primaire , qui identifie de mani\u00e8re unique chaque enregistrement. - Les cl\u00e9s \u00e9trang\u00e8res , qui \u00e9tablissent les liens avec d\u2019autres tables. Le sch\u00e9ma relationnel est ind\u00e9pendant des donn\u00e9es r\u00e9elles (contenu). Il sert de plan directeur pour construire, maintenir et interroger la base de donn\u00e9es tout en garantissant l\u2019int\u00e9grit\u00e9 des informations et en \u00e9vitant les redondances. Exemple simple : Le symbole # sert \u00e0 identifier les cl\u00e9s primaires, les attributs soulign\u00e9s sont les cl\u00e9s \u00e9trang\u00e8res r\u00e9f\u00e9rencant la cl\u00e9 primaire point\u00e9e par la fl\u00e8che. Gr\u00e2ce \u00e0 ce sch\u00e9ma, on sait quelles tables existent , comment elles sont reli\u00e9es . Exercice : Base de donn\u00e9es pour une biblioth\u00e8que \u00c9nonc\u00e9 Vous devez concevoir une base de donn\u00e9es pour g\u00e9rer les informations suivantes : Imaginez que vous travaillez dans une biblioth\u00e8que. Votre mission est de cr\u00e9er un syst\u00e8me permettant de suivre toutes les informations importantes pour g\u00e9rer les livres et leurs emprunts. Chaque livre poss\u00e8de des caract\u00e9ristiques comme le titre, l\u2019auteur et la date de publication. Pour ne pas confondre deux livres identiques, chaque exemplaire dispose d\u2019un ISBN. Les clients qui fr\u00e9quentent la biblioth\u00e8que ont chacune un pr\u00e9nom, un nom, une date de naissance et une adresse mail. On doit pouvoir distinguer facilement chaque lecteur. Enfin, la biblioth\u00e8que souhaite suivre les emprunts : pour chaque livre pr\u00eat\u00e9, on conna\u00eet la date \u00e0 laquelle il a \u00e9t\u00e9 emprunt\u00e9, la date pr\u00e9vue de retour, le livre concern\u00e9 et la personne qui l\u2019a emprunt\u00e9. \u00c0 partir de ce sc\u00e9nario, r\u00e9fl\u00e9chissez \u00e0 la meilleure fa\u00e7on d\u2019organiser ces informations pour \u00e9viter les r\u00e9p\u00e9titions et faciliter les recherches. Consignes : Identifiez les tables n\u00e9cessaires. Pour chaque table, indiquez les attributs , leur domaine de valeurs et les contraintes . D\u00e9terminez la cl\u00e9 primaire pour chaque table. Identifiez les cl\u00e9s \u00e9trang\u00e8res pour relier les tables entre elles. Dessinez le sch\u00e9ma relationnel correspondant. \u00c9nonc\u00e9 Vous devez concevoir une base de donn\u00e9es pour g\u00e9rer les informations d\u2019un garage automobile. Votre mission est de cr\u00e9er un syst\u00e8me permettant de suivre toutes les informations n\u00e9cessaires sur les v\u00e9hicules, les clients et les r\u00e9parations effectu\u00e9es. Chaque v\u00e9hicule poss\u00e8de une immatriculation, un propri\u00e8taire, une marque, un mod\u00e8le et une ann\u00e9e de fabrication. Chaque client a un pr\u00e9nom, un nom, une adresse et un num\u00e9ro de t\u00e9l\u00e9phone. Enfin, le garage souhaite suivre les r\u00e9parations : pour chaque intervention, on doit enregistrer la date, la description des travaux r\u00e9alis\u00e9s, le v\u00e9hicule concern\u00e9 et le m\u00e9canicien responsable. Les m\u00e9caniciens sont identifi\u00e9s par un matricule et ont un nom ainsi qu\u2019une sp\u00e9cialit\u00e9 (moteur, carrosserie, \u00e9lectronique\u2026). \u00c0 partir de ce sc\u00e9nario, r\u00e9fl\u00e9chissez \u00e0 la meilleure fa\u00e7on d\u2019organiser ces informations pour \u00e9viter les r\u00e9p\u00e9titions et faciliter les recherches. Consignes : Identifiez les tables n\u00e9cessaires. Pour chaque table, indiquez les attributs , leur domaine de valeurs et les contraintes . D\u00e9terminez la cl\u00e9 primaire pour chaque table. Identifiez les cl\u00e9s \u00e9trang\u00e8res pour relier les tables entre elles. Dessinez le sch\u00e9ma relationnel correspondant. Le Syst\u00e8me de Gestion de Bases de Donn\u00e9es Relationnelles (SGBDR) Jusqu\u2019ici, nous avons \u00e9tudi\u00e9 le mod\u00e8le relationnel : tables, cl\u00e9s primaires, cl\u00e9s \u00e9trang\u00e8res, sch\u00e9ma relationnel. Mais pour exploiter concr\u00e8tement ces concepts, il faut un logiciel capable de cr\u00e9er, g\u00e9rer et interroger des bases de donn\u00e9es : c\u2019est le r\u00f4le d\u2019un Syst\u00e8me de Gestion de Bases de Donn\u00e9es Relationnelles (SGBDR) . Un SGBDR (comme MySQL, PostgreSQL, SQLite, Oracle, SQL Server) rend plusieurs services essentiels : 1. Persistance des donn\u00e9es Un SGBDR assure que les donn\u00e9es sont stock\u00e9es durablement sur un support non volatil (disque, SSD). Contrairement aux simples structures en m\u00e9moire (listes, tableaux), les donn\u00e9es sont conserv\u00e9es m\u00eame apr\u00e8s l\u2019arr\u00eat ou la panne du syst\u00e8me. Exemple : les commandes d\u2019Amazon ou les playlists Spotify ne disparaissent pas quand on \u00e9teint son ordinateur. 2. Gestion des acc\u00e8s concurrents Plusieurs utilisateurs ou programmes peuvent acc\u00e9der \u00e0 la base en m\u00eame temps . Le SGBDR garantit que les donn\u00e9es restent coh\u00e9rentes , m\u00eame si deux personnes modifient simultan\u00e9ment la m\u00eame information. Exemple : deux employ\u00e9s de banque qui consultent et modifient le solde d\u2019un compte en parall\u00e8le. 3. Efficacit\u00e9 du traitement des requ\u00eates Le SGBDR optimise automatiquement l\u2019ex\u00e9cution des requ\u00eates SQL (s\u00e9lection, jointures, filtrages) gr\u00e2ce \u00e0 des m\u00e9canismes comme les index . L\u2019utilisateur n\u2019a pas besoin de savoir comment les donn\u00e9es sont stock\u00e9es physiquement : le syst\u00e8me se charge d\u2019obtenir la r\u00e9ponse rapidement et efficacement . Exemple : retrouver un client pr\u00e9cis parmi des millions d\u2019enregistrements en une fraction de seconde. 4. S\u00e9curisation des acc\u00e8s Le SGBDR contr\u00f4le qui a le droit de lire, modifier ou supprimer certaines donn\u00e9es. - Gestion des comptes utilisateurs. - Attribution de privil\u00e8ges (ex. : un \u00e9l\u00e8ve peut consulter ses notes, mais pas celles des autres). - Protection contre les acc\u00e8s non autoris\u00e9s. Exemple : dans une base de donn\u00e9es d\u2019un h\u00f4pital, seuls les m\u00e9decins ont acc\u00e8s aux dossiers m\u00e9dicaux des patients. 5. Bilan Le SGBDR n\u2019est pas seulement un outil de stockage : - Il garantit la durabilit\u00e9 des donn\u00e9es. - Il g\u00e8re les conflits d\u2019acc\u00e8s simultan\u00e9s . - Il optimise l\u2019 efficacit\u00e9 des recherches . - Il s\u00e9curise l\u2019 acc\u00e8s aux informations sensibles . Ces services sont indispensables pour comprendre pourquoi les bases de donn\u00e9es relationnelles sont utilis\u00e9es partout dans le monde num\u00e9rique. SQL Introduction Le langage SQL (Structured Query Language) permet d\u2019interroger et de modifier des bases de donn\u00e9es relationnelles. Nous allons voir les principales instructions pour s\u00e9lectionner , ajouter , modifier ou supprimer des donn\u00e9es. Pour illustrer les exemples, on utilisera la base suivante : Table Eleve id_eleve nom prenom classe age 1 Martin Alice TNSI 17 2 Dupont Lucas TNSI 18 3 Durand Emma TES 17 4 Bernard Hugo TNSI 18 Table Note id_note id_eleve matiere valeur 1 1 NSI 15 2 2 NSI 12 3 1 Maths 14 4 3 NSI 17 Les composants d\u2019une requ\u00eate SQL Une requ\u00eate SQL est compos\u00e9e de plusieurs parties : - SELECT : les colonnes \u00e0 afficher - FROM : les tables utilis\u00e9es - WHERE : condition(s) de filtrage (optionnel) - JOIN : pour relier plusieurs tables (optionnel) Requ\u00eates d\u2019interrogation Afficher toutes les colonnes SELECT * FROM Eleve; Affiche toutes les informations de la table Eleve . S\u00e9lectionner certaines colonnes SELECT nom, prenom FROM Eleve; Affiche uniquement le nom et le pr\u00e9nom des \u00e9l\u00e8ves. Supprimer les doublons avec DISTINCT SELECT DISTINCT classe FROM Eleve; Affiche la liste des classes sans r\u00e9p\u00e9tition ( TNSI , TES ). Filtrer avec WHERE SELECT nom, prenom FROM Eleve WHERE age = 18; Affiche les \u00e9l\u00e8ves ayant 18 ans. Trier les r\u00e9sultats avec ORDER BY SELECT nom, prenom, age FROM Eleve ORDER BY age DESC; Classe les \u00e9l\u00e8ves par \u00e2ge d\u00e9croissant. Utiliser les fonctions d\u2019agr\u00e9gation - AVG() : moyenne - MIN() / MAX() : minimum, maximum - COUNT() : compter le nombre de valeurs - SUM() : somme Exemple : SELECT AVG(valeur) FROM Note WHERE matiere = 'NSI'; Moyenne des notes en NSI. Requ\u00eates imbriqu\u00e9es (sous-requ\u00eates) Une requ\u00eate imbriqu\u00e9e (ou sous-requ\u00eate ) est une requ\u00eate SQL plac\u00e9e \u00e0 l\u2019int\u00e9rieur d\u2019une autre requ\u00eate. Elle permet de filtrer ou de calculer des r\u00e9sultats interm\u00e9diaires. Exemples : SELECT nom, prenom FROM Eleve WHERE id_eleve IN ( SELECT id_eleve FROM Note WHERE valeur > 15 ); SELECT nom, prenom FROM Eleve WHERE age = ( SELECT MAX(age) FROM Eleve ); SELECT nom, prenom, (SELECT AVG(valeur) FROM Note WHERE Note.id_eleve = Eleve.id_eleve) AS moyenne FROM Eleve; SELECT nom, prenom FROM Eleve E WHERE age > ( SELECT AVG(age) FROM Eleve WHERE classe = E.classe ); Exercices Voici un base de donn\u00e9es repertoriant les 151 premiers pokemons : \ud83d\udcbe T\u00e9l\u00e9charger pokemon.db pokemon # numero (int) nom (text) type1 (text) type2 (text) taille (float) poids (float) evolution (int) L'attribut evolution est une cl\u00e9 \u00e9trang\u00e8re qui r\u00e9f\u00e9rence l'attribut numero . Voici les diff\u00e9rents types qui existent : Plante Feu Eau Insecte Normal Poison \u00c9lectrik Sol F\u00e9e Combat Psy Roche Spectre Glace null Chaque pokemon a obligatoirement un type1 , mais type2 peut \u00eatre \u00e9gal \u00e0 null . Pour v\u00e9rifier qu'un \u00e9l\u00e9ment est null on utilisera le mot cl\u00e9 is (exemple : evolution is null). Requ\u00eates \u00e9crire en les requ\u00eates SQL suivantes : Afficher tous la table pokemon Afficher tous les noms et num\u00e9ro des pokemons Afficher toutes les combinaisons de types pr\u00e9sentes dans la table Probl\u00e8me : on a beaucoup de fois la m\u00eame combinaison : afficher toutes les combinaisons diff\u00e9rentes Afficher tous les pokemons de type Eau qui en sont \u00e0 leur dernier stade d'\u00e9volution (c'est \u00e0 dire que l'attribut evolution est \u00e0 null ) Afficher les pokemons du plus grand au plus petit Afficher les pokemons dans l'ordre alphabetique inverse Afficher la taille moyenne des pokemons de type Insecte Afficher le plus petit des pokemons ainsi que le plus gros Afficher le nombre de pokemon de type Spectre Afficher la somme des poids des pokemons de type Feu dont la taille d\u00e9passe le m\u00e8tre Afficher les Pok\u00e9mon dont le deuxi\u00e8me type est Poison et dont la taille est sup\u00e9rieure \u00e0 1 m\u00e8tre Afficher les Pok\u00e9mon dont le poids est sup\u00e9rieur \u00e0 la moyenne du poids de tous les Pok\u00e9mon Afficher le nom et le type des Pok\u00e9mon dont la taille est comprise entre 1 m\u00e8tre et 2 m\u00e8tres, tri\u00e9s par taille d\u00e9croissante Afficher les Pok\u00e9mon dont la somme des tailles et des poids est sup\u00e9rieure \u00e0 50 Relier plusieurs tables avec JOIN SELECT Eleve.nom, Eleve.prenom, Note.matiere, Note.valeur FROM Eleve JOIN Note ON Eleve.id_eleve = Note.id_eleve; Affiche le nom, le pr\u00e9nom et les notes des \u00e9l\u00e8ves. Alias avec AS et auto-jointures AS permet de donner un nom temporaire \u00e0 une colonne ou une table. Utile pour simplifier les requ\u00eates et faire des jointures sur soi-m\u00eame. Exemple d\u2019 auto-jointure : trouver les paires d\u2019\u00e9l\u00e8ves d\u2019une m\u00eame classe. SELECT E1.nom AS Eleve1, E2.nom AS Eleve2 FROM Eleve AS E1 JOIN Eleve AS E2 ON E1.classe = E2.classe WHERE E1.id_eleve < E2.id_eleve; **Exercice** \u00e9crire en les requ\u00eates SQL suivantes : 1. Afficher le ``nom`` de chaque Pok\u00e9mon ainsi que le ``nom`` de son ``evolution`` (si elle existe) en utilisant une auto-jointure sur la colonne `evolution`. 2. Afficher tous les Pok\u00e9mon dont le ``type1`` est le m\u00eame que celui de leur `evolution`. 3. Afficher le ``nom`` des Pok\u00e9mon et les ``types`` de leur ``evolution`` lorsque le ``type1`` principal diff\u00e8re. 4. Afficher le ``nom`` et le ``type`` des Pok\u00e9mon dont le type principal diff\u00e8re de celui de l\u2019evolution mais qui partagent le m\u00eame type secondaire. 5. Afficher les Pok\u00e9mon et le ``nom`` de leur ``evolution`` uniquement si le ``taille`` de l\u2019\u00e9volution est inf\u00e9rieur \u00e0 celui du Pok\u00e9mon initial. --- ### Requ\u00eates de mise \u00e0 jour **Ajouter une donn\u00e9e (INSERT)** ```sql INSERT INTO Eleve (id_eleve, nom, prenom, classe, age) VALUES (5, 'Lemoine', 'Clara', 'TES', 17); Ajoute une nouvelle \u00e9l\u00e8ve. Modifier une donn\u00e9e (UPDATE) UPDATE Eleve SET age = 19 WHERE nom = 'Dupont' AND prenom = 'Lucas'; Met \u00e0 jour l\u2019\u00e2ge de Lucas Dupont. Supprimer une donn\u00e9e (DELETE) DELETE FROM Eleve WHERE id_eleve = 4; Supprime Hugo Bernard de la base. Exercice \u00e9crire en les requ\u00eates SQL suivantes (pour chacune d'entre elle, v\u00e9rifier que les mises \u00e0 jour ont bien \u00e9t\u00e9es effectu\u00e9es avec des requ\u00eates d'interrogation): Ajouter les pok\u00e9mons que vous voulez dans la table. Vous pouvez chercher les infos sur internet ou bien en inventer. Modifier ces donn\u00e9es Afficher le nombre de pok\u00e9mon de type Eau . Ensuite supprimer tous les pok\u00e9mons de type Eau de la table. (Il y en a vraiment trop) Exercice type bac","title":"Base de donn\u00e9es"},{"location":"Terminales/Chapitres/BDD/#bases-de-donnees","text":"","title":"Bases de donn\u00e9es"},{"location":"Terminales/Chapitres/BDD/#objectifs-du-chapitre","text":"\u00c0 la fin de ce cours, vous devez \u00eatre capables de : - Comprendre le mod\u00e8le relationnel (tables, attributs, cl\u00e9s). - Distinguer structure et contenu d\u2019une base de donn\u00e9es. - Manipuler une base de donn\u00e9es via SQL (interrogation et mise \u00e0 jour). - Conna\u00eetre le r\u00f4le d\u2019un SGBD (s\u00e9curit\u00e9, efficacit\u00e9, persistance). - Porter un regard critique sur l\u2019usage des donn\u00e9es (confidentialit\u00e9, RGPD).","title":"Objectifs du chapitre"},{"location":"Terminales/Chapitres/BDD/#introduction","text":"Une donn\u00e9e est une repr\u00e9sentation \u00e9l\u00e9mentaire d'une information, exprim\u00e9e sous une forme interpr\u00e9table par un syst\u00e8me informatique. Une base de donn\u00e9es est un outil permettant de stocker, organiser et manipuler de grandes quantit\u00e9s de donn\u00e9es. Exemples : - Amazon \u2192 millions de commandes et utilisateurs. - Spotify \u2192 catalogues de musiques, playlists personnelles. - Un lyc\u00e9e \u2192 notes, emplois du temps, enseignants, salles. Les simples tableaux vus en Premi\u00e8re ne suffisent plus : il faut un mod\u00e8le plus robuste \u2192 le mod\u00e8le relationnel .","title":"Introduction"},{"location":"Terminales/Chapitres/BDD/#le-modele-relationnel","text":"Une table est une structure qui permet de stocker des donn\u00e9es dans une base de donn\u00e9es relationnelle. Elle est compos\u00e9e : - de colonnes (appel\u00e9es attributs ) qui d\u00e9crivent la nature des donn\u00e9es - de lignes (appel\u00e9es tuples ou enregistrements ) qui contiennent les valeurs concr\u00e8tes Voici un exemple : La table : Eleve Chaque attribut est d\u00e9fini sur un domaine de valeurs. Le domaine n\u2019est pas seulement le type de donn\u00e9e (entier, texte, date), mais aussi parfois des contraintes suppl\u00e9mentaires (ex. : \u00e2ge \u2265 0, email respectant un format particulier, etc). Pour identifier de mani\u00e8re unique chaque ligne (chaque enregistrement) d\u2019une table, on utilisera ce qu'on appelle une cl\u00e9 primaire qui peut \u00eatre un attribut ou un ensemble d\u2019attributs. Elle doit \u00eatre unique : deux lignes ne peuvent pas avoir la m\u00eame valeur de cl\u00e9 primaire. Elle doit \u00eatre non nulle (NOT NULL). Elle ne doit pas changer dans le temps (stabilit\u00e9). Exercices : Determiner la cl\u00e9 primaire ainsi que les domaines et contraintes des attributs de la classe Eleve. Tr\u00e8s souvent, la cl\u00e9 primaire est constitu\u00e9e d\u2019un unique attribut d\u00e9fini comme un identifiant num\u00e9rique unique et auto-incr\u00e9ment\u00e9, garantissant l\u2019unicit\u00e9 et la stabilit\u00e9 des enregistrements.","title":"Le mod\u00e8le relationnel"},{"location":"Terminales/Chapitres/BDD/#problemes-redondance-et-anomalies","text":"Professeurs r\u00e9p\u00e9t\u00e9s : Le professeur principal de la classe 1A (M. Beline) appara\u00eet plusieurs fois (Alice et C\u00e9dric). Si le professeur principal devait changer, il faudrait alors le corriger partout, sinon incoh\u00e9rence. Ann\u00e9es li\u00e9es aux classes : L\u2019\"Ann\u00e9e\" est implicitement li\u00e9e \u00e0 la \"Classe\". On stocke plusieur fois la m\u00eame information : la 1A est une classe de premi\u00e8re. Les anomalies : - d' insertion : si on veut enregistrer une classe qui n'a pas encore d'\u00e9l\u00e8ve, on ne peut pas - de mise \u00e0 jour : si un professeur change de nom, il faut le modifier partout dans la base sinon incoh\u00e9rence - de suppression : Si on supprime tous les \u00e9l\u00e8ves de la classe 1A, on perd toute les informations sur cette derni\u00e8re Afin d\u2019\u00e9viter les redondances et les anomalies, on s\u00e9pare les informations dans plusieurs tables reli\u00e9es entre elles par des cl\u00e9s \u00e9trang\u00e8res. Une cl\u00e9 \u00e9trang\u00e8re est un attribut (ou un ensemble d\u2019attributs) d\u2019une table qui fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire d\u2019une autre table . Elle permet de lier deux tables entre elles et d\u2019assurer la coh\u00e9rence des donn\u00e9es. Dans notre exemple, il est pertinent d'utiliser deux classes : Eleve et Classe.","title":"Probl\u00e8mes : Redondance et anomalies"},{"location":"Terminales/Chapitres/BDD/#representation-le-schema-relationnel","text":"Le sch\u00e9ma relationnel d\u00e9crit la structure d\u2019une base de donn\u00e9es relationnelle de mani\u00e8re formelle. Il pr\u00e9cise pour chaque table : - Le nom de la table . - Les attributs (colonnes) avec leur domaine de valeurs et leurs contraintes (type, non null, valeurs autoris\u00e9es). - La cl\u00e9 primaire , qui identifie de mani\u00e8re unique chaque enregistrement. - Les cl\u00e9s \u00e9trang\u00e8res , qui \u00e9tablissent les liens avec d\u2019autres tables. Le sch\u00e9ma relationnel est ind\u00e9pendant des donn\u00e9es r\u00e9elles (contenu). Il sert de plan directeur pour construire, maintenir et interroger la base de donn\u00e9es tout en garantissant l\u2019int\u00e9grit\u00e9 des informations et en \u00e9vitant les redondances. Exemple simple : Le symbole # sert \u00e0 identifier les cl\u00e9s primaires, les attributs soulign\u00e9s sont les cl\u00e9s \u00e9trang\u00e8res r\u00e9f\u00e9rencant la cl\u00e9 primaire point\u00e9e par la fl\u00e8che. Gr\u00e2ce \u00e0 ce sch\u00e9ma, on sait quelles tables existent , comment elles sont reli\u00e9es .","title":"Repr\u00e9sentation : Le sch\u00e9ma relationnel"},{"location":"Terminales/Chapitres/BDD/#exercice-base-de-donnees-pour-une-bibliotheque","text":"","title":"Exercice : Base de donn\u00e9es pour une biblioth\u00e8que"},{"location":"Terminales/Chapitres/BDD/#enonce","text":"Vous devez concevoir une base de donn\u00e9es pour g\u00e9rer les informations suivantes : Imaginez que vous travaillez dans une biblioth\u00e8que. Votre mission est de cr\u00e9er un syst\u00e8me permettant de suivre toutes les informations importantes pour g\u00e9rer les livres et leurs emprunts. Chaque livre poss\u00e8de des caract\u00e9ristiques comme le titre, l\u2019auteur et la date de publication. Pour ne pas confondre deux livres identiques, chaque exemplaire dispose d\u2019un ISBN. Les clients qui fr\u00e9quentent la biblioth\u00e8que ont chacune un pr\u00e9nom, un nom, une date de naissance et une adresse mail. On doit pouvoir distinguer facilement chaque lecteur. Enfin, la biblioth\u00e8que souhaite suivre les emprunts : pour chaque livre pr\u00eat\u00e9, on conna\u00eet la date \u00e0 laquelle il a \u00e9t\u00e9 emprunt\u00e9, la date pr\u00e9vue de retour, le livre concern\u00e9 et la personne qui l\u2019a emprunt\u00e9. \u00c0 partir de ce sc\u00e9nario, r\u00e9fl\u00e9chissez \u00e0 la meilleure fa\u00e7on d\u2019organiser ces informations pour \u00e9viter les r\u00e9p\u00e9titions et faciliter les recherches. Consignes : Identifiez les tables n\u00e9cessaires. Pour chaque table, indiquez les attributs , leur domaine de valeurs et les contraintes . D\u00e9terminez la cl\u00e9 primaire pour chaque table. Identifiez les cl\u00e9s \u00e9trang\u00e8res pour relier les tables entre elles. Dessinez le sch\u00e9ma relationnel correspondant.","title":"\u00c9nonc\u00e9"},{"location":"Terminales/Chapitres/BDD/#enonce_1","text":"Vous devez concevoir une base de donn\u00e9es pour g\u00e9rer les informations d\u2019un garage automobile. Votre mission est de cr\u00e9er un syst\u00e8me permettant de suivre toutes les informations n\u00e9cessaires sur les v\u00e9hicules, les clients et les r\u00e9parations effectu\u00e9es. Chaque v\u00e9hicule poss\u00e8de une immatriculation, un propri\u00e8taire, une marque, un mod\u00e8le et une ann\u00e9e de fabrication. Chaque client a un pr\u00e9nom, un nom, une adresse et un num\u00e9ro de t\u00e9l\u00e9phone. Enfin, le garage souhaite suivre les r\u00e9parations : pour chaque intervention, on doit enregistrer la date, la description des travaux r\u00e9alis\u00e9s, le v\u00e9hicule concern\u00e9 et le m\u00e9canicien responsable. Les m\u00e9caniciens sont identifi\u00e9s par un matricule et ont un nom ainsi qu\u2019une sp\u00e9cialit\u00e9 (moteur, carrosserie, \u00e9lectronique\u2026). \u00c0 partir de ce sc\u00e9nario, r\u00e9fl\u00e9chissez \u00e0 la meilleure fa\u00e7on d\u2019organiser ces informations pour \u00e9viter les r\u00e9p\u00e9titions et faciliter les recherches. Consignes : Identifiez les tables n\u00e9cessaires. Pour chaque table, indiquez les attributs , leur domaine de valeurs et les contraintes . D\u00e9terminez la cl\u00e9 primaire pour chaque table. Identifiez les cl\u00e9s \u00e9trang\u00e8res pour relier les tables entre elles. Dessinez le sch\u00e9ma relationnel correspondant.","title":"\u00c9nonc\u00e9"},{"location":"Terminales/Chapitres/BDD/#le-systeme-de-gestion-de-bases-de-donnees-relationnelles-sgbdr","text":"Jusqu\u2019ici, nous avons \u00e9tudi\u00e9 le mod\u00e8le relationnel : tables, cl\u00e9s primaires, cl\u00e9s \u00e9trang\u00e8res, sch\u00e9ma relationnel. Mais pour exploiter concr\u00e8tement ces concepts, il faut un logiciel capable de cr\u00e9er, g\u00e9rer et interroger des bases de donn\u00e9es : c\u2019est le r\u00f4le d\u2019un Syst\u00e8me de Gestion de Bases de Donn\u00e9es Relationnelles (SGBDR) . Un SGBDR (comme MySQL, PostgreSQL, SQLite, Oracle, SQL Server) rend plusieurs services essentiels :","title":"Le Syst\u00e8me de Gestion de Bases de Donn\u00e9es Relationnelles (SGBDR)"},{"location":"Terminales/Chapitres/BDD/#1-persistance-des-donnees","text":"Un SGBDR assure que les donn\u00e9es sont stock\u00e9es durablement sur un support non volatil (disque, SSD). Contrairement aux simples structures en m\u00e9moire (listes, tableaux), les donn\u00e9es sont conserv\u00e9es m\u00eame apr\u00e8s l\u2019arr\u00eat ou la panne du syst\u00e8me. Exemple : les commandes d\u2019Amazon ou les playlists Spotify ne disparaissent pas quand on \u00e9teint son ordinateur.","title":"1. Persistance des donn\u00e9es"},{"location":"Terminales/Chapitres/BDD/#2-gestion-des-acces-concurrents","text":"Plusieurs utilisateurs ou programmes peuvent acc\u00e9der \u00e0 la base en m\u00eame temps . Le SGBDR garantit que les donn\u00e9es restent coh\u00e9rentes , m\u00eame si deux personnes modifient simultan\u00e9ment la m\u00eame information. Exemple : deux employ\u00e9s de banque qui consultent et modifient le solde d\u2019un compte en parall\u00e8le.","title":"2. Gestion des acc\u00e8s concurrents"},{"location":"Terminales/Chapitres/BDD/#3-efficacite-du-traitement-des-requetes","text":"Le SGBDR optimise automatiquement l\u2019ex\u00e9cution des requ\u00eates SQL (s\u00e9lection, jointures, filtrages) gr\u00e2ce \u00e0 des m\u00e9canismes comme les index . L\u2019utilisateur n\u2019a pas besoin de savoir comment les donn\u00e9es sont stock\u00e9es physiquement : le syst\u00e8me se charge d\u2019obtenir la r\u00e9ponse rapidement et efficacement . Exemple : retrouver un client pr\u00e9cis parmi des millions d\u2019enregistrements en une fraction de seconde.","title":"3. Efficacit\u00e9 du traitement des requ\u00eates"},{"location":"Terminales/Chapitres/BDD/#4-securisation-des-acces","text":"Le SGBDR contr\u00f4le qui a le droit de lire, modifier ou supprimer certaines donn\u00e9es. - Gestion des comptes utilisateurs. - Attribution de privil\u00e8ges (ex. : un \u00e9l\u00e8ve peut consulter ses notes, mais pas celles des autres). - Protection contre les acc\u00e8s non autoris\u00e9s. Exemple : dans une base de donn\u00e9es d\u2019un h\u00f4pital, seuls les m\u00e9decins ont acc\u00e8s aux dossiers m\u00e9dicaux des patients.","title":"4. S\u00e9curisation des acc\u00e8s"},{"location":"Terminales/Chapitres/BDD/#5-bilan","text":"Le SGBDR n\u2019est pas seulement un outil de stockage : - Il garantit la durabilit\u00e9 des donn\u00e9es. - Il g\u00e8re les conflits d\u2019acc\u00e8s simultan\u00e9s . - Il optimise l\u2019 efficacit\u00e9 des recherches . - Il s\u00e9curise l\u2019 acc\u00e8s aux informations sensibles . Ces services sont indispensables pour comprendre pourquoi les bases de donn\u00e9es relationnelles sont utilis\u00e9es partout dans le monde num\u00e9rique.","title":"5. Bilan"},{"location":"Terminales/Chapitres/BDD/#sql","text":"","title":"SQL"},{"location":"Terminales/Chapitres/BDD/#introduction_1","text":"Le langage SQL (Structured Query Language) permet d\u2019interroger et de modifier des bases de donn\u00e9es relationnelles. Nous allons voir les principales instructions pour s\u00e9lectionner , ajouter , modifier ou supprimer des donn\u00e9es. Pour illustrer les exemples, on utilisera la base suivante : Table Eleve id_eleve nom prenom classe age 1 Martin Alice TNSI 17 2 Dupont Lucas TNSI 18 3 Durand Emma TES 17 4 Bernard Hugo TNSI 18 Table Note id_note id_eleve matiere valeur 1 1 NSI 15 2 2 NSI 12 3 1 Maths 14 4 3 NSI 17","title":"Introduction"},{"location":"Terminales/Chapitres/BDD/#les-composants-dune-requete-sql","text":"Une requ\u00eate SQL est compos\u00e9e de plusieurs parties : - SELECT : les colonnes \u00e0 afficher - FROM : les tables utilis\u00e9es - WHERE : condition(s) de filtrage (optionnel) - JOIN : pour relier plusieurs tables (optionnel)","title":"Les composants d\u2019une requ\u00eate SQL"},{"location":"Terminales/Chapitres/BDD/#requetes-dinterrogation","text":"Afficher toutes les colonnes SELECT * FROM Eleve; Affiche toutes les informations de la table Eleve . S\u00e9lectionner certaines colonnes SELECT nom, prenom FROM Eleve; Affiche uniquement le nom et le pr\u00e9nom des \u00e9l\u00e8ves. Supprimer les doublons avec DISTINCT SELECT DISTINCT classe FROM Eleve; Affiche la liste des classes sans r\u00e9p\u00e9tition ( TNSI , TES ). Filtrer avec WHERE SELECT nom, prenom FROM Eleve WHERE age = 18; Affiche les \u00e9l\u00e8ves ayant 18 ans. Trier les r\u00e9sultats avec ORDER BY SELECT nom, prenom, age FROM Eleve ORDER BY age DESC; Classe les \u00e9l\u00e8ves par \u00e2ge d\u00e9croissant. Utiliser les fonctions d\u2019agr\u00e9gation - AVG() : moyenne - MIN() / MAX() : minimum, maximum - COUNT() : compter le nombre de valeurs - SUM() : somme Exemple : SELECT AVG(valeur) FROM Note WHERE matiere = 'NSI'; Moyenne des notes en NSI. Requ\u00eates imbriqu\u00e9es (sous-requ\u00eates) Une requ\u00eate imbriqu\u00e9e (ou sous-requ\u00eate ) est une requ\u00eate SQL plac\u00e9e \u00e0 l\u2019int\u00e9rieur d\u2019une autre requ\u00eate. Elle permet de filtrer ou de calculer des r\u00e9sultats interm\u00e9diaires. Exemples : SELECT nom, prenom FROM Eleve WHERE id_eleve IN ( SELECT id_eleve FROM Note WHERE valeur > 15 ); SELECT nom, prenom FROM Eleve WHERE age = ( SELECT MAX(age) FROM Eleve ); SELECT nom, prenom, (SELECT AVG(valeur) FROM Note WHERE Note.id_eleve = Eleve.id_eleve) AS moyenne FROM Eleve; SELECT nom, prenom FROM Eleve E WHERE age > ( SELECT AVG(age) FROM Eleve WHERE classe = E.classe );","title":"Requ\u00eates d\u2019interrogation"},{"location":"Terminales/Chapitres/BDD/#exercices","text":"Voici un base de donn\u00e9es repertoriant les 151 premiers pokemons : \ud83d\udcbe T\u00e9l\u00e9charger pokemon.db pokemon # numero (int) nom (text) type1 (text) type2 (text) taille (float) poids (float) evolution (int) L'attribut evolution est une cl\u00e9 \u00e9trang\u00e8re qui r\u00e9f\u00e9rence l'attribut numero . Voici les diff\u00e9rents types qui existent : Plante Feu Eau Insecte Normal Poison \u00c9lectrik Sol F\u00e9e Combat Psy Roche Spectre Glace null Chaque pokemon a obligatoirement un type1 , mais type2 peut \u00eatre \u00e9gal \u00e0 null . Pour v\u00e9rifier qu'un \u00e9l\u00e9ment est null on utilisera le mot cl\u00e9 is (exemple : evolution is null). Requ\u00eates \u00e9crire en les requ\u00eates SQL suivantes : Afficher tous la table pokemon Afficher tous les noms et num\u00e9ro des pokemons Afficher toutes les combinaisons de types pr\u00e9sentes dans la table Probl\u00e8me : on a beaucoup de fois la m\u00eame combinaison : afficher toutes les combinaisons diff\u00e9rentes Afficher tous les pokemons de type Eau qui en sont \u00e0 leur dernier stade d'\u00e9volution (c'est \u00e0 dire que l'attribut evolution est \u00e0 null ) Afficher les pokemons du plus grand au plus petit Afficher les pokemons dans l'ordre alphabetique inverse Afficher la taille moyenne des pokemons de type Insecte Afficher le plus petit des pokemons ainsi que le plus gros Afficher le nombre de pokemon de type Spectre Afficher la somme des poids des pokemons de type Feu dont la taille d\u00e9passe le m\u00e8tre Afficher les Pok\u00e9mon dont le deuxi\u00e8me type est Poison et dont la taille est sup\u00e9rieure \u00e0 1 m\u00e8tre Afficher les Pok\u00e9mon dont le poids est sup\u00e9rieur \u00e0 la moyenne du poids de tous les Pok\u00e9mon Afficher le nom et le type des Pok\u00e9mon dont la taille est comprise entre 1 m\u00e8tre et 2 m\u00e8tres, tri\u00e9s par taille d\u00e9croissante Afficher les Pok\u00e9mon dont la somme des tailles et des poids est sup\u00e9rieure \u00e0 50 Relier plusieurs tables avec JOIN SELECT Eleve.nom, Eleve.prenom, Note.matiere, Note.valeur FROM Eleve JOIN Note ON Eleve.id_eleve = Note.id_eleve; Affiche le nom, le pr\u00e9nom et les notes des \u00e9l\u00e8ves. Alias avec AS et auto-jointures AS permet de donner un nom temporaire \u00e0 une colonne ou une table. Utile pour simplifier les requ\u00eates et faire des jointures sur soi-m\u00eame. Exemple d\u2019 auto-jointure : trouver les paires d\u2019\u00e9l\u00e8ves d\u2019une m\u00eame classe. SELECT E1.nom AS Eleve1, E2.nom AS Eleve2 FROM Eleve AS E1 JOIN Eleve AS E2 ON E1.classe = E2.classe WHERE E1.id_eleve < E2.id_eleve; **Exercice** \u00e9crire en les requ\u00eates SQL suivantes : 1. Afficher le ``nom`` de chaque Pok\u00e9mon ainsi que le ``nom`` de son ``evolution`` (si elle existe) en utilisant une auto-jointure sur la colonne `evolution`. 2. Afficher tous les Pok\u00e9mon dont le ``type1`` est le m\u00eame que celui de leur `evolution`. 3. Afficher le ``nom`` des Pok\u00e9mon et les ``types`` de leur ``evolution`` lorsque le ``type1`` principal diff\u00e8re. 4. Afficher le ``nom`` et le ``type`` des Pok\u00e9mon dont le type principal diff\u00e8re de celui de l\u2019evolution mais qui partagent le m\u00eame type secondaire. 5. Afficher les Pok\u00e9mon et le ``nom`` de leur ``evolution`` uniquement si le ``taille`` de l\u2019\u00e9volution est inf\u00e9rieur \u00e0 celui du Pok\u00e9mon initial. --- ### Requ\u00eates de mise \u00e0 jour **Ajouter une donn\u00e9e (INSERT)** ```sql INSERT INTO Eleve (id_eleve, nom, prenom, classe, age) VALUES (5, 'Lemoine', 'Clara', 'TES', 17); Ajoute une nouvelle \u00e9l\u00e8ve. Modifier une donn\u00e9e (UPDATE) UPDATE Eleve SET age = 19 WHERE nom = 'Dupont' AND prenom = 'Lucas'; Met \u00e0 jour l\u2019\u00e2ge de Lucas Dupont. Supprimer une donn\u00e9e (DELETE) DELETE FROM Eleve WHERE id_eleve = 4; Supprime Hugo Bernard de la base. Exercice \u00e9crire en les requ\u00eates SQL suivantes (pour chacune d'entre elle, v\u00e9rifier que les mises \u00e0 jour ont bien \u00e9t\u00e9es effectu\u00e9es avec des requ\u00eates d'interrogation): Ajouter les pok\u00e9mons que vous voulez dans la table. Vous pouvez chercher les infos sur internet ou bien en inventer. Modifier ces donn\u00e9es Afficher le nombre de pok\u00e9mon de type Eau . Ensuite supprimer tous les pok\u00e9mons de type Eau de la table. (Il y en a vraiment trop) Exercice type bac","title":"Exercices"},{"location":"Terminales/Chapitres/POO/","text":"Programmation Orient\u00e9e Objet (POO) Introduction La programmation orient\u00e9e objet (POO) est une mani\u00e8re d\u2019organiser un programme en regroupant dans des structures appel\u00e9es classes \u00e0 la fois des donn\u00e9es (attributs) et les actions qui peuvent \u00eatre r\u00e9alis\u00e9es sur ces donn\u00e9es (m\u00e9thodes). Cette approche permet de repr\u00e9senter des concepts de mani\u00e8re claire et structur\u00e9e : chaque objet manipul\u00e9 dans le programme est une instance d\u2019une classe, c\u2019est-\u00e0-dire une version concr\u00e8te du mod\u00e8le d\u00e9fini. La POO facilite la lecture, la r\u00e9utilisation et l\u2019\u00e9volution du code, en rapprochant la logique du programme de la fa\u00e7on dont on d\u00e9crit et organise les choses dans la vie courante. \ud83d\udc49 Exemple concret : - Une classe est comme un mod\u00e8le ou un plan . - Une instance (objet) est un exemplaire concret de ce mod\u00e8le. Exemple La classe Stylo d\u00e9crit ce qu\u2019est un stylo en g\u00e9n\u00e9ral : une couleur d\u2019encre, une longueur, une marque\u2026 Les instances sont des stylos pr\u00e9cis : stylo1 : Bic bleu de 15 cm stylo2 : Pilot noir de 13 cm En Python, on \u00e9crira une classe Stylo , puis on cr\u00e9era plusieurs objets stylo1 , stylo2 , etc. \ud83d\udc49 \u00c0 retenir : Une classe est un mod\u00e8le, une instance est une utilisation concr\u00e8te de ce mod\u00e8le. \u00c9crire une classe en Python Exemple : un rectangle . class Rectangle: def __init__(self, largeur, hauteur): self.largeur = largeur # attribut self.hauteur = hauteur # attribut def aire(self): return self.largeur * self.hauteur # m\u00e9thode def perimetre(self): return 2 * (self.largeur + self.hauteur) # m\u00e9thode Cr\u00e9er une instance (objet) # Cr\u00e9ation de deux rectangles (instances) rect1 = Rectangle(5, 2) rect2 = Rectangle(10, 3) print(rect1.aire()) # 10 print(rect2.perimetre()) # 26 Rectangle est le plan (classe). rect1 et rect2 sont des rectangles concrets (instances). Chaque instance a ses propres valeurs d\u2019attributs. Acc\u00e9der aux attributs et m\u00e9thodes Attributs : print(rect1.largeur) # 5 print(rect2.hauteur) # 3 M\u00e9thodes print(rect1.aire()) # 10 print(rect2.perimetre()) # 26 Exemples suppl\u00e9mentaires class Livre: def __init__(self, titre, auteur, pages): self.titre = titre self.auteur = auteur self.pages = pages def resume(self): return f\"{self.titre}, \u00e9crit par {self.auteur} ({self.pages} pages)\" livre1 = Livre(\"1984\", \"George Orwell\", 328) print(livre1.resume()) # affiche : 1984, \u00e9crit par George Orwell (328 pages) class Animal: def __init__(self, nom, espece, age): self.nom = nom self.espece = espece self.age = age def presentation(self): return \"Je suis \" + str(self.nom) + \" un \" print(self.espece) + \" de \" + str(self.age) + \" ans.\" animal1 = Animal(\"Milo\", \"chat\", 3) animal2 = Animal(\"Rex\", \"chien\", 5) print(animal1.presentation()) # Je suis Milo, un chat de 3 ans. print(animal2.presentation()) # Je suis Rex, un chien de 5 ans. Exercices (Les trois premiers exercices viennent du site KXS ) Exercice 1 Cr\u00e9ez une classe Point qui poss\u00e8de deux attributs x et y correspondant aux coordonn\u00e9es du point. Ces deux attributs doivent \u00eatre affect\u00e9s par le constructeur. Ajoutez une m\u00e9thode affiche() qui affiche les coordonn\u00e9es du point comme ci-dessous (ici, x = 2 et y = 3) : Point | x : 2 | y : 3 Ajoutez une m\u00e9thode translater(tx, ty) qui ajoute tx \u00e0 x et ty \u00e0 y . Exercice 2 Cr\u00e9ez une classe Compte mod\u00e9lisant un compte en banque. La classe poss\u00e8de deux attributs somme et taux correspondant \u00e0 la somme plac\u00e9e sur le compte et au taux d'int\u00e9r\u00eat. Ces deux attributs doivent \u00eatre affect\u00e9s par le constructeur. Ajoutez une m\u00e9thode affiche() qui affiche la somme et le taux comme ci-dessous : Compte | somme : 2000\u20ac | taux : 2% Ajoutez une m\u00e9thode depot(x) qui ajoute x \u00e0 la somme sur le compte. Ajoutez une m\u00e9thode retrait(x) qui enl\u00e8ve x \u00e0 la somme sur le compte. Elle pourra renvoyer une erreur si la somme sur le compte devient n\u00e9gative et annuler alors l'op\u00e9ration. Ajoutez une m\u00e9thode interets() qui calcule les int\u00e9r\u00eats per\u00e7us en un an et les ajoute \u00e0 la somme plac\u00e9e. Pour rappel, les int\u00e9r\u00eats se calculent avec la formule : interets = taux \u00d7 somme / 10 Exercice 3 En vue de faire un site web recensant des citations de films, cr\u00e9ez une classe Citation permettant d'enregistrer le texte de la citation et son film. Cr\u00e9ez une m\u00e9thode affiche() permettant d'afficher la citation de cette fa\u00e7on : Si je connaissais le con qu\u2019a fait sauter le pont ! -- On a retrouv\u00e9 la 7e compagnie Ajoutez deux attributs vote_plus et vote_moins pour enregistrer les votes des utilisateurs sur chaque citation. Ajoutez deux m\u00e9thodes vote_pour() et vote_contre() qui permettent respectivement d'incr\u00e9menter vote_plus et vote_moins . Enfin, ajoutez une m\u00e9thode affiche_votes() qui affiche le nombre de votes pour et le nombre de votes contre la citation. Exercice 4 \u2013 Gestion d\u2019une biblioth\u00e8que simplifi\u00e9e Cr\u00e9ez une classe Livre avec les attributs titre et auteur . Ajoutez une m\u00e9thode affiche() qui affiche un livre de la forme : \"Le Seigneur des Anneaux\" de Tolkien Cr\u00e9ez une classe Bibliotheque qui contient un attribut livres initialis\u00e9 \u00e0 une liste vide. Ajoutez une m\u00e9thode ajoute_livre(livre) qui permet d\u2019ajouter un objet Livre \u00e0 la liste. Ajoutez une m\u00e9thode affiche() qui affiche tous les livres de la biblioth\u00e8que avec un num\u00e9ro devant chacun. Exemple : 1 - \"Le Seigneur des Anneaux\" de Tolkien 2 - \"Vingt mille lieues sous les mers\" de Jules Verne Ajoutez une m\u00e9thode recherche(titre) qui affiche tous les livres dont le titre contient le mot recherch\u00e9. Exercice 5 \u2013 Jeu de d\u00e9s Cr\u00e9ez une classe De avec un attribut faces (par d\u00e9faut 6) et une m\u00e9thode lancer() qui renvoie un nombre al\u00e9atoire entre 1 et faces . Cr\u00e9ez une classe Joueur avec les attributs nom et score (initialis\u00e9 \u00e0 0). Ajoutez une m\u00e9thode jouer(de) qui lance le d\u00e9 pass\u00e9 en param\u00e8tre et ajoute le r\u00e9sultat au score du joueur. Cr\u00e9ez une classe Partie avec les attributs joueurs (liste d\u2019objets Joueur ) et de (un objet De ). Ajoutez une m\u00e9thode tour() qui fait jouer tous les joueurs une fois. Ajoutez une m\u00e9thode vainqueur() qui affiche le nom du joueur avec le plus grand score. Exercice 6 \u2013 Gestion d\u2019un Panier d\u2019Achat Cr\u00e9ez une classe Article avec les attributs nom et prix . Ajoutez une m\u00e9thode affiche() qui affiche de la forme : Pomme - 2\u20ac Cr\u00e9ez une classe Panier avec un attribut articles initialis\u00e9 \u00e0 une liste vide. Ajoutez une m\u00e9thode ajoute_article(article) qui ajoute un objet Article \u00e0 la liste. Ajoutez une m\u00e9thode total() qui renvoie le prix total du panier. Exercice 7 \u2013 Gestion d\u2019un \u00c9tudiant Cr\u00e9ez une classe Etudiant avec les attributs nom , prenom et notes (liste vide par d\u00e9faut). Ajoutez une m\u00e9thode ajoute_note(note) qui ajoute une note \u00e0 la liste. Ajoutez une m\u00e9thode moyenne() qui calcule et renvoie la moyenne des notes de l\u2019\u00e9tudiant. Ajoutez une m\u00e9thode affiche() qui affiche : Dupont Jean | Moyenne : 14.5 Exercice 8 \u2013 Gestion d\u2019une Playlist Cr\u00e9ez une classe Chanson avec les attributs titre et artiste . Ajoutez une m\u00e9thode affiche() qui affiche de la forme : Imagine - John Lennon Cr\u00e9ez une classe Playlist avec un attribut chansons initialis\u00e9 \u00e0 une liste vide. Ajoutez une m\u00e9thode ajoute_chanson(chanson) pour ajouter une chanson. Ajoutez une m\u00e9thode affiche() qui affiche toutes les chansons avec leur num\u00e9ro. Ajoutez une m\u00e9thode recherche(mot) qui affiche toutes les chansons dont le titre contient le mot recherch\u00e9. Exercice 9 \u2013 Gestion d\u2019un Compteur Cr\u00e9ez une classe Compteur avec un attribut valeur initialis\u00e9 \u00e0 0. Ajoutez une m\u00e9thode incremente() qui augmente la valeur de 1. Ajoutez une m\u00e9thode decremente() qui diminue la valeur de 1. Ajoutez une m\u00e9thode raz() qui remet la valeur \u00e0 0. Ajoutez une m\u00e9thode affiche() qui affiche la valeur actuelle du compteur. Exercice 10 \u2013 Gestion d\u2019un Thermom\u00e8tre Cr\u00e9ez une classe Thermometre avec un attribut temperature initialis\u00e9 \u00e0 20 (degr\u00e9s Celsius). Ajoutez une m\u00e9thode augmente(x) qui augmente la temp\u00e9rature de x . Ajoutez une m\u00e9thode baisse(x) qui diminue la temp\u00e9rature de x . Ajoutez une m\u00e9thode affiche() qui affiche : Temp\u00e9rature actuelle : 22\u00b0C","title":"Programmation Orient\u00e9e Objet"},{"location":"Terminales/Chapitres/POO/#programmation-orientee-objet-poo","text":"","title":"Programmation Orient\u00e9e Objet (POO)"},{"location":"Terminales/Chapitres/POO/#introduction","text":"La programmation orient\u00e9e objet (POO) est une mani\u00e8re d\u2019organiser un programme en regroupant dans des structures appel\u00e9es classes \u00e0 la fois des donn\u00e9es (attributs) et les actions qui peuvent \u00eatre r\u00e9alis\u00e9es sur ces donn\u00e9es (m\u00e9thodes). Cette approche permet de repr\u00e9senter des concepts de mani\u00e8re claire et structur\u00e9e : chaque objet manipul\u00e9 dans le programme est une instance d\u2019une classe, c\u2019est-\u00e0-dire une version concr\u00e8te du mod\u00e8le d\u00e9fini. La POO facilite la lecture, la r\u00e9utilisation et l\u2019\u00e9volution du code, en rapprochant la logique du programme de la fa\u00e7on dont on d\u00e9crit et organise les choses dans la vie courante. \ud83d\udc49 Exemple concret : - Une classe est comme un mod\u00e8le ou un plan . - Une instance (objet) est un exemplaire concret de ce mod\u00e8le. Exemple La classe Stylo d\u00e9crit ce qu\u2019est un stylo en g\u00e9n\u00e9ral : une couleur d\u2019encre, une longueur, une marque\u2026 Les instances sont des stylos pr\u00e9cis : stylo1 : Bic bleu de 15 cm stylo2 : Pilot noir de 13 cm En Python, on \u00e9crira une classe Stylo , puis on cr\u00e9era plusieurs objets stylo1 , stylo2 , etc. \ud83d\udc49 \u00c0 retenir : Une classe est un mod\u00e8le, une instance est une utilisation concr\u00e8te de ce mod\u00e8le.","title":"Introduction"},{"location":"Terminales/Chapitres/POO/#ecrire-une-classe-en-python","text":"Exemple : un rectangle . class Rectangle: def __init__(self, largeur, hauteur): self.largeur = largeur # attribut self.hauteur = hauteur # attribut def aire(self): return self.largeur * self.hauteur # m\u00e9thode def perimetre(self): return 2 * (self.largeur + self.hauteur) # m\u00e9thode","title":"\u00c9crire une classe en Python"},{"location":"Terminales/Chapitres/POO/#creer-une-instance-objet","text":"# Cr\u00e9ation de deux rectangles (instances) rect1 = Rectangle(5, 2) rect2 = Rectangle(10, 3) print(rect1.aire()) # 10 print(rect2.perimetre()) # 26 Rectangle est le plan (classe). rect1 et rect2 sont des rectangles concrets (instances). Chaque instance a ses propres valeurs d\u2019attributs.","title":"Cr\u00e9er une instance (objet)"},{"location":"Terminales/Chapitres/POO/#acceder-aux-attributs-et-methodes","text":"Attributs : print(rect1.largeur) # 5 print(rect2.hauteur) # 3 M\u00e9thodes print(rect1.aire()) # 10 print(rect2.perimetre()) # 26","title":"Acc\u00e9der aux attributs et m\u00e9thodes"},{"location":"Terminales/Chapitres/POO/#exemples-supplementaires","text":"class Livre: def __init__(self, titre, auteur, pages): self.titre = titre self.auteur = auteur self.pages = pages def resume(self): return f\"{self.titre}, \u00e9crit par {self.auteur} ({self.pages} pages)\" livre1 = Livre(\"1984\", \"George Orwell\", 328) print(livre1.resume()) # affiche : 1984, \u00e9crit par George Orwell (328 pages) class Animal: def __init__(self, nom, espece, age): self.nom = nom self.espece = espece self.age = age def presentation(self): return \"Je suis \" + str(self.nom) + \" un \" print(self.espece) + \" de \" + str(self.age) + \" ans.\" animal1 = Animal(\"Milo\", \"chat\", 3) animal2 = Animal(\"Rex\", \"chien\", 5) print(animal1.presentation()) # Je suis Milo, un chat de 3 ans. print(animal2.presentation()) # Je suis Rex, un chien de 5 ans. Exercices (Les trois premiers exercices viennent du site KXS )","title":"Exemples suppl\u00e9mentaires"},{"location":"Terminales/Chapitres/POO/#exercice-1","text":"Cr\u00e9ez une classe Point qui poss\u00e8de deux attributs x et y correspondant aux coordonn\u00e9es du point. Ces deux attributs doivent \u00eatre affect\u00e9s par le constructeur. Ajoutez une m\u00e9thode affiche() qui affiche les coordonn\u00e9es du point comme ci-dessous (ici, x = 2 et y = 3) : Point | x : 2 | y : 3 Ajoutez une m\u00e9thode translater(tx, ty) qui ajoute tx \u00e0 x et ty \u00e0 y .","title":"Exercice 1"},{"location":"Terminales/Chapitres/POO/#exercice-2","text":"Cr\u00e9ez une classe Compte mod\u00e9lisant un compte en banque. La classe poss\u00e8de deux attributs somme et taux correspondant \u00e0 la somme plac\u00e9e sur le compte et au taux d'int\u00e9r\u00eat. Ces deux attributs doivent \u00eatre affect\u00e9s par le constructeur. Ajoutez une m\u00e9thode affiche() qui affiche la somme et le taux comme ci-dessous : Compte | somme : 2000\u20ac | taux : 2% Ajoutez une m\u00e9thode depot(x) qui ajoute x \u00e0 la somme sur le compte. Ajoutez une m\u00e9thode retrait(x) qui enl\u00e8ve x \u00e0 la somme sur le compte. Elle pourra renvoyer une erreur si la somme sur le compte devient n\u00e9gative et annuler alors l'op\u00e9ration. Ajoutez une m\u00e9thode interets() qui calcule les int\u00e9r\u00eats per\u00e7us en un an et les ajoute \u00e0 la somme plac\u00e9e. Pour rappel, les int\u00e9r\u00eats se calculent avec la formule : interets = taux \u00d7 somme / 10","title":"Exercice 2"},{"location":"Terminales/Chapitres/POO/#exercice-3","text":"En vue de faire un site web recensant des citations de films, cr\u00e9ez une classe Citation permettant d'enregistrer le texte de la citation et son film. Cr\u00e9ez une m\u00e9thode affiche() permettant d'afficher la citation de cette fa\u00e7on : Si je connaissais le con qu\u2019a fait sauter le pont ! -- On a retrouv\u00e9 la 7e compagnie Ajoutez deux attributs vote_plus et vote_moins pour enregistrer les votes des utilisateurs sur chaque citation. Ajoutez deux m\u00e9thodes vote_pour() et vote_contre() qui permettent respectivement d'incr\u00e9menter vote_plus et vote_moins . Enfin, ajoutez une m\u00e9thode affiche_votes() qui affiche le nombre de votes pour et le nombre de votes contre la citation.","title":"Exercice 3"},{"location":"Terminales/Chapitres/POO/#exercice-4-gestion-dune-bibliotheque-simplifiee","text":"Cr\u00e9ez une classe Livre avec les attributs titre et auteur . Ajoutez une m\u00e9thode affiche() qui affiche un livre de la forme : \"Le Seigneur des Anneaux\" de Tolkien Cr\u00e9ez une classe Bibliotheque qui contient un attribut livres initialis\u00e9 \u00e0 une liste vide. Ajoutez une m\u00e9thode ajoute_livre(livre) qui permet d\u2019ajouter un objet Livre \u00e0 la liste. Ajoutez une m\u00e9thode affiche() qui affiche tous les livres de la biblioth\u00e8que avec un num\u00e9ro devant chacun. Exemple : 1 - \"Le Seigneur des Anneaux\" de Tolkien 2 - \"Vingt mille lieues sous les mers\" de Jules Verne Ajoutez une m\u00e9thode recherche(titre) qui affiche tous les livres dont le titre contient le mot recherch\u00e9.","title":"Exercice 4 \u2013 Gestion d\u2019une biblioth\u00e8que simplifi\u00e9e"},{"location":"Terminales/Chapitres/POO/#exercice-5-jeu-de-des","text":"Cr\u00e9ez une classe De avec un attribut faces (par d\u00e9faut 6) et une m\u00e9thode lancer() qui renvoie un nombre al\u00e9atoire entre 1 et faces . Cr\u00e9ez une classe Joueur avec les attributs nom et score (initialis\u00e9 \u00e0 0). Ajoutez une m\u00e9thode jouer(de) qui lance le d\u00e9 pass\u00e9 en param\u00e8tre et ajoute le r\u00e9sultat au score du joueur. Cr\u00e9ez une classe Partie avec les attributs joueurs (liste d\u2019objets Joueur ) et de (un objet De ). Ajoutez une m\u00e9thode tour() qui fait jouer tous les joueurs une fois. Ajoutez une m\u00e9thode vainqueur() qui affiche le nom du joueur avec le plus grand score.","title":"Exercice 5 \u2013 Jeu de d\u00e9s"},{"location":"Terminales/Chapitres/POO/#exercice-6-gestion-dun-panier-dachat","text":"Cr\u00e9ez une classe Article avec les attributs nom et prix . Ajoutez une m\u00e9thode affiche() qui affiche de la forme : Pomme - 2\u20ac Cr\u00e9ez une classe Panier avec un attribut articles initialis\u00e9 \u00e0 une liste vide. Ajoutez une m\u00e9thode ajoute_article(article) qui ajoute un objet Article \u00e0 la liste. Ajoutez une m\u00e9thode total() qui renvoie le prix total du panier.","title":"Exercice 6 \u2013 Gestion d\u2019un Panier d\u2019Achat"},{"location":"Terminales/Chapitres/POO/#exercice-7-gestion-dun-etudiant","text":"Cr\u00e9ez une classe Etudiant avec les attributs nom , prenom et notes (liste vide par d\u00e9faut). Ajoutez une m\u00e9thode ajoute_note(note) qui ajoute une note \u00e0 la liste. Ajoutez une m\u00e9thode moyenne() qui calcule et renvoie la moyenne des notes de l\u2019\u00e9tudiant. Ajoutez une m\u00e9thode affiche() qui affiche : Dupont Jean | Moyenne : 14.5","title":"Exercice 7 \u2013 Gestion d\u2019un \u00c9tudiant"},{"location":"Terminales/Chapitres/POO/#exercice-8-gestion-dune-playlist","text":"Cr\u00e9ez une classe Chanson avec les attributs titre et artiste . Ajoutez une m\u00e9thode affiche() qui affiche de la forme : Imagine - John Lennon Cr\u00e9ez une classe Playlist avec un attribut chansons initialis\u00e9 \u00e0 une liste vide. Ajoutez une m\u00e9thode ajoute_chanson(chanson) pour ajouter une chanson. Ajoutez une m\u00e9thode affiche() qui affiche toutes les chansons avec leur num\u00e9ro. Ajoutez une m\u00e9thode recherche(mot) qui affiche toutes les chansons dont le titre contient le mot recherch\u00e9.","title":"Exercice 8 \u2013 Gestion d\u2019une Playlist"},{"location":"Terminales/Chapitres/POO/#exercice-9-gestion-dun-compteur","text":"Cr\u00e9ez une classe Compteur avec un attribut valeur initialis\u00e9 \u00e0 0. Ajoutez une m\u00e9thode incremente() qui augmente la valeur de 1. Ajoutez une m\u00e9thode decremente() qui diminue la valeur de 1. Ajoutez une m\u00e9thode raz() qui remet la valeur \u00e0 0. Ajoutez une m\u00e9thode affiche() qui affiche la valeur actuelle du compteur.","title":"Exercice 9 \u2013 Gestion d\u2019un Compteur"},{"location":"Terminales/Chapitres/POO/#exercice-10-gestion-dun-thermometre","text":"Cr\u00e9ez une classe Thermometre avec un attribut temperature initialis\u00e9 \u00e0 20 (degr\u00e9s Celsius). Ajoutez une m\u00e9thode augmente(x) qui augmente la temp\u00e9rature de x . Ajoutez une m\u00e9thode baisse(x) qui diminue la temp\u00e9rature de x . Ajoutez une m\u00e9thode affiche() qui affiche : Temp\u00e9rature actuelle : 22\u00b0C","title":"Exercice 10 \u2013 Gestion d\u2019un Thermom\u00e8tre"}]}