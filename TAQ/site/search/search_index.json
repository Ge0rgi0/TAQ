{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue ! Bienvenue sur TAQ , le site d\u00e9di\u00e9 aux cours de NSI (Num\u00e9rique et Sciences Informatiques) et SNT (Sciences Num\u00e9riques et Technologie) de M.Quertier. \u00c0 propos des mati\u00e8res NSI (Num\u00e9rique et Sciences Informatiques) : Cette mati\u00e8re est destin\u00e9e aux \u00e9l\u00e8ves de Premi\u00e8re et Terminale. Elle permet de d\u00e9couvrir la programmation, les structures de donn\u00e9es, les algorithmes et la logique informatique. L\u2019objectif est de d\u00e9velopper la capacit\u00e9 \u00e0 r\u00e9soudre des probl\u00e8mes avec les outils num\u00e9riques . SNT (Sciences Num\u00e9riques et Technologie) : Cette mati\u00e8re est enseign\u00e9e en Seconde et permet d\u2019explorer les grands concepts du num\u00e9rique : r\u00e9seaux, web, donn\u00e9es, cybers\u00e9curit\u00e9, algorithmes et objets connect\u00e9s. L\u2019objectif est de comprendre le fonctionnement du monde num\u00e9rique qui nous entoure . Organisation du site Ce site centralise tous vos cours pour chaque niveau : \ud83d\udd39 SNT - Secondes \ud83d\udd38 NSI - Premi\u00e8res \ud83d\udd3a NSI - Terminales","title":"Accueil"},{"location":"#bienvenue","text":"Bienvenue sur TAQ , le site d\u00e9di\u00e9 aux cours de NSI (Num\u00e9rique et Sciences Informatiques) et SNT (Sciences Num\u00e9riques et Technologie) de M.Quertier.","title":"Bienvenue !"},{"location":"#a-propos-des-matieres","text":"NSI (Num\u00e9rique et Sciences Informatiques) : Cette mati\u00e8re est destin\u00e9e aux \u00e9l\u00e8ves de Premi\u00e8re et Terminale. Elle permet de d\u00e9couvrir la programmation, les structures de donn\u00e9es, les algorithmes et la logique informatique. L\u2019objectif est de d\u00e9velopper la capacit\u00e9 \u00e0 r\u00e9soudre des probl\u00e8mes avec les outils num\u00e9riques . SNT (Sciences Num\u00e9riques et Technologie) : Cette mati\u00e8re est enseign\u00e9e en Seconde et permet d\u2019explorer les grands concepts du num\u00e9rique : r\u00e9seaux, web, donn\u00e9es, cybers\u00e9curit\u00e9, algorithmes et objets connect\u00e9s. L\u2019objectif est de comprendre le fonctionnement du monde num\u00e9rique qui nous entoure .","title":"\u00c0 propos des mati\u00e8res"},{"location":"#organisation-du-site","text":"Ce site centralise tous vos cours pour chaque niveau : \ud83d\udd39 SNT - Secondes \ud83d\udd38 NSI - Premi\u00e8res \ud83d\udd3a NSI - Terminales","title":"Organisation du site"},{"location":"Premieres/Premieres/","text":"NSI - Premi\u00e8res Chapitres \ud83d\udd39 1 - Types de base","title":"Accueil"},{"location":"Premieres/Premieres/#nsi-premieres","text":"","title":"NSI - Premi\u00e8res"},{"location":"Premieres/Premieres/#chapitres","text":"\ud83d\udd39 1 - Types de base","title":"Chapitres"},{"location":"Premieres/Chapitres/Types_de_base/","text":"Types de base Entier positif Le d\u00e9cimal Depuis toujours, nous utilisons la base 10, s\u00fbrement parce que nous avons\u2026 10 doigts. C'est ce que l'on appelle le syst\u00e8me d\u00e9cimal , car nous utilisons 10 chiffres (de 0 \u00e0 9) pour repr\u00e9senter toutes les valeurs. Dans un nombre d\u00e9cimal, chaque position correspond \u00e0 une puissance de 10, de droite \u00e0 gauche. \\(10^3\\) \\(10^2\\) \\(10^1\\) \\(10^0\\) \\(2025_{10}\\) 2 0 2 5 \\[ 2025_{10} = 2 \\times 10^3 + 0 \\times 10^2 + 2 \\times 10^1 + 5 \\times 10^0 \\] \\[ = 2 \\times 1000 + 0 \\times 100 + 2 \\times 10 + 5 \\times 1 \\] Rappel sur les puissances Une puissance est une fa\u00e7on d\u2019\u00e9crire une multiplication r\u00e9p\u00e9t\u00e9e. \\( a^n \\) se lit \u00ab\u202fa puissance n\u202f\u00bb et signifie que l\u2019on multiplie \\(a\\) par lui-m\u00eame \\(n\\) fois : $$ a^n = \\underbrace{a \\times a \\times \\dots \\times a}_{n \\text{ fois}} $$ exemples \\( 2^3 = 2 \\times 2 \\times 2 = 8 \\) \\( 5^0 = 1 \\) (par convention, toute base non nulle \u00e0 la puissance 0 vaut 1) \\( 10^4 = 10 \\times 10 \\times 10 \\times 10 = 10000 \\) Le binaire L\u2019ordinateur utilise la base 2, appel\u00e9e binaire , car les composants \u00e9lectroniques ne peuvent traiter que deux \u00e9tats : - 1 : pr\u00e9sence d\u2019une tension \u00e9lectrique - 0 : absence de tension \u00e9lectrique Il a donc fallu repr\u00e9senter toutes les informations en binaire. Dans ce syst\u00e8me, il n\u2019existe que deux symboles : 0 et 1, que l\u2019on appelle des bits (contraction de binary digit). Chaque position dans un nombre binaire correspond \u00e0 une puissance de 2 , de droite \u00e0 gauche. exemple Prenons le nombre binaire : \\(1011_2\\) On peut le d\u00e9composer en puissances de 2 : \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(1011_2\\) 1 0 1 1 Et le convertir en d\u00e9cimal : \\[ 1011_2 = 1 \\times 2^3 + 0 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0 \\] \\[ = 2^3 + 2^1 + 2^0 \\] \\[ = 8 + 2 + 1 \\] \\[ = 11 \\] donc \\(1011_{2} = 11_{10}\\) Exercice Convertir en d\u00e9cimal, ces valeurs binaires : \\(110010_{2}\\) \\(1100100_{2}\\) \\(100100101_{2}\\) Conversion du d\u00e9cimal vers le binaire On utilise la M\u00e9thode des divisions successives On divise le nombre par 2 . On note le reste (0 ou 1). On recommence avec le quotient , jusqu\u2019\u00e0 obtenir 0. Le nombre binaire est obtenu en lisant les restes de bas en haut . exemple Repr\u00e9sentons la valeur \\(50_{10}\\) en binaire. 50 / 2 = 25 reste 0 25 / 2 = 12 reste 1 12 / 2 = 6 reste 0 6 / 2 = 3 reste 0 3 / 2 = 1 reste 1 1 / 2 = 0 reste 1 donc \\(50_{10} = 110010_{2}\\) Exercice Convertir en binaire, ces valeurs d\u00e9cimales : \\(2025_{10}\\) \\(4050_{10}\\) \\(59400_{10}\\) L\u2019hexad\u00e9cimal Un autre syst\u00e8me de num\u00e9ration tr\u00e8s utilis\u00e9 en informatique est la base 16 , appel\u00e9e hexad\u00e9cimal . Pourquoi ? Parce qu\u2019il est plus compact que le binaire : au lieu de manipuler des suites tr\u00e8s longues de 0 et 1, on peut les regrouper par 4 bits (4 chiffres binaires) et les \u00e9crire avec un seul chiffre hexad\u00e9cimal. Les chiffres en base 16 La base 16 utilise 16 symboles diff\u00e9rents : - de 0 \u00e0 9 (comme en d\u00e9cimal) - puis les lettres A, B, C, D, E, F pour repr\u00e9senter les valeurs 10 \u00e0 15. D\u00e9cimal Hexad\u00e9cimal 10 A 11 B 12 C 13 D 14 E 15 F exemple \\(16^1\\) \\(16^0\\) \\(A2_{16}\\) A (= 10) 2 \\[ A2_{16} = 10 \\times 16^1 + 2 \\times 16^0 \\] \\[ = 160 + 2 \\] \\[ = 162_{10} \\] Lien entre binaire et hexad\u00e9cimal Chaque chiffre hexad\u00e9cimal correspond \u00e0 4 bits (car \\(2^4 = 16\\) ). Hexa 0 1 2 3 4 5 6 7 Binaire 0000 0001 0010 0011 0100 0101 0110 0111 Hexa 8 9 A B C D E F Binaire 1000 1001 1010 1011 1100 1101 1110 1111 Cela permet de convertir facilement du binaire en hexad\u00e9cimal en regroupant les bits par paquets de 4. exemple \\(111011_{2}\\) On regroupe par 4 bits (en partant de la droite) : 0011 1011 3 B Donc \\(111011_2 = 3B_{16}\\) Exercice Convertir en d\u00e9cimal : \\(FF_{16}\\) \\(1A3_{16}\\) Convertir en binaire : \\(7C4_{16}\\) \\(FADA_{16}\\) Convertir en hexad\u00e9cimal : \\(1999_{10}\\) \\(59400_{10}\\) \\(111100_{2}\\) \\(110100101111_{2}\\) Entier relatif Jusqu\u2019ici, nous avons vu la repr\u00e9sentation des entiers positifs . Mais il faut aussi repr\u00e9senter les entiers relatifs (positifs et n\u00e9gatifs). Nombre de bits n\u00e9cessaires En binaire, la taille d\u2019un entier est d\u00e9termin\u00e9e par le nombre de bits utilis\u00e9s. Avec n bits, on peut repr\u00e9senter au maximum : \\[ 0 \\; \\leqslant \\; N \\; < \\; 2^n \\] Exemple : - avec 8 bits (1 octet), on peut repr\u00e9senter 256 valeurs distinctes (de 0 \u00e0 255). - avec 16 bits , on peut repr\u00e9senter 65 536 valeurs (de 0 \u00e0 65 535). Les tailles courantes Les tailles les plus utilis\u00e9es en informatique sont : 8 bits (1 octet) 16 bits (2 octets) 32 bits (4 octets) 64 bits (8 octets) Chaque taille limite l\u2019intervalle de valeurs possibles. Questions Combien de valeurs diff\u00e9rentes peut-on repr\u00e9senter avec : 1. 5 bits ? 2. 10 bits ? 3. 32 bits ? Premi\u00e8re id\u00e9e : utiliser un bit de signe Une premi\u00e8re id\u00e9e consiste \u00e0 r\u00e9server le bit de poids fort (le plus \u00e0 gauche) pour indiquer le signe : - 0 \u2192 nombre positif - 1 \u2192 nombre n\u00e9gatif On aurait alors les repr\u00e9sentations suivantes sur 3 bits : n\u00e9gatif positif 0 100 000 1 101 001 2 110 010 3 111 011 Probl\u00e8mes de cette m\u00e9thode Deux repr\u00e9sentations pour la valeur 0. Cela introduit une incoh\u00e9rence et gaspille une combinaison binaire. Addition incorrecte Exemple avec \\( 5 + (-5) \\) sur 8 bits: \\(00000101_2 + 10000101_2 = 10001010_2\\) C'est \u00e0 dire \\(5 - 5 = - 10\\) , ce qui est \u00e9videmment faux ! Il faut donc trouver une autre m\u00e9thode. Exercice - Donner les repr\u00e9sentations binaires des valeurs entre -5 et 5 sur 4 bits. - Donner les repr\u00e9sentations binaires des valeurs -67 sur 8 bits. Solution : le compl\u00e9ment \u00e0 2 Pour corriger ces probl\u00e8mes, on utilise la m\u00e9thode du compl\u00e9ment \u00e0 2 . L\u2019id\u00e9e est comparable \u00e0 un compteur : - Si on compte en arri\u00e8re depuis 0 , on obtient directement le dernier nombre possible. - Exemple en base d\u00e9cimale avec deux chiffres : apr\u00e8s 00 , si on soustrait 1, on tombe sur 99 , puis 98 , etc. De la m\u00eame mani\u00e8re, en binaire, on utilise le \"rebouclage\" naturel des bits pour coder les nombres n\u00e9gatifs. n\u00e9gatif positif 0 000 1 111 001 2 110 010 3 101 011 4 100 M\u00e9thode de construction La m\u00e9thode est simple : Pour repr\u00e9senter un nombre n\u00e9gatif, on \u00e9crit en binaire sa valeur absolue, on inverse ensuite tous les bits, puis on ajoute 1. Exemple Imaginons que nous codions sur 4 bits. Nous voulons repr\u00e9senter la valeur -5. \\(5_{10} = 101_2\\) sur 4 bits : \\(0101_2\\) inversion des bits : \\(1010_2\\) +1 \u2192 \\(1011_2\\) Sur 4 bits, on r\u00e9presente donc -5 comme ceci : \\(1011_2\\) . Exercice Coder en compl\u00e9ment \u00e0 2 sur 4 bits les valeurs entre -5 et 5 sur 4 bits. Cette fois-ci l'addition fonctionne : Exemple Essayons de nouveau \\(5 + (-5)\\) sur 8 bits, c'est \u00e0 dire : \\(00000101_2 + 11111011_2\\) retenue 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 + 1 1 1 1 1 1 0 1 1 = 1 0 0 0 0 0 0 0 0 0 On obtient alors : \\(100000000_2\\) , or nous sommes sur 8 bits donc on a bien : \\(5_{10} + (-5_{10}) = 00000101_2 + 11111011_2 = 00000000_2 = 0_{10}\\) Exercice V\u00e9rifier \u00e0 la main les additions suivantes en compl\u00e9ment \u00e0 2 (sur 4 bits) : 1. \\(2 + (-2)\\) 2. \\(3 + (-1)\\) 3. \\(-3 + (-2)\\) Exercice Donner l\u2019intervalle des entiers repr\u00e9sentables avec : 1. 8 bits non sign\u00e9s 2. 8 bits avec bit de signe 3. 8 bits en compl\u00e9ment \u00e0 2 R\u00e9el Contrairement aux entiers, les nombres r\u00e9els peuvent avoir une partie fractionnaire . Pour les repr\u00e9senter en informatique, on utilise le format nombre \u00e0 virgule flottante ( floating point ). Conversion d\u00e9cimal vers binaire Prenons \\(6.34375_{10}\\) On peut s\u00e9parer cette valeur en deux : - la partie enti\u00e9re : 6 - la partie fractionnaire : 0.34375 On sait d\u00e9ja transformer les valeurs enti\u00e9re : \\(6_{10} = 110_2\\) Pour la partie fractionnaire, \u00e0 l'inverse, on va effectuer des multiplications successives : On multiplie notre valeur par 2. Puis on recommence avec la partie fractionnaire du resultat. Et ainsi de suite jusqu'\u00e0 ce que le resultat soit une valeur enti\u00e9re. \\(0.34375 \\times 2 = 0.6875\\) \\(0.6875 \\times 2 = 1.375\\) \\(0.375 \\times 2 = 0.75\\) \\(0.75 \\times 2 = 1.5\\) \\(0.5 \\times 2 = 1\\) Pour finir on regarde les valeurs enti\u00e9res des resultats de haut en bas. On a donc comme partie fractionnaire : \\(0.01011_2\\) . Pour finir, il nous suffit d'additionner nos deux r\u00e9sultats : \\(6.34375_{10} = 110.01011_2\\) . Conversion binaire vers d\u00e9cimal Ici, nous utiliserons la m\u00eame m\u00e9thode que pour les valeurs enti\u00e9res. Les bits de la partie fractionnaire correspondent \u00e0 des puissances n\u00e9gatives. Reprenons notre r\u00e9sultat pr\u00e9c\u00e9dent : \\(110.01011_2\\) . \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(2^{-1}\\) \\(2^{-2}\\) \\(2^{-3}\\) \\(2^{-4}\\) \\(2^{-5}\\) 1 1 0 0 1 0 1 1 Pour retrouver notre valeur d\u00e9cimal nous pouvons effectuer ce calcul : $$ 2^2 + 2^1 + 2^{-2}+ 2^{-4}+ 2^{-5} = $$ $$4 + 2 + 0.25 + 0.0625 + 0.03125 = 6.34375 $$ Rappel sur les puissances Une puissance n\u00e9gative permet de repr\u00e9senter la division r\u00e9p\u00e9t\u00e9e . Pour tout nombre non nul \\(a\\) et tout entier \\(n > 0\\) : $$ a^{-n} = \\frac{1}{a^n} $$ Autrement dit, \\(a^{-n}\\) est l'inverse de \\(a^n\\) . \\(2^-1\\) \\(2^-2\\) \\(2^-3\\) \\(2^-4\\) \\(2^-5\\) \\(2^-6\\) \\(2^-7\\) \\(\\frac{1}{2^1}\\) \\(\\frac{1}{2^2}\\) \\(\\frac{1}{2^3}\\) \\(\\frac{1}{2^4}\\) \\(\\frac{1}{2^5}\\) \\(\\frac{1}{2^6}\\) \\(\\frac{1}{2^7}\\) \\(\\frac{1}{2}\\) \\(\\frac{1}{4}\\) \\(\\frac{1}{8}\\) \\(\\frac{1}{16}\\) \\(\\frac{1}{32}\\) \\(\\frac{1}{64}\\) \\(\\frac{1}{128}\\) \\(0.5\\) \\(0.25\\) \\(0.125\\) \\(0.0625\\) \\(0.03125\\) \\(0.015625\\) \\(0.0078125\\) Exemples \\(2^{-3} = \\frac{1}{2^3} = \\frac{1}{8} = 0.125\\) \\(5^{-2} = \\frac{1}{5^2} = \\frac{1}{25} = 0.04\\) \\(10^{-4} = \\frac{1}{10^4} = \\frac{1}{10000} = 0.0001\\) La norme IEEE 754 La norme IEEE 754 d\u00e9finit comment repr\u00e9senter un r\u00e9el sur un nombre fini de bits. Elle utilise trois composants : Signe (1 bit) : 0 \u2192 positif, 1 \u2192 n\u00e9gatif Exposant : encode la puissance de 2 Mantisse (ou fraction) : encode les chiffres significatifs Le nombre r\u00e9el est donc repr\u00e9sent\u00e9 comme : \\[ x = (-1)^{\\text{signe}} \\times 1.\\text{mantisse} \\times 2^{\\text{exposant}-\\text{biais}} \\] Le biais est un nombre ajout\u00e9 pour que l\u2019exposant puisse \u00eatre positif ou n\u00e9gatif. La mantisse permet de repr\u00e9senter les chiffres significatifs. Propri\u00e9t\u00e9s importantes Certains nombres ne peuvent pas \u00eatre repr\u00e9sent\u00e9s exactement. Exemple : \\(0.1_{10}\\) n\u2019a pas de repr\u00e9sentation binaire exacte. Les erreurs d\u2019arrondi peuvent s\u2019accumuler lors des calculs. Il ne faut jamais tester l\u2019\u00e9galit\u00e9 de deux flottants avec == . Exemples \\(0.25_{10} = 0.01_2\\) exactement \\(0.1_{10}\\) = une suite infinie en binaire \u2192 approximation \\(1/3_{10} \\approx 0.3333...\\) \u2192 approximation Exercices Convertir les nombres suivants en binaire flottant (approximatif sur 8 bits de mantisse) : 0.1 0.25 1/3 V\u00e9rifier pourquoi 0.2 + 0.1 != 0.3 en Python ou en pseudo-code.","title":"Types de base"},{"location":"Premieres/Chapitres/Types_de_base/#types-de-base","text":"","title":"Types de base"},{"location":"Premieres/Chapitres/Types_de_base/#entier-positif","text":"","title":"Entier positif"},{"location":"Premieres/Chapitres/Types_de_base/#le-decimal","text":"Depuis toujours, nous utilisons la base 10, s\u00fbrement parce que nous avons\u2026 10 doigts. C'est ce que l'on appelle le syst\u00e8me d\u00e9cimal , car nous utilisons 10 chiffres (de 0 \u00e0 9) pour repr\u00e9senter toutes les valeurs. Dans un nombre d\u00e9cimal, chaque position correspond \u00e0 une puissance de 10, de droite \u00e0 gauche. \\(10^3\\) \\(10^2\\) \\(10^1\\) \\(10^0\\) \\(2025_{10}\\) 2 0 2 5 \\[ 2025_{10} = 2 \\times 10^3 + 0 \\times 10^2 + 2 \\times 10^1 + 5 \\times 10^0 \\] \\[ = 2 \\times 1000 + 0 \\times 100 + 2 \\times 10 + 5 \\times 1 \\] Rappel sur les puissances Une puissance est une fa\u00e7on d\u2019\u00e9crire une multiplication r\u00e9p\u00e9t\u00e9e. \\( a^n \\) se lit \u00ab\u202fa puissance n\u202f\u00bb et signifie que l\u2019on multiplie \\(a\\) par lui-m\u00eame \\(n\\) fois : $$ a^n = \\underbrace{a \\times a \\times \\dots \\times a}_{n \\text{ fois}} $$ exemples \\( 2^3 = 2 \\times 2 \\times 2 = 8 \\) \\( 5^0 = 1 \\) (par convention, toute base non nulle \u00e0 la puissance 0 vaut 1) \\( 10^4 = 10 \\times 10 \\times 10 \\times 10 = 10000 \\)","title":"Le d\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base/#le-binaire","text":"L\u2019ordinateur utilise la base 2, appel\u00e9e binaire , car les composants \u00e9lectroniques ne peuvent traiter que deux \u00e9tats : - 1 : pr\u00e9sence d\u2019une tension \u00e9lectrique - 0 : absence de tension \u00e9lectrique Il a donc fallu repr\u00e9senter toutes les informations en binaire. Dans ce syst\u00e8me, il n\u2019existe que deux symboles : 0 et 1, que l\u2019on appelle des bits (contraction de binary digit). Chaque position dans un nombre binaire correspond \u00e0 une puissance de 2 , de droite \u00e0 gauche. exemple Prenons le nombre binaire : \\(1011_2\\) On peut le d\u00e9composer en puissances de 2 : \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(1011_2\\) 1 0 1 1 Et le convertir en d\u00e9cimal : \\[ 1011_2 = 1 \\times 2^3 + 0 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0 \\] \\[ = 2^3 + 2^1 + 2^0 \\] \\[ = 8 + 2 + 1 \\] \\[ = 11 \\] donc \\(1011_{2} = 11_{10}\\) Exercice Convertir en d\u00e9cimal, ces valeurs binaires : \\(110010_{2}\\) \\(1100100_{2}\\) \\(100100101_{2}\\)","title":"Le binaire"},{"location":"Premieres/Chapitres/Types_de_base/#conversion-du-decimal-vers-le-binaire","text":"On utilise la M\u00e9thode des divisions successives On divise le nombre par 2 . On note le reste (0 ou 1). On recommence avec le quotient , jusqu\u2019\u00e0 obtenir 0. Le nombre binaire est obtenu en lisant les restes de bas en haut . exemple Repr\u00e9sentons la valeur \\(50_{10}\\) en binaire. 50 / 2 = 25 reste 0 25 / 2 = 12 reste 1 12 / 2 = 6 reste 0 6 / 2 = 3 reste 0 3 / 2 = 1 reste 1 1 / 2 = 0 reste 1 donc \\(50_{10} = 110010_{2}\\) Exercice Convertir en binaire, ces valeurs d\u00e9cimales : \\(2025_{10}\\) \\(4050_{10}\\) \\(59400_{10}\\)","title":"Conversion du d\u00e9cimal vers le binaire"},{"location":"Premieres/Chapitres/Types_de_base/#lhexadecimal","text":"Un autre syst\u00e8me de num\u00e9ration tr\u00e8s utilis\u00e9 en informatique est la base 16 , appel\u00e9e hexad\u00e9cimal . Pourquoi ? Parce qu\u2019il est plus compact que le binaire : au lieu de manipuler des suites tr\u00e8s longues de 0 et 1, on peut les regrouper par 4 bits (4 chiffres binaires) et les \u00e9crire avec un seul chiffre hexad\u00e9cimal.","title":"L\u2019hexad\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base/#les-chiffres-en-base-16","text":"La base 16 utilise 16 symboles diff\u00e9rents : - de 0 \u00e0 9 (comme en d\u00e9cimal) - puis les lettres A, B, C, D, E, F pour repr\u00e9senter les valeurs 10 \u00e0 15. D\u00e9cimal Hexad\u00e9cimal 10 A 11 B 12 C 13 D 14 E 15 F exemple \\(16^1\\) \\(16^0\\) \\(A2_{16}\\) A (= 10) 2 \\[ A2_{16} = 10 \\times 16^1 + 2 \\times 16^0 \\] \\[ = 160 + 2 \\] \\[ = 162_{10} \\]","title":"Les chiffres en base 16"},{"location":"Premieres/Chapitres/Types_de_base/#lien-entre-binaire-et-hexadecimal","text":"Chaque chiffre hexad\u00e9cimal correspond \u00e0 4 bits (car \\(2^4 = 16\\) ). Hexa 0 1 2 3 4 5 6 7 Binaire 0000 0001 0010 0011 0100 0101 0110 0111 Hexa 8 9 A B C D E F Binaire 1000 1001 1010 1011 1100 1101 1110 1111 Cela permet de convertir facilement du binaire en hexad\u00e9cimal en regroupant les bits par paquets de 4. exemple \\(111011_{2}\\) On regroupe par 4 bits (en partant de la droite) : 0011 1011 3 B Donc \\(111011_2 = 3B_{16}\\) Exercice Convertir en d\u00e9cimal : \\(FF_{16}\\) \\(1A3_{16}\\) Convertir en binaire : \\(7C4_{16}\\) \\(FADA_{16}\\) Convertir en hexad\u00e9cimal : \\(1999_{10}\\) \\(59400_{10}\\) \\(111100_{2}\\) \\(110100101111_{2}\\)","title":"Lien entre binaire et hexad\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base/#entier-relatif","text":"Jusqu\u2019ici, nous avons vu la repr\u00e9sentation des entiers positifs . Mais il faut aussi repr\u00e9senter les entiers relatifs (positifs et n\u00e9gatifs).","title":"Entier relatif"},{"location":"Premieres/Chapitres/Types_de_base/#nombre-de-bits-necessaires","text":"En binaire, la taille d\u2019un entier est d\u00e9termin\u00e9e par le nombre de bits utilis\u00e9s. Avec n bits, on peut repr\u00e9senter au maximum : \\[ 0 \\; \\leqslant \\; N \\; < \\; 2^n \\] Exemple : - avec 8 bits (1 octet), on peut repr\u00e9senter 256 valeurs distinctes (de 0 \u00e0 255). - avec 16 bits , on peut repr\u00e9senter 65 536 valeurs (de 0 \u00e0 65 535). Les tailles courantes Les tailles les plus utilis\u00e9es en informatique sont : 8 bits (1 octet) 16 bits (2 octets) 32 bits (4 octets) 64 bits (8 octets) Chaque taille limite l\u2019intervalle de valeurs possibles. Questions Combien de valeurs diff\u00e9rentes peut-on repr\u00e9senter avec : 1. 5 bits ? 2. 10 bits ? 3. 32 bits ?","title":"Nombre de bits n\u00e9cessaires"},{"location":"Premieres/Chapitres/Types_de_base/#premiere-idee-utiliser-un-bit-de-signe","text":"Une premi\u00e8re id\u00e9e consiste \u00e0 r\u00e9server le bit de poids fort (le plus \u00e0 gauche) pour indiquer le signe : - 0 \u2192 nombre positif - 1 \u2192 nombre n\u00e9gatif On aurait alors les repr\u00e9sentations suivantes sur 3 bits : n\u00e9gatif positif 0 100 000 1 101 001 2 110 010 3 111 011 Probl\u00e8mes de cette m\u00e9thode Deux repr\u00e9sentations pour la valeur 0. Cela introduit une incoh\u00e9rence et gaspille une combinaison binaire. Addition incorrecte Exemple avec \\( 5 + (-5) \\) sur 8 bits: \\(00000101_2 + 10000101_2 = 10001010_2\\) C'est \u00e0 dire \\(5 - 5 = - 10\\) , ce qui est \u00e9videmment faux ! Il faut donc trouver une autre m\u00e9thode. Exercice - Donner les repr\u00e9sentations binaires des valeurs entre -5 et 5 sur 4 bits. - Donner les repr\u00e9sentations binaires des valeurs -67 sur 8 bits.","title":"Premi\u00e8re id\u00e9e : utiliser un bit de signe"},{"location":"Premieres/Chapitres/Types_de_base/#solution-le-complement-a-2","text":"Pour corriger ces probl\u00e8mes, on utilise la m\u00e9thode du compl\u00e9ment \u00e0 2 . L\u2019id\u00e9e est comparable \u00e0 un compteur : - Si on compte en arri\u00e8re depuis 0 , on obtient directement le dernier nombre possible. - Exemple en base d\u00e9cimale avec deux chiffres : apr\u00e8s 00 , si on soustrait 1, on tombe sur 99 , puis 98 , etc. De la m\u00eame mani\u00e8re, en binaire, on utilise le \"rebouclage\" naturel des bits pour coder les nombres n\u00e9gatifs. n\u00e9gatif positif 0 000 1 111 001 2 110 010 3 101 011 4 100","title":"Solution : le compl\u00e9ment \u00e0 2"},{"location":"Premieres/Chapitres/Types_de_base/#methode-de-construction","text":"La m\u00e9thode est simple : Pour repr\u00e9senter un nombre n\u00e9gatif, on \u00e9crit en binaire sa valeur absolue, on inverse ensuite tous les bits, puis on ajoute 1. Exemple Imaginons que nous codions sur 4 bits. Nous voulons repr\u00e9senter la valeur -5. \\(5_{10} = 101_2\\) sur 4 bits : \\(0101_2\\) inversion des bits : \\(1010_2\\) +1 \u2192 \\(1011_2\\) Sur 4 bits, on r\u00e9presente donc -5 comme ceci : \\(1011_2\\) . Exercice Coder en compl\u00e9ment \u00e0 2 sur 4 bits les valeurs entre -5 et 5 sur 4 bits. Cette fois-ci l'addition fonctionne : Exemple Essayons de nouveau \\(5 + (-5)\\) sur 8 bits, c'est \u00e0 dire : \\(00000101_2 + 11111011_2\\) retenue 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 + 1 1 1 1 1 1 0 1 1 = 1 0 0 0 0 0 0 0 0 0 On obtient alors : \\(100000000_2\\) , or nous sommes sur 8 bits donc on a bien : \\(5_{10} + (-5_{10}) = 00000101_2 + 11111011_2 = 00000000_2 = 0_{10}\\) Exercice V\u00e9rifier \u00e0 la main les additions suivantes en compl\u00e9ment \u00e0 2 (sur 4 bits) : 1. \\(2 + (-2)\\) 2. \\(3 + (-1)\\) 3. \\(-3 + (-2)\\) Exercice Donner l\u2019intervalle des entiers repr\u00e9sentables avec : 1. 8 bits non sign\u00e9s 2. 8 bits avec bit de signe 3. 8 bits en compl\u00e9ment \u00e0 2","title":"M\u00e9thode de construction"},{"location":"Premieres/Chapitres/Types_de_base/#reel","text":"Contrairement aux entiers, les nombres r\u00e9els peuvent avoir une partie fractionnaire . Pour les repr\u00e9senter en informatique, on utilise le format nombre \u00e0 virgule flottante ( floating point ).","title":"R\u00e9el"},{"location":"Premieres/Chapitres/Types_de_base/#conversion-decimal-vers-binaire","text":"Prenons \\(6.34375_{10}\\) On peut s\u00e9parer cette valeur en deux : - la partie enti\u00e9re : 6 - la partie fractionnaire : 0.34375 On sait d\u00e9ja transformer les valeurs enti\u00e9re : \\(6_{10} = 110_2\\) Pour la partie fractionnaire, \u00e0 l'inverse, on va effectuer des multiplications successives : On multiplie notre valeur par 2. Puis on recommence avec la partie fractionnaire du resultat. Et ainsi de suite jusqu'\u00e0 ce que le resultat soit une valeur enti\u00e9re. \\(0.34375 \\times 2 = 0.6875\\) \\(0.6875 \\times 2 = 1.375\\) \\(0.375 \\times 2 = 0.75\\) \\(0.75 \\times 2 = 1.5\\) \\(0.5 \\times 2 = 1\\) Pour finir on regarde les valeurs enti\u00e9res des resultats de haut en bas. On a donc comme partie fractionnaire : \\(0.01011_2\\) . Pour finir, il nous suffit d'additionner nos deux r\u00e9sultats : \\(6.34375_{10} = 110.01011_2\\) .","title":"Conversion d\u00e9cimal vers binaire"},{"location":"Premieres/Chapitres/Types_de_base/#conversion-binaire-vers-decimal","text":"Ici, nous utiliserons la m\u00eame m\u00e9thode que pour les valeurs enti\u00e9res. Les bits de la partie fractionnaire correspondent \u00e0 des puissances n\u00e9gatives. Reprenons notre r\u00e9sultat pr\u00e9c\u00e9dent : \\(110.01011_2\\) . \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(2^{-1}\\) \\(2^{-2}\\) \\(2^{-3}\\) \\(2^{-4}\\) \\(2^{-5}\\) 1 1 0 0 1 0 1 1 Pour retrouver notre valeur d\u00e9cimal nous pouvons effectuer ce calcul : $$ 2^2 + 2^1 + 2^{-2}+ 2^{-4}+ 2^{-5} = $$ $$4 + 2 + 0.25 + 0.0625 + 0.03125 = 6.34375 $$ Rappel sur les puissances Une puissance n\u00e9gative permet de repr\u00e9senter la division r\u00e9p\u00e9t\u00e9e . Pour tout nombre non nul \\(a\\) et tout entier \\(n > 0\\) : $$ a^{-n} = \\frac{1}{a^n} $$ Autrement dit, \\(a^{-n}\\) est l'inverse de \\(a^n\\) . \\(2^-1\\) \\(2^-2\\) \\(2^-3\\) \\(2^-4\\) \\(2^-5\\) \\(2^-6\\) \\(2^-7\\) \\(\\frac{1}{2^1}\\) \\(\\frac{1}{2^2}\\) \\(\\frac{1}{2^3}\\) \\(\\frac{1}{2^4}\\) \\(\\frac{1}{2^5}\\) \\(\\frac{1}{2^6}\\) \\(\\frac{1}{2^7}\\) \\(\\frac{1}{2}\\) \\(\\frac{1}{4}\\) \\(\\frac{1}{8}\\) \\(\\frac{1}{16}\\) \\(\\frac{1}{32}\\) \\(\\frac{1}{64}\\) \\(\\frac{1}{128}\\) \\(0.5\\) \\(0.25\\) \\(0.125\\) \\(0.0625\\) \\(0.03125\\) \\(0.015625\\) \\(0.0078125\\) Exemples \\(2^{-3} = \\frac{1}{2^3} = \\frac{1}{8} = 0.125\\) \\(5^{-2} = \\frac{1}{5^2} = \\frac{1}{25} = 0.04\\) \\(10^{-4} = \\frac{1}{10^4} = \\frac{1}{10000} = 0.0001\\)","title":"Conversion binaire vers d\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base/#la-norme-ieee-754","text":"La norme IEEE 754 d\u00e9finit comment repr\u00e9senter un r\u00e9el sur un nombre fini de bits. Elle utilise trois composants : Signe (1 bit) : 0 \u2192 positif, 1 \u2192 n\u00e9gatif Exposant : encode la puissance de 2 Mantisse (ou fraction) : encode les chiffres significatifs Le nombre r\u00e9el est donc repr\u00e9sent\u00e9 comme : \\[ x = (-1)^{\\text{signe}} \\times 1.\\text{mantisse} \\times 2^{\\text{exposant}-\\text{biais}} \\] Le biais est un nombre ajout\u00e9 pour que l\u2019exposant puisse \u00eatre positif ou n\u00e9gatif. La mantisse permet de repr\u00e9senter les chiffres significatifs.","title":"La norme IEEE 754"},{"location":"Premieres/Chapitres/Types_de_base/#proprietes-importantes","text":"Certains nombres ne peuvent pas \u00eatre repr\u00e9sent\u00e9s exactement. Exemple : \\(0.1_{10}\\) n\u2019a pas de repr\u00e9sentation binaire exacte. Les erreurs d\u2019arrondi peuvent s\u2019accumuler lors des calculs. Il ne faut jamais tester l\u2019\u00e9galit\u00e9 de deux flottants avec == . Exemples \\(0.25_{10} = 0.01_2\\) exactement \\(0.1_{10}\\) = une suite infinie en binaire \u2192 approximation \\(1/3_{10} \\approx 0.3333...\\) \u2192 approximation Exercices Convertir les nombres suivants en binaire flottant (approximatif sur 8 bits de mantisse) : 0.1 0.25 1/3 V\u00e9rifier pourquoi 0.2 + 0.1 != 0.3 en Python ou en pseudo-code.","title":"Propri\u00e9t\u00e9s importantes"},{"location":"Secondes/Secondes/","text":"SNT - Secondes L\u2019enseignement de Sciences Num\u00e9riques et Technologie (SNT) en classe de Seconde permet de d\u00e9couvrir les principaux concepts du num\u00e9rique et de comprendre l\u2019impact croissant des technologies sur notre quotidien. Les mobiles, ordinateurs et objets connect\u00e9s sont des exemples concrets : ils permettent de communiquer, de cr\u00e9er, de se localiser, de traiter des donn\u00e9es et d\u2019interagir avec le monde. Cet enseignement s\u2019appuie sur quelques concepts fondamentaux : - Les donn\u00e9es : textes, images, sons, mesures\u2026 tout peut \u00eatre repr\u00e9sent\u00e9 num\u00e9riquement. - Les algorithmes : instructions permettant de traiter ces donn\u00e9es. - Les langages : pour traduire les algorithmes en programmes ex\u00e9cutables. - Les machines et objets connect\u00e9s : pour ex\u00e9cuter les programmes et g\u00e9rer les donn\u00e9es. - Les interfaces : pour interagir avec les humains et les syst\u00e8mes. L\u2019objectif est de mieux comprendre le num\u00e9rique, ses enjeux scientifiques et soci\u00e9taux, et d\u2019adopter un usage r\u00e9fl\u00e9chi et responsable des technologies. Chaque th\u00e8me du programme (Internet, Web, r\u00e9seaux sociaux, donn\u00e9es, localisation, objets connect\u00e9s, photographie num\u00e9rique\u2026) est accompagn\u00e9 de projets, travaux pratiques et activit\u00e9s pour mettre en pratique les connaissances. Expos\u00e9s \ud83d\udd3a Les expos\u00e9s Chapitres \ud83d\udd39 Les bases de Python \ud83d\udd39 Internet - Protocoles et routage des paquets","title":"Accueil"},{"location":"Secondes/Secondes/#snt-secondes","text":"L\u2019enseignement de Sciences Num\u00e9riques et Technologie (SNT) en classe de Seconde permet de d\u00e9couvrir les principaux concepts du num\u00e9rique et de comprendre l\u2019impact croissant des technologies sur notre quotidien. Les mobiles, ordinateurs et objets connect\u00e9s sont des exemples concrets : ils permettent de communiquer, de cr\u00e9er, de se localiser, de traiter des donn\u00e9es et d\u2019interagir avec le monde. Cet enseignement s\u2019appuie sur quelques concepts fondamentaux : - Les donn\u00e9es : textes, images, sons, mesures\u2026 tout peut \u00eatre repr\u00e9sent\u00e9 num\u00e9riquement. - Les algorithmes : instructions permettant de traiter ces donn\u00e9es. - Les langages : pour traduire les algorithmes en programmes ex\u00e9cutables. - Les machines et objets connect\u00e9s : pour ex\u00e9cuter les programmes et g\u00e9rer les donn\u00e9es. - Les interfaces : pour interagir avec les humains et les syst\u00e8mes. L\u2019objectif est de mieux comprendre le num\u00e9rique, ses enjeux scientifiques et soci\u00e9taux, et d\u2019adopter un usage r\u00e9fl\u00e9chi et responsable des technologies. Chaque th\u00e8me du programme (Internet, Web, r\u00e9seaux sociaux, donn\u00e9es, localisation, objets connect\u00e9s, photographie num\u00e9rique\u2026) est accompagn\u00e9 de projets, travaux pratiques et activit\u00e9s pour mettre en pratique les connaissances.","title":"SNT - Secondes"},{"location":"Secondes/Secondes/#exposes","text":"\ud83d\udd3a Les expos\u00e9s","title":"Expos\u00e9s"},{"location":"Secondes/Secondes/#chapitres","text":"\ud83d\udd39 Les bases de Python \ud83d\udd39 Internet - Protocoles et routage des paquets","title":"Chapitres"},{"location":"Secondes/exposes/","text":"Organisation des expos\u00e9s SNT Format des expos\u00e9s Travail en groupe : Groupe de 2 \u00e9l\u00e8ves \u2192 expos\u00e9 de 8 \u00e0 12 minutes Groupe de 3 \u00e9l\u00e8ves \u2192 expos\u00e9 de 12 \u00e0 15 minutes Sujet libre , \u00e0 condition qu\u2019il soit en lien avec le num\u00e9rique , l\u2019 informatique ou les technologies . Doublons possibles : plusieurs groupes peuvent traiter le m\u00eame th\u00e8me g\u00e9n\u00e9ral , mais la partie r\u00e9flexive obligatoire (analyse d\u2019un enjeu concret li\u00e9 au num\u00e9rique / informatique / technologie) doit \u00eatre unique \u00e0 chaque groupe. Plan attendu Chaque expos\u00e9 doit \u00eatre structur\u00e9 et comprendre : 1. Une pr\u00e9sentation du sujet choisi 2. Une partie r\u00e9flexive obligatoire qui relie le num\u00e9rique / la technologie \u00e0 des enjeux concrets dans le monde r\u00e9el (soci\u00e9t\u00e9, \u00e9conomie, politique, culture, \u00e9thique, sant\u00e9, etc.) 3. Une conclusion qui synth\u00e9tise les apports et ouvre sur une r\u00e9flexion plus large. Inspirations th\u00e9matiques Choisissez un sujet qui vous int\u00e9resse ou qui vous passionne : un jeu, un film, un r\u00e9seau social, une exp\u00e9rience, une ou un scientifique, une technologie, un \u00e9v\u00e9nement historique... Exemples de sujets Minecraft TikTok Les femmes dans l\u2019histoire de l\u2019informatique La r\u00e9gulation des plateformes de streaming (exemple : Kick vs Twitch) Alan Turing : vie, mort et h\u00e9ritage scientifique Les fake news et leur propagation World of Warcraft : l\u2019\u00e9pid\u00e9mie virtuelle comme mod\u00e8le d\u2019\u00e9tude scientifique Exemples de parties r\u00e9flexives Minecraft \u2192 le jeu sur les r\u00e9seaux sociaux / la redstone et les op\u00e9rations logiques / les changements apr\u00e8s le rachat par Microsoft TikTok \u2192 l\u2019algorithme de recommandation / les effets du doomscrolling / la vie priv\u00e9e et l\u2019exploitation des donn\u00e9es / les nouveaux m\u00e9tiers li\u00e9s \u00e0 la plateforme Doomscrolling \u2192 enjeux psychologiques et soci\u00e9taux Fake news \u2192 impacts politiques et d\u00e9mocratiques World of Warcraft \u2192 ce que l\u2019\u00e9pid\u00e9mie virtuelle a appris aux scientifiques Organisation et calendrier 30 septembre \u2192 Tous les groupes sont constitu\u00e9s (sinon le professeur les formera) 19 octobre \u2192 Chaque groupe a un sujet et un plan valid\u00e9s par le professeur 7 novembre \u2192 Publication de l\u2019ordre de passage Du 10 novembre au 19 d\u00e9cembre \u2192 Expos\u00e9s en classe Consignes Pr\u00e9parez un support visuel (PowerPoint, Google Slides, Canva, affiche, etc.) pour clarifier vos explications. R\u00e9partissez bien la parole entre les membres du groupe . Utilisez des exemples concrets ou des comparaisons pour rendre votre expos\u00e9 plus accessible. La partie r\u00e9flexive est essentielle : elle doit montrer que vous \u00eates capables de prendre du recul sur votre sujet. Indiquez vos sources ! (m\u00eame si ce sont des vid\u00e9os YouTube, tant que vous ne vous contentez pas de r\u00e9p\u00e9ter). Bar\u00e8me (sur 10 points) Crit\u00e8re Points Description Recul et analyse du sujet 2 Mise en lien du th\u00e8me avec des enjeux concrets, capacit\u00e9 \u00e0 prendre du recul Qualit\u00e9 du support visuel 2 Support clair, lisible, bien construit et utile \u00e0 l\u2019expos\u00e9 Clart\u00e9 des propos 2 Explications compr\u00e9hensibles, vocabulaire adapt\u00e9, bonne structuration Dynamisme et oral 2 Capacit\u00e9 \u00e0 capter l\u2019attention, engagement, gestion du temps, contact public R\u00e9partition de la parole 1 Participation \u00e9quilibr\u00e9e de tous les membres du groupe Vari\u00e9t\u00e9 des sources 1 Utilisation de plusieurs sources fiables et pertinentes","title":"Expos\u00e9s"},{"location":"Secondes/exposes/#organisation-des-exposes-snt","text":"","title":"Organisation des expos\u00e9s SNT"},{"location":"Secondes/exposes/#format-des-exposes","text":"Travail en groupe : Groupe de 2 \u00e9l\u00e8ves \u2192 expos\u00e9 de 8 \u00e0 12 minutes Groupe de 3 \u00e9l\u00e8ves \u2192 expos\u00e9 de 12 \u00e0 15 minutes Sujet libre , \u00e0 condition qu\u2019il soit en lien avec le num\u00e9rique , l\u2019 informatique ou les technologies . Doublons possibles : plusieurs groupes peuvent traiter le m\u00eame th\u00e8me g\u00e9n\u00e9ral , mais la partie r\u00e9flexive obligatoire (analyse d\u2019un enjeu concret li\u00e9 au num\u00e9rique / informatique / technologie) doit \u00eatre unique \u00e0 chaque groupe.","title":"Format des expos\u00e9s"},{"location":"Secondes/exposes/#plan-attendu","text":"Chaque expos\u00e9 doit \u00eatre structur\u00e9 et comprendre : 1. Une pr\u00e9sentation du sujet choisi 2. Une partie r\u00e9flexive obligatoire qui relie le num\u00e9rique / la technologie \u00e0 des enjeux concrets dans le monde r\u00e9el (soci\u00e9t\u00e9, \u00e9conomie, politique, culture, \u00e9thique, sant\u00e9, etc.) 3. Une conclusion qui synth\u00e9tise les apports et ouvre sur une r\u00e9flexion plus large.","title":"Plan attendu"},{"location":"Secondes/exposes/#inspirations-thematiques","text":"Choisissez un sujet qui vous int\u00e9resse ou qui vous passionne : un jeu, un film, un r\u00e9seau social, une exp\u00e9rience, une ou un scientifique, une technologie, un \u00e9v\u00e9nement historique...","title":"Inspirations th\u00e9matiques"},{"location":"Secondes/exposes/#exemples-de-sujets","text":"Minecraft TikTok Les femmes dans l\u2019histoire de l\u2019informatique La r\u00e9gulation des plateformes de streaming (exemple : Kick vs Twitch) Alan Turing : vie, mort et h\u00e9ritage scientifique Les fake news et leur propagation World of Warcraft : l\u2019\u00e9pid\u00e9mie virtuelle comme mod\u00e8le d\u2019\u00e9tude scientifique","title":"Exemples de sujets"},{"location":"Secondes/exposes/#exemples-de-parties-reflexives","text":"Minecraft \u2192 le jeu sur les r\u00e9seaux sociaux / la redstone et les op\u00e9rations logiques / les changements apr\u00e8s le rachat par Microsoft TikTok \u2192 l\u2019algorithme de recommandation / les effets du doomscrolling / la vie priv\u00e9e et l\u2019exploitation des donn\u00e9es / les nouveaux m\u00e9tiers li\u00e9s \u00e0 la plateforme Doomscrolling \u2192 enjeux psychologiques et soci\u00e9taux Fake news \u2192 impacts politiques et d\u00e9mocratiques World of Warcraft \u2192 ce que l\u2019\u00e9pid\u00e9mie virtuelle a appris aux scientifiques","title":"Exemples de parties r\u00e9flexives"},{"location":"Secondes/exposes/#organisation-et-calendrier","text":"30 septembre \u2192 Tous les groupes sont constitu\u00e9s (sinon le professeur les formera) 19 octobre \u2192 Chaque groupe a un sujet et un plan valid\u00e9s par le professeur 7 novembre \u2192 Publication de l\u2019ordre de passage Du 10 novembre au 19 d\u00e9cembre \u2192 Expos\u00e9s en classe","title":"Organisation et calendrier"},{"location":"Secondes/exposes/#consignes","text":"Pr\u00e9parez un support visuel (PowerPoint, Google Slides, Canva, affiche, etc.) pour clarifier vos explications. R\u00e9partissez bien la parole entre les membres du groupe . Utilisez des exemples concrets ou des comparaisons pour rendre votre expos\u00e9 plus accessible. La partie r\u00e9flexive est essentielle : elle doit montrer que vous \u00eates capables de prendre du recul sur votre sujet. Indiquez vos sources ! (m\u00eame si ce sont des vid\u00e9os YouTube, tant que vous ne vous contentez pas de r\u00e9p\u00e9ter).","title":"Consignes"},{"location":"Secondes/exposes/#bareme-sur-10-points","text":"Crit\u00e8re Points Description Recul et analyse du sujet 2 Mise en lien du th\u00e8me avec des enjeux concrets, capacit\u00e9 \u00e0 prendre du recul Qualit\u00e9 du support visuel 2 Support clair, lisible, bien construit et utile \u00e0 l\u2019expos\u00e9 Clart\u00e9 des propos 2 Explications compr\u00e9hensibles, vocabulaire adapt\u00e9, bonne structuration Dynamisme et oral 2 Capacit\u00e9 \u00e0 capter l\u2019attention, engagement, gestion du temps, contact public R\u00e9partition de la parole 1 Participation \u00e9quilibr\u00e9e de tous les membres du groupe Vari\u00e9t\u00e9 des sources 1 Utilisation de plusieurs sources fiables et pertinentes","title":"Bar\u00e8me (sur 10 points)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/","text":"\ud83c\udf10 SNT \u2013 Internet Internet = un r\u00e9seau de r\u00e9seaux Internet n\u2019est pas une seule machine g\u00e9ante. C\u2019est en r\u00e9alit\u00e9 un immense ensemble de r\u00e9seaux interconnect\u00e9s : Les r\u00e9seaux locaux (LAN) Exemple : votre maison (box Internet + ordinateurs + t\u00e9l\u00e9phones connect\u00e9s en Wi-Fi ou en c\u00e2ble). Exemple : le r\u00e9seau du lyc\u00e9e (salles informatiques, imprimantes, serveurs p\u00e9dagogiques). Exemple : le r\u00e9seau d\u2019une entreprise. Ces r\u00e9seaux sont priv\u00e9s et limit\u00e9s dans l\u2019espace (on les appelle des r\u00e9seaux locaux ). Les Fournisseurs d\u2019Acc\u00e8s \u00e0 Internet (FAI) Pour communiquer avec le reste du monde, un r\u00e9seau local doit se connecter \u00e0 un Fournisseur d\u2019Acc\u00e8s \u00e0 Internet (FAI) : - En France : Orange, SFR, Free, Bouygues, etc. - Dans d\u2019autres pays : AT&T, Deutsche Telekom, etc. Un FAI g\u00e8re un r\u00e9seau beaucoup plus vaste qui relie des millions de clients. L\u2019interconnexion mondiale Les r\u00e9seaux des FAI sont eux-m\u00eames reli\u00e9s entre eux par de tr\u00e8s grandes lignes de communication (fibre optique, c\u00e2bles sous-marins, satellites). Les grandes entreprises (Google, Amazon, Microsoft, etc.) poss\u00e8dent aussi leurs propres r\u00e9seaux qui s\u2019interconnectent avec les FAI. \ud83d\udccc R\u00e9sultat : Quand vous envoyez un message, il sort d\u2019abord de votre r\u00e9seau local \u2192 passe par le r\u00e9seau de votre FAI \u2192 traverse plusieurs autres r\u00e9seaux \u2192 atteint le r\u00e9seau du destinataire. \ud83d\udc49 Id\u00e9e cl\u00e9 \u00e0 retenir : Internet, c\u2019est l\u2019interconnexion de milliers de r\u00e9seaux locaux et de fournisseurs d\u2019acc\u00e8s \u00e0 l\u2019\u00e9chelle mondiale, qui communiquent tous gr\u00e2ce \u00e0 des protocoles communs . Rep\u00e8res historiques 1950s-1960s : premiers r\u00e9seaux d\u2019ordinateurs. 1970 : ArpaNet (USA). 1971 : Cyclades (France). 1983 : naissance officielle d\u2019Internet avec le protocole TCP/IP . Le protocole IP et l\u2019adressage Chaque appareil connect\u00e9 \u00e0 Internet doit \u00eatre identifiable de mani\u00e8re unique . Pour cela, deux types d\u2019adresses existent : \ud83d\udccd Adresse MAC (adressage local) Chaque machine dispose d\u2019une ou plusieurs cartes r\u00e9seau (Wi-Fi, Ethernet\u2026). Chaque carte poss\u00e8de une adresse physique unique au monde : l\u2019adresse MAC . Utilis\u00e9e uniquement dans le r\u00e9seau local (LAN). Caract\u00e9ristiques : - Format : 6 blocs de 2 caract\u00e8res (ex. a1:b2:c3:d4:e5:f6 ). - Base : hexad\u00e9cimale (0-9 et A-F). - Port\u00e9e : limit\u00e9e au r\u00e9seau local. - Unicit\u00e9 : chaque carte r\u00e9seau poss\u00e8de une adresse MAC unique. \ud83d\udca1 Exemple : Adresse MAC = 3C:97:0E:4B:62:A1 \ud83c\udf10 Adresse IP (adressage global) Pour communiquer sur Internet, chaque machine re\u00e7oit aussi une adresse IP . C\u2019est l\u2019adresse logique qui permet de retrouver une machine parmi des milliards d\u2019autres. Caract\u00e9ristiques : - Format : 4 nombres entre 0 et 255 (ex. 192.168.1.12 ). - Base humaine : d\u00e9cimale (base 10). - Base machine : binaire (0 et 1). - Port\u00e9e : mondiale (Internet). \ud83d\udca1 Exemples : - 91.198.174.192 (serveur de Wikipedia en IPv4). - 2a02:ec80:600:ed1a::1 (m\u00eame serveur en IPv6). - 127.0.0.1 \u2192 adresse sp\u00e9ciale \u00ab localhost \u00bb (votre propre machine). \ud83e\udde9 Structure d\u2019une adresse IP Une adresse IP identifie une machine sur un r\u00e9seau. Elle se compose de deux parties principales : Partie R\u00e9seau \u2192 identifie le r\u00e9seau auquel appartient la machine. Partie Machine (h\u00f4te) \u2192 identifie la machine dans ce r\u00e9seau. \ud83d\udccc Pour s\u00e9parer ces deux parties, on utilise un masque de sous-r\u00e9seau . IPv4 (Internet Protocol version 4) Format : 32 bits , affich\u00e9s en 4 nombres d\u00e9cimaux (0-255) s\u00e9par\u00e9s par des points. Exemple : 128.40.94.3 Masque : /16 = 255.255.0.0 En binaire : Adresse : 10000000.00101000.01011110.00000011 Masque : 11111111.11111111.00000000.00000000 Partie r\u00e9seau : 128.40.0.0 Partie machine : 94.3 Port\u00e9e : Internet mondial Limitation : environ 4 milliards d\u2019adresses \u2192 probl\u00e8me avec le nombre croissant d\u2019appareils connect\u00e9s. IPv6 (Internet Protocol version 6) Cr\u00e9\u00e9 pour r\u00e9soudre la p\u00e9nurie d\u2019adresses IPv4 . Format : 128 bits , repr\u00e9sent\u00e9 en 8 groupes de 4 caract\u00e8res hexad\u00e9cimaux s\u00e9par\u00e9s par des deux-points. Exemple : 2a02:ec80:600:ed1a::1 Port\u00e9e : mondiale, permet un nombre quasi infini d\u2019adresses . Partie r\u00e9seau / partie machine : toujours pr\u00e9sentes, mais sur un format plus long. Comparatif IPv4 / IPv6 Caract\u00e9ristique IPv4 IPv6 Taille 32 bits 128 bits Format 4 nombres d\u00e9cimaux 8 blocs hexad\u00e9cimaux Exemple 192.168.1.25 2a02:ec80:600:ed1a::1 Nombre d\u2019adresses ~4 milliards 340 undecillions (~3,4\u00d710\u00b3\u2078) Objectif Adressage mondial limit\u00e9 R\u00e9soudre la p\u00e9nurie IPv4 \ud83d\udcbb Exp\u00e9rience : d\u00e9couvrir les adresses IP et le r\u00e9seau local de ton ordinateur Ouvrir l\u2019invite de commande. Taper : ipconfig Observer : Ton adresse IPv4 et IPv6 L\u2019adresse de la passerelle (routeur) Les serveurs DNS \ud83d\udccc \u00c0 retenir Une machine peut avoir IPv4 et IPv6 simultan\u00e9ment. La partie r\u00e9seau permet de savoir si deux machines sont dans le m\u00eame r\u00e9seau local. Le masque de sous-r\u00e9seau d\u00e9termine quelle partie de l\u2019adresse est r\u00e9seau et quelle partie est machine. \ud83d\udcca R\u00e9sum\u00e9 comparatif Caract\u00e9ristique Adresse MAC Adresse IP Nature Physique (grav\u00e9e sur la carte) Logique (attribu\u00e9e par le r\u00e9seau) Format 6 blocs hexad\u00e9cimaux (ex. A1:B2:...) 4 nombres d\u00e9cimaux (IPv4) ou longs hexad\u00e9cimaux (IPv6) Port\u00e9e R\u00e9seau local R\u00e9seau mondial (Internet) Unicit\u00e9 Unique au monde Unique dans un r\u00e9seau donn\u00e9 Exemple 3C:97:0E:4B:62:A1 192.168.1.12 \ud83d\udccc \u00c0 retenir : - L\u2019adresse MAC identifie la carte r\u00e9seau dans un LAN . - L\u2019adresse IP identifie l\u2019 appareil sur Internet . - Les deux sont n\u00e9cessaires pour qu\u2019un ordinateur puisse communiquer. DNS \u2013 Domain Name System Quand vous tapez un nom de site dans votre navigateur, par exemple wikipedia.org , votre ordinateur ne sait pas directement o\u00f9 envoyer les paquets. Il a besoin de l\u2019adresse IP correspondante. Le DNS (Domain Name System) est un service qui fait la correspondance : Nom symbolique \u2192 Adresse IP Exemple : wikipedia.org \u2192 91.198.174.192 (IPv4) ou 2a02:ec80:600:ed1a::1 (IPv6) Les serveurs DNS sont des ordinateurs sp\u00e9cialis\u00e9s qui r\u00e9pondent aux requ\u00eates des ordinateurs pour r\u00e9soudre ces noms. Chaque ordinateur dispose d\u2019un serveur DNS configur\u00e9 (souvent celui de votre FAI) pour interroger le r\u00e9seau. \ud83d\udccc \u00c0 retenir : sans DNS, il faudrait conna\u00eetre l\u2019adresse IP exacte de chaque site pour s\u2019y connecter. Le protocole TCP (Transmission Control Protocol) Quand on envoie un message ou un fichier sur Internet, il n\u2019est jamais envoy\u00e9 d\u2019un seul bloc , mais d\u00e9coup\u00e9 en petits morceaux appel\u00e9s paquets . Chaque paquet contient : - l\u2019adresse de l\u2019 \u00e9metteur (source), - l\u2019adresse du destinataire , - une partie des donn\u00e9es (texte, image, son\u2026). Adresse source Adresse destination Donn\u00e9es \ud83d\udccc R\u00f4le de TCP TCP est un protocole de communication fiable . Il s\u2019assure que : 1. Tous les paquets arrivent \u00e0 destination . - Si un paquet est perdu sur le chemin, TCP le redemande. 2. Les paquets sont remis dans le bon ordre . - Les paquets peuvent arriver dans le d\u00e9sordre, TCP les r\u00e9organise. 3. La congestion du r\u00e9seau est g\u00e9r\u00e9e . - TCP ajuste la vitesse d\u2019envoi pour ne pas saturer le r\u00e9seau. \ud83d\udca1 Exemple concret : - Vous regardez une vid\u00e9o en streaming : - La vid\u00e9o est envoy\u00e9e en milliers de paquets. - TCP s\u2019assure que chaque image arrive et est reconstitu\u00e9e dans le bon ordre . \ud83d\udd04 Transmission et fiabilit\u00e9 Chaque paquet contient un num\u00e9ro d\u2019ordre et un accus\u00e9 de r\u00e9ception (ACK) . Si un paquet n\u2019est pas accus\u00e9 dans un certain d\u00e9lai, il est renvoy\u00e9 automatiquement . Ordinateur A ---> paquet #1 ---> Ordinateur B <--- ACK #1 ---- Ordinateur A ---> paquet #2 ---> Ordinateur B <--- ACK #2 ---- Cela garantit que tout le message est complet \u00e0 l\u2019arriv\u00e9e. \u26a0\ufe0f Limites de TCP TCP ne garantit pas le temps d\u2019arriv\u00e9e des paquets. Utile pour mails ou fichiers. Moins adapt\u00e9 pour les vid\u00e9os en direct ou jeux en ligne , car attendre les paquets manquants cr\u00e9e du lag . Pour ces usages, on utilise souvent UDP (User Datagram Protocol) , qui envoie les paquets sans v\u00e9rification ni r\u00e9ordonnancement \u2192 plus rapide mais moins fiable. \ud83d\udcbb Exp\u00e9rience : tester si un autre appareil ou site est joignable Ouvrir l\u2019invite de commande. Taper : ping wikipedia.org Observer : L\u2019adresse IP de wikipedia.org Le temps aller-retour des paquets Si tous les paquets sont re\u00e7us \ud83d\udccc \u00c0 retenir TCP d\u00e9coupe les donn\u00e9es en paquets , les envoie et les r\u00e9assemble. Il assure la fiabilit\u00e9 : tout paquet perdu est renvoy\u00e9 et les paquets sont remis dans le bon ordre. TCP est le protocole utilis\u00e9 pour la majorit\u00e9 des communications fiables sur Internet (mail, web, transfert de fichiers). Pour les applications temps r\u00e9el (streaming, jeux), UDP est utilis\u00e9 \u00e0 la place. Le routage Les paquets ne vont pas directement de l\u2019\u00e9metteur au destinataire. Ils passent par plusieurs routeurs , qui choisissent \u00e0 chaque \u00e9tape le meilleur chemin possible . Sch\u00e9ma simplifi\u00e9 : Ordinateur A \u2192 [Routeur 1] \u2192 [Routeur 2] \u2192 [Routeur 3] \u2192 Ordinateur B Chaque routeur conna\u00eet seulement une carte locale . Si un chemin est bloqu\u00e9, le paquet est envoy\u00e9 ailleurs. Certains paquets peuvent \u00eatre perdus \u2192 TCP les renvoie. \ud83d\udcbb Exp\u00e9rience : suivre le chemin des paquets sur Internet Ouvrir l\u2019invite de commande. Taper : tracert wikipedia.org Observer : Les routeurs travers\u00e9s Les temps de passage Les \u00e9toiles (*) pour routeurs qui ne r\u00e9pondent pas \ud83d\udd39 Exp\u00e9rience pratique : nslookup \ud83d\udcbb Objectif : r\u00e9soudre un nom de domaine en adresse IP et identifier le serveur DNS utilis\u00e9 Ouvrir l\u2019invite de commande sur Windows. Taper la commande : nslookup wikipedia.org Observer : L\u2019 adresse IP retourn\u00e9e pour wikipedia.org Le serveur DNS qui a r\u00e9pondu Comparer avec l\u2019adresse IP obtenue avec ping wikipedia.org pour voir que c\u2019est la m\u00eame. \ud83d\udca1 Lien avec le cours : cette exp\u00e9rience montre comment un nom de site est traduit en adresse IP avant que les paquets soient envoy\u00e9s. Les composants mat\u00e9riels d\u2019un r\u00e9seau Pour qu\u2019un r\u00e9seau fonctionne, plusieurs \u00e9l\u00e9ments mat\u00e9riels sont n\u00e9cessaires : \ud83d\udcbb 1. Machines Ce sont les appareils qui communiquent entre eux : Ordinateurs, tablettes, smartphones, consoles de jeu, serveurs. Elles envoient et re\u00e7oivent des donn\u00e9es via le r\u00e9seau. \ud83d\udd00 2. Switch Dispositif qui relie plusieurs machines localement dans un r\u00e9seau (LAN). Exemple : un switch dans une salle informatique permet aux ordinateurs de communiquer entre eux rapidement. Fonction : re\u00e7oit un paquet sur un port et l\u2019envoie uniquement au port correspondant \u00e0 la machine destinataire . \ud83c\udf10 3. Routeur Permet de connecter un r\u00e9seau local \u00e0 Internet ou \u00e0 d\u2019autres r\u00e9seaux. Exemple : la box Internet \u00e0 la maison est un routeur. Fonction : acheminer les paquets entre les diff\u00e9rents r\u00e9seaux selon leur adresse IP. \ud83d\udce1 4. Supports de transmission Permettent de transporter physiquement les donn\u00e9es entre machines et \u00e9quipements r\u00e9seau. Types : C\u00e2bles Ethernet (filaire, stable et rapide) Wi-Fi (sans fil, pratique mais plus sensible aux interf\u00e9rences) Fibre optique (tr\u00e8s haut d\u00e9bit, longue distance) Mod\u00e8le en couches TCP/IP Le protocole TCP/IP organise la communication en 4 couches , chacune ayant un r\u00f4le sp\u00e9cifique : 1 Couche Application \ud83d\udcf1 Utilis\u00e9e par les logiciels : navigateur web, messagerie, jeux en ligne. Contient les donn\u00e9es utilisateur . 2 Couche Transport \ud83d\ude9b Assure le transport fiable des donn\u00e9es . Garantit que les paquets arrivent complets et dans le bon ordre (TCP). 3 Couche Internet \ud83d\uddfa\ufe0f G\u00e8re l\u2019adressage et le routage . D\u00e9termine le chemin optimal pour les paquets vers leur destination. 4 Couche Acc\u00e8s R\u00e9seau \ud83d\udd0c Assure la transmission physique des donn\u00e9es : signaux \u00e9lectriques, optiques ou radio. Utilise les supports de transmission (Ethernet, Wi-Fi, fibre). Encapsulation et d\u00e9sencapsulation Quand une machine envoie des donn\u00e9es : Les donn\u00e9es descendent les couches en se faisant encapsuler \u2192 chaque couche ajoute son en-t\u00eate . \ud83d\udcf1 Application : donn\u00e9es utilisateur \u2b07\ufe0f \ud83d\ude9b Transport : + en-t\u00eate TCP \u2b07\ufe0f \ud83d\uddfa\ufe0f Internet : + en-t\u00eate IP \u2b07\ufe0f \ud83d\udd0c Acc\u00e8s r\u00e9seau : + en-t\u00eate Ethernet \u00c0 la r\u00e9ception, les donn\u00e9es remontent les couches en se faisant d\u00e9sencapsuler \u2192 chaque couche retire son en-t\u00eate pour r\u00e9cup\u00e9rer les informations originales. \ud83d\udd0c Acc\u00e8s r\u00e9seau : - en-t\u00eate Ethernet \u2b06\ufe0f \ud83d\uddfa\ufe0f Internet : - en-t\u00eate IP \u2b06\ufe0f \ud83d\ude9b Transport : - en-t\u00eate TCP \u2b06\ufe0f \ud83d\udcf1 Application : donn\u00e9es utilisateur \ud83d\udca1 \u00c0 retenir : - L\u2019encapsulation permet \u00e0 chaque couche de g\u00e9rer ses propres fonctions sans se pr\u00e9occuper des autres. - La d\u00e9sencapsulation permet de reconstituer les donn\u00e9es correctement \u00e0 l\u2019arriv\u00e9e.","title":"Internet"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#snt-internet","text":"","title":"\ud83c\udf10 SNT \u2013 Internet"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#internet-un-reseau-de-reseaux","text":"Internet n\u2019est pas une seule machine g\u00e9ante. C\u2019est en r\u00e9alit\u00e9 un immense ensemble de r\u00e9seaux interconnect\u00e9s : Les r\u00e9seaux locaux (LAN) Exemple : votre maison (box Internet + ordinateurs + t\u00e9l\u00e9phones connect\u00e9s en Wi-Fi ou en c\u00e2ble). Exemple : le r\u00e9seau du lyc\u00e9e (salles informatiques, imprimantes, serveurs p\u00e9dagogiques). Exemple : le r\u00e9seau d\u2019une entreprise. Ces r\u00e9seaux sont priv\u00e9s et limit\u00e9s dans l\u2019espace (on les appelle des r\u00e9seaux locaux ).","title":"Internet = un r\u00e9seau de r\u00e9seaux"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#les-fournisseurs-dacces-a-internet-fai","text":"Pour communiquer avec le reste du monde, un r\u00e9seau local doit se connecter \u00e0 un Fournisseur d\u2019Acc\u00e8s \u00e0 Internet (FAI) : - En France : Orange, SFR, Free, Bouygues, etc. - Dans d\u2019autres pays : AT&T, Deutsche Telekom, etc. Un FAI g\u00e8re un r\u00e9seau beaucoup plus vaste qui relie des millions de clients.","title":"Les Fournisseurs d\u2019Acc\u00e8s \u00e0 Internet (FAI)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#linterconnexion-mondiale","text":"Les r\u00e9seaux des FAI sont eux-m\u00eames reli\u00e9s entre eux par de tr\u00e8s grandes lignes de communication (fibre optique, c\u00e2bles sous-marins, satellites). Les grandes entreprises (Google, Amazon, Microsoft, etc.) poss\u00e8dent aussi leurs propres r\u00e9seaux qui s\u2019interconnectent avec les FAI. \ud83d\udccc R\u00e9sultat : Quand vous envoyez un message, il sort d\u2019abord de votre r\u00e9seau local \u2192 passe par le r\u00e9seau de votre FAI \u2192 traverse plusieurs autres r\u00e9seaux \u2192 atteint le r\u00e9seau du destinataire. \ud83d\udc49 Id\u00e9e cl\u00e9 \u00e0 retenir : Internet, c\u2019est l\u2019interconnexion de milliers de r\u00e9seaux locaux et de fournisseurs d\u2019acc\u00e8s \u00e0 l\u2019\u00e9chelle mondiale, qui communiquent tous gr\u00e2ce \u00e0 des protocoles communs .","title":"L\u2019interconnexion mondiale"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#reperes-historiques","text":"1950s-1960s : premiers r\u00e9seaux d\u2019ordinateurs. 1970 : ArpaNet (USA). 1971 : Cyclades (France). 1983 : naissance officielle d\u2019Internet avec le protocole TCP/IP .","title":"Rep\u00e8res historiques"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#le-protocole-ip-et-ladressage","text":"Chaque appareil connect\u00e9 \u00e0 Internet doit \u00eatre identifiable de mani\u00e8re unique . Pour cela, deux types d\u2019adresses existent :","title":"Le protocole IP et l\u2019adressage"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#adresse-mac-adressage-local","text":"Chaque machine dispose d\u2019une ou plusieurs cartes r\u00e9seau (Wi-Fi, Ethernet\u2026). Chaque carte poss\u00e8de une adresse physique unique au monde : l\u2019adresse MAC . Utilis\u00e9e uniquement dans le r\u00e9seau local (LAN). Caract\u00e9ristiques : - Format : 6 blocs de 2 caract\u00e8res (ex. a1:b2:c3:d4:e5:f6 ). - Base : hexad\u00e9cimale (0-9 et A-F). - Port\u00e9e : limit\u00e9e au r\u00e9seau local. - Unicit\u00e9 : chaque carte r\u00e9seau poss\u00e8de une adresse MAC unique. \ud83d\udca1 Exemple : Adresse MAC = 3C:97:0E:4B:62:A1","title":"\ud83d\udccd Adresse MAC (adressage local)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#adresse-ip-adressage-global","text":"Pour communiquer sur Internet, chaque machine re\u00e7oit aussi une adresse IP . C\u2019est l\u2019adresse logique qui permet de retrouver une machine parmi des milliards d\u2019autres. Caract\u00e9ristiques : - Format : 4 nombres entre 0 et 255 (ex. 192.168.1.12 ). - Base humaine : d\u00e9cimale (base 10). - Base machine : binaire (0 et 1). - Port\u00e9e : mondiale (Internet). \ud83d\udca1 Exemples : - 91.198.174.192 (serveur de Wikipedia en IPv4). - 2a02:ec80:600:ed1a::1 (m\u00eame serveur en IPv6). - 127.0.0.1 \u2192 adresse sp\u00e9ciale \u00ab localhost \u00bb (votre propre machine).","title":"\ud83c\udf10 Adresse IP (adressage global)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#structure-dune-adresse-ip","text":"Une adresse IP identifie une machine sur un r\u00e9seau. Elle se compose de deux parties principales : Partie R\u00e9seau \u2192 identifie le r\u00e9seau auquel appartient la machine. Partie Machine (h\u00f4te) \u2192 identifie la machine dans ce r\u00e9seau. \ud83d\udccc Pour s\u00e9parer ces deux parties, on utilise un masque de sous-r\u00e9seau .","title":"\ud83e\udde9 Structure d\u2019une adresse IP"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#ipv4-internet-protocol-version-4","text":"Format : 32 bits , affich\u00e9s en 4 nombres d\u00e9cimaux (0-255) s\u00e9par\u00e9s par des points. Exemple : 128.40.94.3 Masque : /16 = 255.255.0.0 En binaire : Adresse : 10000000.00101000.01011110.00000011 Masque : 11111111.11111111.00000000.00000000 Partie r\u00e9seau : 128.40.0.0 Partie machine : 94.3 Port\u00e9e : Internet mondial Limitation : environ 4 milliards d\u2019adresses \u2192 probl\u00e8me avec le nombre croissant d\u2019appareils connect\u00e9s.","title":"IPv4 (Internet Protocol version 4)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#ipv6-internet-protocol-version-6","text":"Cr\u00e9\u00e9 pour r\u00e9soudre la p\u00e9nurie d\u2019adresses IPv4 . Format : 128 bits , repr\u00e9sent\u00e9 en 8 groupes de 4 caract\u00e8res hexad\u00e9cimaux s\u00e9par\u00e9s par des deux-points. Exemple : 2a02:ec80:600:ed1a::1 Port\u00e9e : mondiale, permet un nombre quasi infini d\u2019adresses . Partie r\u00e9seau / partie machine : toujours pr\u00e9sentes, mais sur un format plus long.","title":"IPv6 (Internet Protocol version 6)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#comparatif-ipv4-ipv6","text":"Caract\u00e9ristique IPv4 IPv6 Taille 32 bits 128 bits Format 4 nombres d\u00e9cimaux 8 blocs hexad\u00e9cimaux Exemple 192.168.1.25 2a02:ec80:600:ed1a::1 Nombre d\u2019adresses ~4 milliards 340 undecillions (~3,4\u00d710\u00b3\u2078) Objectif Adressage mondial limit\u00e9 R\u00e9soudre la p\u00e9nurie IPv4 \ud83d\udcbb Exp\u00e9rience : d\u00e9couvrir les adresses IP et le r\u00e9seau local de ton ordinateur Ouvrir l\u2019invite de commande. Taper : ipconfig Observer : Ton adresse IPv4 et IPv6 L\u2019adresse de la passerelle (routeur) Les serveurs DNS","title":"Comparatif IPv4 / IPv6"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#a-retenir","text":"Une machine peut avoir IPv4 et IPv6 simultan\u00e9ment. La partie r\u00e9seau permet de savoir si deux machines sont dans le m\u00eame r\u00e9seau local. Le masque de sous-r\u00e9seau d\u00e9termine quelle partie de l\u2019adresse est r\u00e9seau et quelle partie est machine.","title":"\ud83d\udccc \u00c0 retenir"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#resume-comparatif","text":"Caract\u00e9ristique Adresse MAC Adresse IP Nature Physique (grav\u00e9e sur la carte) Logique (attribu\u00e9e par le r\u00e9seau) Format 6 blocs hexad\u00e9cimaux (ex. A1:B2:...) 4 nombres d\u00e9cimaux (IPv4) ou longs hexad\u00e9cimaux (IPv6) Port\u00e9e R\u00e9seau local R\u00e9seau mondial (Internet) Unicit\u00e9 Unique au monde Unique dans un r\u00e9seau donn\u00e9 Exemple 3C:97:0E:4B:62:A1 192.168.1.12 \ud83d\udccc \u00c0 retenir : - L\u2019adresse MAC identifie la carte r\u00e9seau dans un LAN . - L\u2019adresse IP identifie l\u2019 appareil sur Internet . - Les deux sont n\u00e9cessaires pour qu\u2019un ordinateur puisse communiquer.","title":"\ud83d\udcca R\u00e9sum\u00e9 comparatif"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#dns-domain-name-system","text":"Quand vous tapez un nom de site dans votre navigateur, par exemple wikipedia.org , votre ordinateur ne sait pas directement o\u00f9 envoyer les paquets. Il a besoin de l\u2019adresse IP correspondante. Le DNS (Domain Name System) est un service qui fait la correspondance : Nom symbolique \u2192 Adresse IP Exemple : wikipedia.org \u2192 91.198.174.192 (IPv4) ou 2a02:ec80:600:ed1a::1 (IPv6) Les serveurs DNS sont des ordinateurs sp\u00e9cialis\u00e9s qui r\u00e9pondent aux requ\u00eates des ordinateurs pour r\u00e9soudre ces noms. Chaque ordinateur dispose d\u2019un serveur DNS configur\u00e9 (souvent celui de votre FAI) pour interroger le r\u00e9seau. \ud83d\udccc \u00c0 retenir : sans DNS, il faudrait conna\u00eetre l\u2019adresse IP exacte de chaque site pour s\u2019y connecter.","title":"DNS \u2013 Domain Name System"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#le-protocole-tcp-transmission-control-protocol","text":"Quand on envoie un message ou un fichier sur Internet, il n\u2019est jamais envoy\u00e9 d\u2019un seul bloc , mais d\u00e9coup\u00e9 en petits morceaux appel\u00e9s paquets . Chaque paquet contient : - l\u2019adresse de l\u2019 \u00e9metteur (source), - l\u2019adresse du destinataire , - une partie des donn\u00e9es (texte, image, son\u2026). Adresse source Adresse destination Donn\u00e9es","title":"Le protocole TCP (Transmission Control Protocol)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#role-de-tcp","text":"TCP est un protocole de communication fiable . Il s\u2019assure que : 1. Tous les paquets arrivent \u00e0 destination . - Si un paquet est perdu sur le chemin, TCP le redemande. 2. Les paquets sont remis dans le bon ordre . - Les paquets peuvent arriver dans le d\u00e9sordre, TCP les r\u00e9organise. 3. La congestion du r\u00e9seau est g\u00e9r\u00e9e . - TCP ajuste la vitesse d\u2019envoi pour ne pas saturer le r\u00e9seau. \ud83d\udca1 Exemple concret : - Vous regardez une vid\u00e9o en streaming : - La vid\u00e9o est envoy\u00e9e en milliers de paquets. - TCP s\u2019assure que chaque image arrive et est reconstitu\u00e9e dans le bon ordre .","title":"\ud83d\udccc R\u00f4le de TCP"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#transmission-et-fiabilite","text":"Chaque paquet contient un num\u00e9ro d\u2019ordre et un accus\u00e9 de r\u00e9ception (ACK) . Si un paquet n\u2019est pas accus\u00e9 dans un certain d\u00e9lai, il est renvoy\u00e9 automatiquement . Ordinateur A ---> paquet #1 ---> Ordinateur B <--- ACK #1 ---- Ordinateur A ---> paquet #2 ---> Ordinateur B <--- ACK #2 ---- Cela garantit que tout le message est complet \u00e0 l\u2019arriv\u00e9e.","title":"\ud83d\udd04 Transmission et fiabilit\u00e9"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#limites-de-tcp","text":"TCP ne garantit pas le temps d\u2019arriv\u00e9e des paquets. Utile pour mails ou fichiers. Moins adapt\u00e9 pour les vid\u00e9os en direct ou jeux en ligne , car attendre les paquets manquants cr\u00e9e du lag . Pour ces usages, on utilise souvent UDP (User Datagram Protocol) , qui envoie les paquets sans v\u00e9rification ni r\u00e9ordonnancement \u2192 plus rapide mais moins fiable. \ud83d\udcbb Exp\u00e9rience : tester si un autre appareil ou site est joignable Ouvrir l\u2019invite de commande. Taper : ping wikipedia.org Observer : L\u2019adresse IP de wikipedia.org Le temps aller-retour des paquets Si tous les paquets sont re\u00e7us","title":"\u26a0\ufe0f Limites de TCP"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#a-retenir_1","text":"TCP d\u00e9coupe les donn\u00e9es en paquets , les envoie et les r\u00e9assemble. Il assure la fiabilit\u00e9 : tout paquet perdu est renvoy\u00e9 et les paquets sont remis dans le bon ordre. TCP est le protocole utilis\u00e9 pour la majorit\u00e9 des communications fiables sur Internet (mail, web, transfert de fichiers). Pour les applications temps r\u00e9el (streaming, jeux), UDP est utilis\u00e9 \u00e0 la place.","title":"\ud83d\udccc \u00c0 retenir"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#le-routage","text":"Les paquets ne vont pas directement de l\u2019\u00e9metteur au destinataire. Ils passent par plusieurs routeurs , qui choisissent \u00e0 chaque \u00e9tape le meilleur chemin possible . Sch\u00e9ma simplifi\u00e9 : Ordinateur A \u2192 [Routeur 1] \u2192 [Routeur 2] \u2192 [Routeur 3] \u2192 Ordinateur B Chaque routeur conna\u00eet seulement une carte locale . Si un chemin est bloqu\u00e9, le paquet est envoy\u00e9 ailleurs. Certains paquets peuvent \u00eatre perdus \u2192 TCP les renvoie. \ud83d\udcbb Exp\u00e9rience : suivre le chemin des paquets sur Internet Ouvrir l\u2019invite de commande. Taper : tracert wikipedia.org Observer : Les routeurs travers\u00e9s Les temps de passage Les \u00e9toiles (*) pour routeurs qui ne r\u00e9pondent pas","title":"Le routage"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#experience-pratique-nslookup","text":"\ud83d\udcbb Objectif : r\u00e9soudre un nom de domaine en adresse IP et identifier le serveur DNS utilis\u00e9 Ouvrir l\u2019invite de commande sur Windows. Taper la commande : nslookup wikipedia.org Observer : L\u2019 adresse IP retourn\u00e9e pour wikipedia.org Le serveur DNS qui a r\u00e9pondu Comparer avec l\u2019adresse IP obtenue avec ping wikipedia.org pour voir que c\u2019est la m\u00eame. \ud83d\udca1 Lien avec le cours : cette exp\u00e9rience montre comment un nom de site est traduit en adresse IP avant que les paquets soient envoy\u00e9s.","title":"\ud83d\udd39 Exp\u00e9rience pratique : nslookup"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#les-composants-materiels-dun-reseau","text":"Pour qu\u2019un r\u00e9seau fonctionne, plusieurs \u00e9l\u00e9ments mat\u00e9riels sont n\u00e9cessaires :","title":"Les composants mat\u00e9riels d\u2019un r\u00e9seau"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#1-machines","text":"Ce sont les appareils qui communiquent entre eux : Ordinateurs, tablettes, smartphones, consoles de jeu, serveurs. Elles envoient et re\u00e7oivent des donn\u00e9es via le r\u00e9seau.","title":"\ud83d\udcbb 1. Machines"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#2-switch","text":"Dispositif qui relie plusieurs machines localement dans un r\u00e9seau (LAN). Exemple : un switch dans une salle informatique permet aux ordinateurs de communiquer entre eux rapidement. Fonction : re\u00e7oit un paquet sur un port et l\u2019envoie uniquement au port correspondant \u00e0 la machine destinataire .","title":"\ud83d\udd00 2. Switch"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#3-routeur","text":"Permet de connecter un r\u00e9seau local \u00e0 Internet ou \u00e0 d\u2019autres r\u00e9seaux. Exemple : la box Internet \u00e0 la maison est un routeur. Fonction : acheminer les paquets entre les diff\u00e9rents r\u00e9seaux selon leur adresse IP.","title":"\ud83c\udf10 3. Routeur"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#4-supports-de-transmission","text":"Permettent de transporter physiquement les donn\u00e9es entre machines et \u00e9quipements r\u00e9seau. Types : C\u00e2bles Ethernet (filaire, stable et rapide) Wi-Fi (sans fil, pratique mais plus sensible aux interf\u00e9rences) Fibre optique (tr\u00e8s haut d\u00e9bit, longue distance)","title":"\ud83d\udce1 4. Supports de transmission"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#modele-en-couches-tcpip","text":"Le protocole TCP/IP organise la communication en 4 couches , chacune ayant un r\u00f4le sp\u00e9cifique : 1 Couche Application \ud83d\udcf1 Utilis\u00e9e par les logiciels : navigateur web, messagerie, jeux en ligne. Contient les donn\u00e9es utilisateur . 2 Couche Transport \ud83d\ude9b Assure le transport fiable des donn\u00e9es . Garantit que les paquets arrivent complets et dans le bon ordre (TCP). 3 Couche Internet \ud83d\uddfa\ufe0f G\u00e8re l\u2019adressage et le routage . D\u00e9termine le chemin optimal pour les paquets vers leur destination. 4 Couche Acc\u00e8s R\u00e9seau \ud83d\udd0c Assure la transmission physique des donn\u00e9es : signaux \u00e9lectriques, optiques ou radio. Utilise les supports de transmission (Ethernet, Wi-Fi, fibre).","title":"Mod\u00e8le en couches TCP/IP"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#encapsulation-et-desencapsulation","text":"Quand une machine envoie des donn\u00e9es : Les donn\u00e9es descendent les couches en se faisant encapsuler \u2192 chaque couche ajoute son en-t\u00eate . \ud83d\udcf1 Application : donn\u00e9es utilisateur \u2b07\ufe0f \ud83d\ude9b Transport : + en-t\u00eate TCP \u2b07\ufe0f \ud83d\uddfa\ufe0f Internet : + en-t\u00eate IP \u2b07\ufe0f \ud83d\udd0c Acc\u00e8s r\u00e9seau : + en-t\u00eate Ethernet \u00c0 la r\u00e9ception, les donn\u00e9es remontent les couches en se faisant d\u00e9sencapsuler \u2192 chaque couche retire son en-t\u00eate pour r\u00e9cup\u00e9rer les informations originales. \ud83d\udd0c Acc\u00e8s r\u00e9seau : - en-t\u00eate Ethernet \u2b06\ufe0f \ud83d\uddfa\ufe0f Internet : - en-t\u00eate IP \u2b06\ufe0f \ud83d\ude9b Transport : - en-t\u00eate TCP \u2b06\ufe0f \ud83d\udcf1 Application : donn\u00e9es utilisateur \ud83d\udca1 \u00c0 retenir : - L\u2019encapsulation permet \u00e0 chaque couche de g\u00e9rer ses propres fonctions sans se pr\u00e9occuper des autres. - La d\u00e9sencapsulation permet de reconstituer les donn\u00e9es correctement \u00e0 l\u2019arriv\u00e9e.","title":"Encapsulation et d\u00e9sencapsulation"},{"location":"Secondes/Chapitres/bases_python/","text":"SNT \u2014 Base de Python Une page d\u2019introduction pour d\u00e9buter en Python : afficher du texte avec print , utiliser des variables (les \u00ab bo\u00eetes nomm\u00e9es \u00bb) et demander une saisie clavier avec input() . print \u2014 afficher dans le terminal print() sert \u00e0 afficher un message ou une valeur \u00e0 l\u2019\u00e9cran (dans le terminal/console). Quand on veut utiliser des valeurs textuelles ( cha\u00eenes de caract\u00e8res ), on les \u00e9crit entre guillemets. Comme \u00e7a, le programme fait la diff\u00e9rence entre le code et les cha\u00eenes de caract\u00e8res. print(\"Bonjour\") print(2 + 3) message = \"Bienvenue en SNT !\" print(message) Ce programme affichera : Bonjour 5 Bienvenue en SNT ! Astuces On peut afficher plusieurs \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules : prenom = \"Ana\" age = 15 print(\"Je m'appelle\", prenom, \"et j'ai\", age, \"ans.\") Les variables \u2014 des bo\u00eetes nomm\u00e9es Une variable est comme une bo\u00eete avec un nom dans laquelle on range une valeur . On peut lire ou modifier cette valeur. a = 5 b = 10 c = a + b print(c) a = 3 print(c) c = a + b print(c) Ce programme affichera : 15 15 13 D\u00e9cortiquons-le : On a cr\u00e9\u00e9 3 variables. a = 5 b = 10 c = a + b = 15 Puis nous avons modifi\u00e9 la valeur de a par 3, d\u00e9sormais, a = 3 . Ce qui ne modifie pas la valeur de c , car ce que l'on stocke c'est la valeur et pas le calcul. Donc c = 15 . Si on veut que c soit de nouveau \u00e9gal \u00e0 a+b , il faut de nouveau le calculer : c = a + b . input \u2014 demander une valeur \u00e0 l\u2019utilisateur input() pose une question et r\u00e9cup\u00e8re une r\u00e9ponse au format texte . nom = input(\"Comment t appelles-tu ? \") print(nom) Ce programme affichera : Comment t appelles-tu ? Il faudra alors \u00e9crire notre pr\u00e9nom, par exemple Tom . La variable nom aura la valeur \"Tom\" . Il affichera ensuite : Tom En Python, print et input sont ce qu\u2019on appelle des fonctions . Comme en math\u00e9matiques, une fonction peut prendre des valeurs en entr\u00e9e et renvoyer un r\u00e9sultat . Exemple en math\u00e9matiques Soit la fonction : f(x) : 2x La fonction f prend en entr\u00e9e une valeur x . Elle renvoie en sortie le r\u00e9sultat du calcul 2x . En Python - print(...) prend en entr\u00e9e ce que l\u2019on veut afficher \u00e0 l\u2019\u00e9cran . - input(...) prend en entr\u00e9e un texte \u00e0 afficher (c\u2019est optionnel) et renvoie ce que l\u2019utilisateur tape au clavier . On met toujours des parenth\u00e8ses apr\u00e8s le nom d\u2019une fonction, m\u00eame si elle n\u2019a aucune valeur en entr\u00e9e .","title":"Bases de Python"},{"location":"Secondes/Chapitres/bases_python/#snt-base-de-python","text":"Une page d\u2019introduction pour d\u00e9buter en Python : afficher du texte avec print , utiliser des variables (les \u00ab bo\u00eetes nomm\u00e9es \u00bb) et demander une saisie clavier avec input() .","title":"SNT \u2014 Base de Python"},{"location":"Secondes/Chapitres/bases_python/#print-afficher-dans-le-terminal","text":"print() sert \u00e0 afficher un message ou une valeur \u00e0 l\u2019\u00e9cran (dans le terminal/console). Quand on veut utiliser des valeurs textuelles ( cha\u00eenes de caract\u00e8res ), on les \u00e9crit entre guillemets. Comme \u00e7a, le programme fait la diff\u00e9rence entre le code et les cha\u00eenes de caract\u00e8res. print(\"Bonjour\") print(2 + 3) message = \"Bienvenue en SNT !\" print(message) Ce programme affichera : Bonjour 5 Bienvenue en SNT ! Astuces On peut afficher plusieurs \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules : prenom = \"Ana\" age = 15 print(\"Je m'appelle\", prenom, \"et j'ai\", age, \"ans.\")","title":"print \u2014 afficher dans le terminal"},{"location":"Secondes/Chapitres/bases_python/#les-variables-des-boites-nommees","text":"Une variable est comme une bo\u00eete avec un nom dans laquelle on range une valeur . On peut lire ou modifier cette valeur. a = 5 b = 10 c = a + b print(c) a = 3 print(c) c = a + b print(c) Ce programme affichera : 15 15 13 D\u00e9cortiquons-le : On a cr\u00e9\u00e9 3 variables. a = 5 b = 10 c = a + b = 15 Puis nous avons modifi\u00e9 la valeur de a par 3, d\u00e9sormais, a = 3 . Ce qui ne modifie pas la valeur de c , car ce que l'on stocke c'est la valeur et pas le calcul. Donc c = 15 . Si on veut que c soit de nouveau \u00e9gal \u00e0 a+b , il faut de nouveau le calculer : c = a + b .","title":"Les variables \u2014 des bo\u00eetes nomm\u00e9es"},{"location":"Secondes/Chapitres/bases_python/#input-demander-une-valeur-a-lutilisateur","text":"input() pose une question et r\u00e9cup\u00e8re une r\u00e9ponse au format texte . nom = input(\"Comment t appelles-tu ? \") print(nom) Ce programme affichera : Comment t appelles-tu ? Il faudra alors \u00e9crire notre pr\u00e9nom, par exemple Tom . La variable nom aura la valeur \"Tom\" . Il affichera ensuite : Tom En Python, print et input sont ce qu\u2019on appelle des fonctions . Comme en math\u00e9matiques, une fonction peut prendre des valeurs en entr\u00e9e et renvoyer un r\u00e9sultat . Exemple en math\u00e9matiques Soit la fonction : f(x) : 2x La fonction f prend en entr\u00e9e une valeur x . Elle renvoie en sortie le r\u00e9sultat du calcul 2x . En Python - print(...) prend en entr\u00e9e ce que l\u2019on veut afficher \u00e0 l\u2019\u00e9cran . - input(...) prend en entr\u00e9e un texte \u00e0 afficher (c\u2019est optionnel) et renvoie ce que l\u2019utilisateur tape au clavier . On met toujours des parenth\u00e8ses apr\u00e8s le nom d\u2019une fonction, m\u00eame si elle n\u2019a aucune valeur en entr\u00e9e .","title":"input \u2014 demander une valeur \u00e0 l\u2019utilisateur"},{"location":"Terminales/Terminales/","text":"NSI - Terminales Chapitres \ud83d\udd39 1 - Programmation Orient\u00e9 Objet","title":"Accueil"},{"location":"Terminales/Terminales/#nsi-terminales","text":"","title":"NSI - Terminales"},{"location":"Terminales/Terminales/#chapitres","text":"\ud83d\udd39 1 - Programmation Orient\u00e9 Objet","title":"Chapitres"},{"location":"Terminales/Chapitres/POO/","text":"Programmation Orient\u00e9e Objet (POO) Introduction La programmation orient\u00e9e objet (POO) est une mani\u00e8re d\u2019organiser un programme en regroupant dans des structures appel\u00e9es classes \u00e0 la fois des donn\u00e9es (attributs) et les actions qui peuvent \u00eatre r\u00e9alis\u00e9es sur ces donn\u00e9es (m\u00e9thodes). Cette approche permet de repr\u00e9senter des concepts de mani\u00e8re claire et structur\u00e9e : chaque objet manipul\u00e9 dans le programme est une instance d\u2019une classe, c\u2019est-\u00e0-dire une version concr\u00e8te du mod\u00e8le d\u00e9fini. La POO facilite la lecture, la r\u00e9utilisation et l\u2019\u00e9volution du code, en rapprochant la logique du programme de la fa\u00e7on dont on d\u00e9crit et organise les choses dans la vie courante. \ud83d\udc49 Exemple concret : - Une classe est comme un mod\u00e8le ou un plan . - Une instance (objet) est un exemplaire concret de ce mod\u00e8le. Exemple La classe Stylo d\u00e9crit ce qu\u2019est un stylo en g\u00e9n\u00e9ral : une couleur d\u2019encre, une longueur, une marque\u2026 Les instances sont des stylos pr\u00e9cis : stylo1 : Bic bleu de 15 cm stylo2 : Pilot noir de 13 cm En Python, on \u00e9crira une classe Stylo , puis on cr\u00e9era plusieurs objets stylo1 , stylo2 , etc. \ud83d\udc49 \u00c0 retenir : Une classe est un mod\u00e8le, une instance est une utilisation concr\u00e8te de ce mod\u00e8le. \u00c9crire une classe en Python Exemple : un rectangle . class Rectangle: def __init__(self, largeur, hauteur): self.largeur = largeur # attribut self.hauteur = hauteur # attribut def aire(self): return self.largeur * self.hauteur # m\u00e9thode def perimetre(self): return 2 * (self.largeur + self.hauteur) # m\u00e9thode Cr\u00e9er une instance (objet) # Cr\u00e9ation de deux rectangles (instances) rect1 = Rectangle(5, 2) rect2 = Rectangle(10, 3) print(rect1.aire()) # 10 print(rect2.perimetre()) # 26 Rectangle est le plan (classe). rect1 et rect2 sont des rectangles concrets (instances). Chaque instance a ses propres valeurs d\u2019attributs. Acc\u00e9der aux attributs et m\u00e9thodes Attributs : print(rect1.largeur) # 5 print(rect2.hauteur) # 3 M\u00e9thodes print(rect1.aire()) # 10 print(rect2.perimetre()) # 26 Exemples suppl\u00e9mentaires class Livre: def __init__(self, titre, auteur, pages): self.titre = titre self.auteur = auteur self.pages = pages def resume(self): return f\"{self.titre}, \u00e9crit par {self.auteur} ({self.pages} pages)\" livre1 = Livre(\"1984\", \"George Orwell\", 328) print(livre1.resume()) # affiche : 1984, \u00e9crit par George Orwell (328 pages) class Animal: def __init__(self, nom, espece, age): self.nom = nom self.espece = espece self.age = age def presentation(self): return f\"Je suis {self.nom}, un {self.espece} de {self.age} ans.\" animal1 = Animal(\"Milo\", \"chat\", 3) animal2 = Animal(\"Rex\", \"chien\", 5) print(animal1.presentation()) # Je suis Milo, un chat de 3 ans. print(animal2.presentation()) # Je suis Rex, un chien de 5 ans. Exercice On veut repr\u00e9senter des livres en Python \u00e0 l\u2019aide de la programmation orient\u00e9e objet. \u00c9tape 1 : Cr\u00e9ation de la classe \u00c9crire une classe Livre qui poss\u00e8de : - trois attributs : titre , auteur , genre - une m\u00e9thode resume() qui renvoie une cha\u00eene de caract\u00e8res sous la forme : \"Titre (Auteur) - genre\" \u00c9tape 2 : Cr\u00e9ation d\u2019instances Choisissez au moins 3 livres que vous aimez, et pour chacun d'eux creer une instance de la classe 'Livre'. \u00c9tape 3 : Manipulation des objets Afficher le r\u00e9sum\u00e9 de chaque livre en utilisant la m\u00e9thode resume() . Acc\u00e9der directement \u00e0 l\u2019attribut titre du premier livre et l\u2019afficher. Modifier l\u2019attribut genre du deuxi\u00e8me livre (par exemple, remplacer \"roman\" par \"science-fiction\" ) puis afficher \u00e0 nouveau son r\u00e9sum\u00e9 pour v\u00e9rifier le changement. Ranger les trois livres dans une liste bibliotheque , puis parcourir la liste pour afficher le r\u00e9sum\u00e9 de chaque livre. \u00c9tape 4 : Personnalisation Ajoutez une nouvelle m\u00e9thode est_du_genre(self, genre_recherche) qui renvoie True si le livre appartient au genre demand\u00e9, et False sinon. Testez-la en v\u00e9rifiant si vos livres appartiennent au genre \"science-fiction\" . \u00c9tape 5 : Implication personnelle Dans la liste bibliotheque , \u00e9crivez une boucle qui affiche uniquement les livres d\u2019un genre que vous aimez . (par exemple, tous les \"fantasy\" ou \"roman\" ) Ajoutez un quatri\u00e8me livre que vous n\u2019aimez pas. Puis affichez tous les livres, mais en marquant ceux que vous n\u2019aimez pas avec la mention \"(rejet\u00e9)\" . \u00c9tape 6 : Cr\u00e9ativit\u00e9 Imaginez une nouvelle m\u00e9thode pour la classe Livre . Quelques id\u00e9es possibles : - changer_titre(self, nouveau_titre) pour modifier le titre - presentation_longue(self) qui donne une description plus d\u00e9taill\u00e9e - est_du_meme_auteur(self, autre_livre) qui compare deux livres Impl\u00e9mentez la m\u00e9thode de votre choix, puis testez-la avec vos objets.","title":"Programmation Orient\u00e9e Objet"},{"location":"Terminales/Chapitres/POO/#programmation-orientee-objet-poo","text":"","title":"Programmation Orient\u00e9e Objet (POO)"},{"location":"Terminales/Chapitres/POO/#introduction","text":"La programmation orient\u00e9e objet (POO) est une mani\u00e8re d\u2019organiser un programme en regroupant dans des structures appel\u00e9es classes \u00e0 la fois des donn\u00e9es (attributs) et les actions qui peuvent \u00eatre r\u00e9alis\u00e9es sur ces donn\u00e9es (m\u00e9thodes). Cette approche permet de repr\u00e9senter des concepts de mani\u00e8re claire et structur\u00e9e : chaque objet manipul\u00e9 dans le programme est une instance d\u2019une classe, c\u2019est-\u00e0-dire une version concr\u00e8te du mod\u00e8le d\u00e9fini. La POO facilite la lecture, la r\u00e9utilisation et l\u2019\u00e9volution du code, en rapprochant la logique du programme de la fa\u00e7on dont on d\u00e9crit et organise les choses dans la vie courante. \ud83d\udc49 Exemple concret : - Une classe est comme un mod\u00e8le ou un plan . - Une instance (objet) est un exemplaire concret de ce mod\u00e8le. Exemple La classe Stylo d\u00e9crit ce qu\u2019est un stylo en g\u00e9n\u00e9ral : une couleur d\u2019encre, une longueur, une marque\u2026 Les instances sont des stylos pr\u00e9cis : stylo1 : Bic bleu de 15 cm stylo2 : Pilot noir de 13 cm En Python, on \u00e9crira une classe Stylo , puis on cr\u00e9era plusieurs objets stylo1 , stylo2 , etc. \ud83d\udc49 \u00c0 retenir : Une classe est un mod\u00e8le, une instance est une utilisation concr\u00e8te de ce mod\u00e8le.","title":"Introduction"},{"location":"Terminales/Chapitres/POO/#ecrire-une-classe-en-python","text":"Exemple : un rectangle . class Rectangle: def __init__(self, largeur, hauteur): self.largeur = largeur # attribut self.hauteur = hauteur # attribut def aire(self): return self.largeur * self.hauteur # m\u00e9thode def perimetre(self): return 2 * (self.largeur + self.hauteur) # m\u00e9thode","title":"\u00c9crire une classe en Python"},{"location":"Terminales/Chapitres/POO/#creer-une-instance-objet","text":"# Cr\u00e9ation de deux rectangles (instances) rect1 = Rectangle(5, 2) rect2 = Rectangle(10, 3) print(rect1.aire()) # 10 print(rect2.perimetre()) # 26 Rectangle est le plan (classe). rect1 et rect2 sont des rectangles concrets (instances). Chaque instance a ses propres valeurs d\u2019attributs.","title":"Cr\u00e9er une instance (objet)"},{"location":"Terminales/Chapitres/POO/#acceder-aux-attributs-et-methodes","text":"Attributs : print(rect1.largeur) # 5 print(rect2.hauteur) # 3 M\u00e9thodes print(rect1.aire()) # 10 print(rect2.perimetre()) # 26","title":"Acc\u00e9der aux attributs et m\u00e9thodes"},{"location":"Terminales/Chapitres/POO/#exemples-supplementaires","text":"class Livre: def __init__(self, titre, auteur, pages): self.titre = titre self.auteur = auteur self.pages = pages def resume(self): return f\"{self.titre}, \u00e9crit par {self.auteur} ({self.pages} pages)\" livre1 = Livre(\"1984\", \"George Orwell\", 328) print(livre1.resume()) # affiche : 1984, \u00e9crit par George Orwell (328 pages) class Animal: def __init__(self, nom, espece, age): self.nom = nom self.espece = espece self.age = age def presentation(self): return f\"Je suis {self.nom}, un {self.espece} de {self.age} ans.\" animal1 = Animal(\"Milo\", \"chat\", 3) animal2 = Animal(\"Rex\", \"chien\", 5) print(animal1.presentation()) # Je suis Milo, un chat de 3 ans. print(animal2.presentation()) # Je suis Rex, un chien de 5 ans. Exercice On veut repr\u00e9senter des livres en Python \u00e0 l\u2019aide de la programmation orient\u00e9e objet.","title":"Exemples suppl\u00e9mentaires"},{"location":"Terminales/Chapitres/POO/#etape-1-creation-de-la-classe","text":"\u00c9crire une classe Livre qui poss\u00e8de : - trois attributs : titre , auteur , genre - une m\u00e9thode resume() qui renvoie une cha\u00eene de caract\u00e8res sous la forme : \"Titre (Auteur) - genre\"","title":"\u00c9tape 1 : Cr\u00e9ation de la classe"},{"location":"Terminales/Chapitres/POO/#etape-2-creation-dinstances","text":"Choisissez au moins 3 livres que vous aimez, et pour chacun d'eux creer une instance de la classe 'Livre'.","title":"\u00c9tape 2 : Cr\u00e9ation d\u2019instances"},{"location":"Terminales/Chapitres/POO/#etape-3-manipulation-des-objets","text":"Afficher le r\u00e9sum\u00e9 de chaque livre en utilisant la m\u00e9thode resume() . Acc\u00e9der directement \u00e0 l\u2019attribut titre du premier livre et l\u2019afficher. Modifier l\u2019attribut genre du deuxi\u00e8me livre (par exemple, remplacer \"roman\" par \"science-fiction\" ) puis afficher \u00e0 nouveau son r\u00e9sum\u00e9 pour v\u00e9rifier le changement. Ranger les trois livres dans une liste bibliotheque , puis parcourir la liste pour afficher le r\u00e9sum\u00e9 de chaque livre.","title":"\u00c9tape 3 : Manipulation des objets"},{"location":"Terminales/Chapitres/POO/#etape-4-personnalisation","text":"Ajoutez une nouvelle m\u00e9thode est_du_genre(self, genre_recherche) qui renvoie True si le livre appartient au genre demand\u00e9, et False sinon. Testez-la en v\u00e9rifiant si vos livres appartiennent au genre \"science-fiction\" .","title":"\u00c9tape 4 : Personnalisation"},{"location":"Terminales/Chapitres/POO/#etape-5-implication-personnelle","text":"Dans la liste bibliotheque , \u00e9crivez une boucle qui affiche uniquement les livres d\u2019un genre que vous aimez . (par exemple, tous les \"fantasy\" ou \"roman\" ) Ajoutez un quatri\u00e8me livre que vous n\u2019aimez pas. Puis affichez tous les livres, mais en marquant ceux que vous n\u2019aimez pas avec la mention \"(rejet\u00e9)\" .","title":"\u00c9tape 5 : Implication personnelle"},{"location":"Terminales/Chapitres/POO/#etape-6-creativite","text":"Imaginez une nouvelle m\u00e9thode pour la classe Livre . Quelques id\u00e9es possibles : - changer_titre(self, nouveau_titre) pour modifier le titre - presentation_longue(self) qui donne une description plus d\u00e9taill\u00e9e - est_du_meme_auteur(self, autre_livre) qui compare deux livres Impl\u00e9mentez la m\u00e9thode de votre choix, puis testez-la avec vos objets.","title":"\u00c9tape 6 : Cr\u00e9ativit\u00e9"}]}