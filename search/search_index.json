{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue ! Bienvenue sur TAQ , le site d\u00e9di\u00e9 aux cours de NSI (Num\u00e9rique et Sciences Informatiques) et SNT (Sciences Num\u00e9riques et Technologie) de M.Quertier. \u00c0 propos des mati\u00e8res NSI (Num\u00e9rique et Sciences Informatiques) : Cette mati\u00e8re est destin\u00e9e aux \u00e9l\u00e8ves de Premi\u00e8re et Terminale. Elle permet de d\u00e9couvrir la programmation, les structures de donn\u00e9es, les algorithmes et la logique informatique. L\u2019objectif est de d\u00e9velopper la capacit\u00e9 \u00e0 r\u00e9soudre des probl\u00e8mes avec les outils num\u00e9riques . SNT (Sciences Num\u00e9riques et Technologie) : Cette mati\u00e8re est enseign\u00e9e en Seconde et permet d\u2019explorer les grands concepts du num\u00e9rique : r\u00e9seaux, web, donn\u00e9es, cybers\u00e9curit\u00e9, algorithmes et objets connect\u00e9s. L\u2019objectif est de comprendre le fonctionnement du monde num\u00e9rique qui nous entoure . Organisation du site Ce site centralise tous vos cours pour chaque niveau : \ud83d\udd39 SNT - Secondes \ud83d\udd38 NSI - Premi\u00e8res \ud83d\udd3a NSI - Terminales","title":"Accueil"},{"location":"#bienvenue","text":"Bienvenue sur TAQ , le site d\u00e9di\u00e9 aux cours de NSI (Num\u00e9rique et Sciences Informatiques) et SNT (Sciences Num\u00e9riques et Technologie) de M.Quertier.","title":"Bienvenue !"},{"location":"#a-propos-des-matieres","text":"NSI (Num\u00e9rique et Sciences Informatiques) : Cette mati\u00e8re est destin\u00e9e aux \u00e9l\u00e8ves de Premi\u00e8re et Terminale. Elle permet de d\u00e9couvrir la programmation, les structures de donn\u00e9es, les algorithmes et la logique informatique. L\u2019objectif est de d\u00e9velopper la capacit\u00e9 \u00e0 r\u00e9soudre des probl\u00e8mes avec les outils num\u00e9riques . SNT (Sciences Num\u00e9riques et Technologie) : Cette mati\u00e8re est enseign\u00e9e en Seconde et permet d\u2019explorer les grands concepts du num\u00e9rique : r\u00e9seaux, web, donn\u00e9es, cybers\u00e9curit\u00e9, algorithmes et objets connect\u00e9s. L\u2019objectif est de comprendre le fonctionnement du monde num\u00e9rique qui nous entoure .","title":"\u00c0 propos des mati\u00e8res"},{"location":"#organisation-du-site","text":"Ce site centralise tous vos cours pour chaque niveau : \ud83d\udd39 SNT - Secondes \ud83d\udd38 NSI - Premi\u00e8res \ud83d\udd3a NSI - Terminales","title":"Organisation du site"},{"location":"Premieres/Premieres/","text":"NSI - Premi\u00e8res Chapitres \ud83d\udd39 1 - Types de base","title":"Accueil"},{"location":"Premieres/Premieres/#nsi-premieres","text":"","title":"NSI - Premi\u00e8res"},{"location":"Premieres/Premieres/#chapitres","text":"\ud83d\udd39 1 - Types de base","title":"Chapitres"},{"location":"Premieres/Chapitres/Types_de_base/","text":"Types de base Entier positif Le d\u00e9cimal Depuis toujours, nous utilisons la base 10, s\u00fbrement parce que nous avons\u2026 10 doigts. C'est ce que l'on appelle le syst\u00e8me d\u00e9cimal , car nous utilisons 10 chiffres (de 0 \u00e0 9) pour repr\u00e9senter toutes les valeurs. Dans un nombre d\u00e9cimal, chaque position correspond \u00e0 une puissance de 10, de droite \u00e0 gauche. \\(10^3\\) \\(10^2\\) \\(10^1\\) \\(10^0\\) \\(2025_{10}\\) 2 0 2 5 \\[ 2025_{10} = 2 \\times 10^3 + 0 \\times 10^2 + 2 \\times 10^1 + 5 \\times 10^0 \\] \\[ = 2 \\times 1000 + 0 \\times 100 + 2 \\times 10 + 5 \\times 1 \\] Rappel sur les puissances Une puissance est une fa\u00e7on d\u2019\u00e9crire une multiplication r\u00e9p\u00e9t\u00e9e. \\( a^n \\) se lit \u00ab\u202fa puissance n\u202f\u00bb et signifie que l\u2019on multiplie \\(a\\) par lui-m\u00eame \\(n\\) fois : $$ a^n = \\underbrace{a \\times a \\times \\dots \\times a}_{n \\text{ fois}} $$ exemples \\( 2^3 = 2 \\times 2 \\times 2 = 8 \\) \\( 5^0 = 1 \\) (par convention, toute base non nulle \u00e0 la puissance 0 vaut 1) \\( 10^4 = 10 \\times 10 \\times 10 \\times 10 = 10000 \\) Le binaire L\u2019ordinateur utilise la base 2, appel\u00e9e binaire , car les composants \u00e9lectroniques ne peuvent traiter que deux \u00e9tats : - 1 : pr\u00e9sence d\u2019une tension \u00e9lectrique - 0 : absence de tension \u00e9lectrique Il a donc fallu repr\u00e9senter toutes les informations en binaire. Dans ce syst\u00e8me, il n\u2019existe que deux symboles : 0 et 1, que l\u2019on appelle des bits (contraction de binary digit). Chaque position dans un nombre binaire correspond \u00e0 une puissance de 2 , de droite \u00e0 gauche. exemple Prenons le nombre binaire : \\(1011_2\\) On peut le d\u00e9composer en puissances de 2 : \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(1011_2\\) 1 0 1 1 Et le convertir en d\u00e9cimal : \\[ 1011_2 = 1 \\times 2^3 + 0 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0 \\] \\[ = 2^3 + 2^1 + 2^0 \\] \\[ = 8 + 2 + 1 \\] \\[ = 11 \\] donc \\(1011_{2} = 11_{10}\\) Exercice Convertir en d\u00e9cimal, ces valeurs binaires : \\(110010_{2}\\) \\(1100100_{2}\\) \\(100100101_{2}\\) Conversion du d\u00e9cimal vers le binaire On utilise la M\u00e9thode des divisions successives On divise le nombre par 2 . On note le reste (0 ou 1). On recommence avec le quotient , jusqu\u2019\u00e0 obtenir 0. Le nombre binaire est obtenu en lisant les restes de bas en haut . exemple Repr\u00e9sentons la valeur \\(50_{10}\\) en binaire. 50 / 2 = 25 reste 0 25 / 2 = 12 reste 1 12 / 2 = 6 reste 0 6 / 2 = 3 reste 0 3 / 2 = 1 reste 1 1 / 2 = 0 reste 1 donc \\(50_{10} = 110010_{2}\\) Exercice Convertir en binaire, ces valeurs d\u00e9cimales : \\(2025_{10}\\) \\(4050_{10}\\) \\(59400_{10}\\) L\u2019hexad\u00e9cimal Un autre syst\u00e8me de num\u00e9ration tr\u00e8s utilis\u00e9 en informatique est la base 16 , appel\u00e9e hexad\u00e9cimal . Pourquoi ? Parce qu\u2019il est plus compact que le binaire : au lieu de manipuler des suites tr\u00e8s longues de 0 et 1, on peut les regrouper par 4 bits (4 chiffres binaires) et les \u00e9crire avec un seul chiffre hexad\u00e9cimal. Les chiffres en base 16 La base 16 utilise 16 symboles diff\u00e9rents : - de 0 \u00e0 9 (comme en d\u00e9cimal) - puis les lettres A, B, C, D, E, F pour repr\u00e9senter les valeurs 10 \u00e0 15. D\u00e9cimal Hexad\u00e9cimal 10 A 11 B 12 C 13 D 14 E 15 F exemple \\(16^1\\) \\(16^0\\) \\(A2_{16}\\) A (= 10) 2 \\[ A2_{16} = 10 \\times 16^1 + 2 \\times 16^0 \\] \\[ = 160 + 2 \\] \\[ = 162_{10} \\] Lien entre binaire et hexad\u00e9cimal Chaque chiffre hexad\u00e9cimal correspond \u00e0 4 bits (car \\(2^4 = 16\\) ). Hexa 0 1 2 3 4 5 6 7 Binaire 0000 0001 0010 0011 0100 0101 0110 0111 Hexa 8 9 A B C D E F Binaire 1000 1001 1010 1011 1100 1101 1110 1111 Cela permet de convertir facilement du binaire en hexad\u00e9cimal en regroupant les bits par paquets de 4. exemple \\(111011_{2}\\) On regroupe par 4 bits (en partant de la droite) : 0011 1011 3 B Donc \\(111011_2 = 3B_{16}\\) Exercice Convertir en d\u00e9cimal : \\(FF_{16}\\) \\(1A3_{16}\\) Convertir en binaire : \\(7C4_{16}\\) \\(FADA_{16}\\) Convertir en hexad\u00e9cimal : \\(1999_{10}\\) \\(59400_{10}\\) \\(111100_{2}\\) \\(110100101111_{2}\\) Entier relatif Jusqu\u2019ici, nous avons vu la repr\u00e9sentation des entiers positifs . Mais il faut aussi repr\u00e9senter les entiers relatifs (positifs et n\u00e9gatifs). Nombre de bits n\u00e9cessaires En binaire, la taille d\u2019un entier est d\u00e9termin\u00e9e par le nombre de bits utilis\u00e9s. Avec n bits, on peut repr\u00e9senter au maximum : \\[ 0 \\; \\leqslant \\; N \\; < \\; 2^n \\] Exemple : - avec 8 bits (1 octet), on peut repr\u00e9senter 256 valeurs distinctes (de 0 \u00e0 255). - avec 16 bits , on peut repr\u00e9senter 65 536 valeurs (de 0 \u00e0 65 535). Les tailles courantes Les tailles les plus utilis\u00e9es en informatique sont : 8 bits (1 octet) 16 bits (2 octets) 32 bits (4 octets) 64 bits (8 octets) Chaque taille limite l\u2019intervalle de valeurs possibles. Questions Combien de valeurs diff\u00e9rentes peut-on repr\u00e9senter avec : 1. 5 bits ? 2. 10 bits ? 3. 32 bits ? Premi\u00e8re id\u00e9e : utiliser un bit de signe Une premi\u00e8re id\u00e9e consiste \u00e0 r\u00e9server le bit de poids fort (le plus \u00e0 gauche) pour indiquer le signe : - 0 \u2192 nombre positif - 1 \u2192 nombre n\u00e9gatif On aurait alors les repr\u00e9sentations suivantes sur 3 bits : n\u00e9gatif positif 0 100 000 1 101 001 2 110 010 3 111 011 Probl\u00e8mes de cette m\u00e9thode Deux repr\u00e9sentations pour la valeur 0. Cela introduit une incoh\u00e9rence et gaspille une combinaison binaire. Addition incorrecte Exemple avec \\( 5 + (-5) \\) sur 8 bits: \\(00000101_2 + 10000101_2 = 10001010_2\\) C'est \u00e0 dire \\(5 - 5 = - 10\\) , ce qui est \u00e9videmment faux ! Il faut donc trouver une autre m\u00e9thode. Exercice - Donner les repr\u00e9sentations binaires des valeurs entre -5 et 5 sur 4 bits. - Donner les repr\u00e9sentations binaires des valeurs -67 sur 8 bits. Solution : le compl\u00e9ment \u00e0 2 Pour corriger ces probl\u00e8mes, on utilise la m\u00e9thode du compl\u00e9ment \u00e0 2 . L\u2019id\u00e9e est comparable \u00e0 un compteur : - Si on compte en arri\u00e8re depuis 0 , on obtient directement le dernier nombre possible. - Exemple en base d\u00e9cimale avec deux chiffres : apr\u00e8s 00 , si on soustrait 1, on tombe sur 99 , puis 98 , etc. De la m\u00eame mani\u00e8re, en binaire, on utilise le \"rebouclage\" naturel des bits pour coder les nombres n\u00e9gatifs. n\u00e9gatif positif 0 000 1 111 001 2 110 010 3 101 011 4 100 M\u00e9thode de construction La m\u00e9thode est simple : Pour repr\u00e9senter un nombre n\u00e9gatif, on \u00e9crit en binaire sa valeur absolue, on inverse ensuite tous les bits, puis on ajoute 1. Exemple Imaginons que nous codions sur 4 bits. Nous voulons repr\u00e9senter la valeur -5. \\(5_{10} = 101_2\\) sur 4 bits : \\(0101_2\\) inversion des bits : \\(1010_2\\) +1 \u2192 \\(1011_2\\) Sur 4 bits, on r\u00e9presente donc -5 comme ceci : \\(1011_2\\) . Exercice Coder en compl\u00e9ment \u00e0 2 sur 4 bits les valeurs entre -5 et 5 sur 4 bits. Cette fois-ci l'addition fonctionne : Exemple Essayons de nouveau \\(5 + (-5)\\) sur 8 bits, c'est \u00e0 dire : \\(00000101_2 + 11111011_2\\) retenue 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 + 1 1 1 1 1 1 0 1 1 = 1 0 0 0 0 0 0 0 0 0 On obtient alors : \\(100000000_2\\) , or nous sommes sur 8 bits donc on a bien : \\(5_{10} + (-5_{10}) = 00000101_2 + 11111011_2 = 00000000_2 = 0_{10}\\) Exercice V\u00e9rifier \u00e0 la main les additions suivantes en compl\u00e9ment \u00e0 2 (sur 4 bits) : 1. \\(2 + (-2)\\) 2. \\(3 + (-1)\\) 3. \\(-3 + (-2)\\) Exercice Donner l\u2019intervalle des entiers repr\u00e9sentables avec : 1. 8 bits non sign\u00e9s 2. 8 bits avec bit de signe 3. 8 bits en compl\u00e9ment \u00e0 2 R\u00e9el Contrairement aux entiers, les nombres r\u00e9els peuvent avoir une partie fractionnaire . Pour les repr\u00e9senter en informatique, on utilise le format nombre \u00e0 virgule flottante ( floating point ). Conversion d\u00e9cimal vers binaire Prenons \\(6.34375_{10}\\) On peut s\u00e9parer cette valeur en deux : - la partie enti\u00e9re : 6 - la partie fractionnaire : 0.34375 On sait d\u00e9ja transformer les valeurs enti\u00e9re : \\(6_{10} = 110_2\\) Pour la partie fractionnaire, \u00e0 l'inverse, on va effectuer des multiplications successives : On multiplie notre valeur par 2. Puis on recommence avec la partie fractionnaire du resultat. Et ainsi de suite jusqu'\u00e0 ce que le resultat soit une valeur enti\u00e9re. \\(0.34375 \\times 2 = 0.6875\\) \\(0.6875 \\times 2 = 1.375\\) \\(0.375 \\times 2 = 0.75\\) \\(0.75 \\times 2 = 1.5\\) \\(0.5 \\times 2 = 1\\) Pour finir on regarde les valeurs enti\u00e9res des resultats de haut en bas. On a donc comme partie fractionnaire : \\(0.01011_2\\) . Pour finir, il nous suffit d'additionner nos deux r\u00e9sultats : \\(6.34375_{10} = 110.01011_2\\) . Conversion binaire vers d\u00e9cimal Ici, nous utiliserons la m\u00eame m\u00e9thode que pour les valeurs enti\u00e9res. Les bits de la partie fractionnaire correspondent \u00e0 des puissances n\u00e9gatives. Reprenons notre r\u00e9sultat pr\u00e9c\u00e9dent : \\(110.01011_2\\) . \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(2^{-1}\\) \\(2^{-2}\\) \\(2^{-3}\\) \\(2^{-4}\\) \\(2^{-5}\\) 1 1 0 0 1 0 1 1 Pour retrouver notre valeur d\u00e9cimal nous pouvons effectuer ce calcul : $$ 2^2 + 2^1 + 2^{-2}+ 2^{-4}+ 2^{-5} = $$ $$4 + 2 + 0.25 + 0.0625 + 0.03125 = 6.34375 $$ Rappel sur les puissances Une puissance n\u00e9gative permet de repr\u00e9senter la division r\u00e9p\u00e9t\u00e9e . Pour tout nombre non nul \\(a\\) et tout entier \\(n > 0\\) : $$ a^{-n} = \\frac{1}{a^n} $$ Autrement dit, \\(a^{-n}\\) est l'inverse de \\(a^n\\) . \\(2^-1\\) \\(2^-2\\) \\(2^-3\\) \\(2^-4\\) \\(2^-5\\) \\(2^-6\\) \\(2^-7\\) \\(\\frac{1}{2^1}\\) \\(\\frac{1}{2^2}\\) \\(\\frac{1}{2^3}\\) \\(\\frac{1}{2^4}\\) \\(\\frac{1}{2^5}\\) \\(\\frac{1}{2^6}\\) \\(\\frac{1}{2^7}\\) \\(\\frac{1}{2}\\) \\(\\frac{1}{4}\\) \\(\\frac{1}{8}\\) \\(\\frac{1}{16}\\) \\(\\frac{1}{32}\\) \\(\\frac{1}{64}\\) \\(\\frac{1}{128}\\) \\(0.5\\) \\(0.25\\) \\(0.125\\) \\(0.0625\\) \\(0.03125\\) \\(0.015625\\) \\(0.0078125\\) Exemples \\(2^{-3} = \\frac{1}{2^3} = \\frac{1}{8} = 0.125\\) \\(5^{-2} = \\frac{1}{5^2} = \\frac{1}{25} = 0.04\\) \\(10^{-4} = \\frac{1}{10^4} = \\frac{1}{10000} = 0.0001\\) La norme IEEE 754 La norme IEEE 754 d\u00e9finit comment repr\u00e9senter un r\u00e9el sur un nombre fini de bits. Elle utilise trois composants : Signe (1 bit) : 0 \u2192 positif, 1 \u2192 n\u00e9gatif Exposant : encode la puissance de 2 Mantisse (ou fraction) : encode les chiffres significatifs Le nombre r\u00e9el est donc repr\u00e9sent\u00e9 comme : \\[ x = (-1)^{\\text{signe}} \\times 1.\\text{mantisse} \\times 2^{\\text{exposant}-\\text{biais}} \\] Le biais est un nombre ajout\u00e9 pour que l\u2019exposant puisse \u00eatre positif ou n\u00e9gatif. La mantisse permet de repr\u00e9senter les chiffres significatifs. Propri\u00e9t\u00e9s importantes Certains nombres ne peuvent pas \u00eatre repr\u00e9sent\u00e9s exactement. Exemple : \\(0.1_{10}\\) n\u2019a pas de repr\u00e9sentation binaire exacte. Les erreurs d\u2019arrondi peuvent s\u2019accumuler lors des calculs. Il ne faut jamais tester l\u2019\u00e9galit\u00e9 de deux flottants avec == . Exemples \\(0.25_{10} = 0.01_2\\) exactement \\(0.1_{10}\\) = une suite infinie en binaire \u2192 approximation \\(1/3_{10} \\approx 0.3333...\\) \u2192 approximation Exercices Convertir les nombres suivants en binaire flottant (approximatif sur 8 bits de mantisse) : 0.1 0.25 1/3 V\u00e9rifier pourquoi 0.2 + 0.1 != 0.3 en Python ou en pseudo-code.","title":"Types de base"},{"location":"Premieres/Chapitres/Types_de_base/#types-de-base","text":"","title":"Types de base"},{"location":"Premieres/Chapitres/Types_de_base/#entier-positif","text":"","title":"Entier positif"},{"location":"Premieres/Chapitres/Types_de_base/#le-decimal","text":"Depuis toujours, nous utilisons la base 10, s\u00fbrement parce que nous avons\u2026 10 doigts. C'est ce que l'on appelle le syst\u00e8me d\u00e9cimal , car nous utilisons 10 chiffres (de 0 \u00e0 9) pour repr\u00e9senter toutes les valeurs. Dans un nombre d\u00e9cimal, chaque position correspond \u00e0 une puissance de 10, de droite \u00e0 gauche. \\(10^3\\) \\(10^2\\) \\(10^1\\) \\(10^0\\) \\(2025_{10}\\) 2 0 2 5 \\[ 2025_{10} = 2 \\times 10^3 + 0 \\times 10^2 + 2 \\times 10^1 + 5 \\times 10^0 \\] \\[ = 2 \\times 1000 + 0 \\times 100 + 2 \\times 10 + 5 \\times 1 \\] Rappel sur les puissances Une puissance est une fa\u00e7on d\u2019\u00e9crire une multiplication r\u00e9p\u00e9t\u00e9e. \\( a^n \\) se lit \u00ab\u202fa puissance n\u202f\u00bb et signifie que l\u2019on multiplie \\(a\\) par lui-m\u00eame \\(n\\) fois : $$ a^n = \\underbrace{a \\times a \\times \\dots \\times a}_{n \\text{ fois}} $$ exemples \\( 2^3 = 2 \\times 2 \\times 2 = 8 \\) \\( 5^0 = 1 \\) (par convention, toute base non nulle \u00e0 la puissance 0 vaut 1) \\( 10^4 = 10 \\times 10 \\times 10 \\times 10 = 10000 \\)","title":"Le d\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base/#le-binaire","text":"L\u2019ordinateur utilise la base 2, appel\u00e9e binaire , car les composants \u00e9lectroniques ne peuvent traiter que deux \u00e9tats : - 1 : pr\u00e9sence d\u2019une tension \u00e9lectrique - 0 : absence de tension \u00e9lectrique Il a donc fallu repr\u00e9senter toutes les informations en binaire. Dans ce syst\u00e8me, il n\u2019existe que deux symboles : 0 et 1, que l\u2019on appelle des bits (contraction de binary digit). Chaque position dans un nombre binaire correspond \u00e0 une puissance de 2 , de droite \u00e0 gauche. exemple Prenons le nombre binaire : \\(1011_2\\) On peut le d\u00e9composer en puissances de 2 : \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(1011_2\\) 1 0 1 1 Et le convertir en d\u00e9cimal : \\[ 1011_2 = 1 \\times 2^3 + 0 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0 \\] \\[ = 2^3 + 2^1 + 2^0 \\] \\[ = 8 + 2 + 1 \\] \\[ = 11 \\] donc \\(1011_{2} = 11_{10}\\) Exercice Convertir en d\u00e9cimal, ces valeurs binaires : \\(110010_{2}\\) \\(1100100_{2}\\) \\(100100101_{2}\\)","title":"Le binaire"},{"location":"Premieres/Chapitres/Types_de_base/#conversion-du-decimal-vers-le-binaire","text":"On utilise la M\u00e9thode des divisions successives On divise le nombre par 2 . On note le reste (0 ou 1). On recommence avec le quotient , jusqu\u2019\u00e0 obtenir 0. Le nombre binaire est obtenu en lisant les restes de bas en haut . exemple Repr\u00e9sentons la valeur \\(50_{10}\\) en binaire. 50 / 2 = 25 reste 0 25 / 2 = 12 reste 1 12 / 2 = 6 reste 0 6 / 2 = 3 reste 0 3 / 2 = 1 reste 1 1 / 2 = 0 reste 1 donc \\(50_{10} = 110010_{2}\\) Exercice Convertir en binaire, ces valeurs d\u00e9cimales : \\(2025_{10}\\) \\(4050_{10}\\) \\(59400_{10}\\)","title":"Conversion du d\u00e9cimal vers le binaire"},{"location":"Premieres/Chapitres/Types_de_base/#lhexadecimal","text":"Un autre syst\u00e8me de num\u00e9ration tr\u00e8s utilis\u00e9 en informatique est la base 16 , appel\u00e9e hexad\u00e9cimal . Pourquoi ? Parce qu\u2019il est plus compact que le binaire : au lieu de manipuler des suites tr\u00e8s longues de 0 et 1, on peut les regrouper par 4 bits (4 chiffres binaires) et les \u00e9crire avec un seul chiffre hexad\u00e9cimal.","title":"L\u2019hexad\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base/#les-chiffres-en-base-16","text":"La base 16 utilise 16 symboles diff\u00e9rents : - de 0 \u00e0 9 (comme en d\u00e9cimal) - puis les lettres A, B, C, D, E, F pour repr\u00e9senter les valeurs 10 \u00e0 15. D\u00e9cimal Hexad\u00e9cimal 10 A 11 B 12 C 13 D 14 E 15 F exemple \\(16^1\\) \\(16^0\\) \\(A2_{16}\\) A (= 10) 2 \\[ A2_{16} = 10 \\times 16^1 + 2 \\times 16^0 \\] \\[ = 160 + 2 \\] \\[ = 162_{10} \\]","title":"Les chiffres en base 16"},{"location":"Premieres/Chapitres/Types_de_base/#lien-entre-binaire-et-hexadecimal","text":"Chaque chiffre hexad\u00e9cimal correspond \u00e0 4 bits (car \\(2^4 = 16\\) ). Hexa 0 1 2 3 4 5 6 7 Binaire 0000 0001 0010 0011 0100 0101 0110 0111 Hexa 8 9 A B C D E F Binaire 1000 1001 1010 1011 1100 1101 1110 1111 Cela permet de convertir facilement du binaire en hexad\u00e9cimal en regroupant les bits par paquets de 4. exemple \\(111011_{2}\\) On regroupe par 4 bits (en partant de la droite) : 0011 1011 3 B Donc \\(111011_2 = 3B_{16}\\) Exercice Convertir en d\u00e9cimal : \\(FF_{16}\\) \\(1A3_{16}\\) Convertir en binaire : \\(7C4_{16}\\) \\(FADA_{16}\\) Convertir en hexad\u00e9cimal : \\(1999_{10}\\) \\(59400_{10}\\) \\(111100_{2}\\) \\(110100101111_{2}\\)","title":"Lien entre binaire et hexad\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base/#entier-relatif","text":"Jusqu\u2019ici, nous avons vu la repr\u00e9sentation des entiers positifs . Mais il faut aussi repr\u00e9senter les entiers relatifs (positifs et n\u00e9gatifs).","title":"Entier relatif"},{"location":"Premieres/Chapitres/Types_de_base/#nombre-de-bits-necessaires","text":"En binaire, la taille d\u2019un entier est d\u00e9termin\u00e9e par le nombre de bits utilis\u00e9s. Avec n bits, on peut repr\u00e9senter au maximum : \\[ 0 \\; \\leqslant \\; N \\; < \\; 2^n \\] Exemple : - avec 8 bits (1 octet), on peut repr\u00e9senter 256 valeurs distinctes (de 0 \u00e0 255). - avec 16 bits , on peut repr\u00e9senter 65 536 valeurs (de 0 \u00e0 65 535). Les tailles courantes Les tailles les plus utilis\u00e9es en informatique sont : 8 bits (1 octet) 16 bits (2 octets) 32 bits (4 octets) 64 bits (8 octets) Chaque taille limite l\u2019intervalle de valeurs possibles. Questions Combien de valeurs diff\u00e9rentes peut-on repr\u00e9senter avec : 1. 5 bits ? 2. 10 bits ? 3. 32 bits ?","title":"Nombre de bits n\u00e9cessaires"},{"location":"Premieres/Chapitres/Types_de_base/#premiere-idee-utiliser-un-bit-de-signe","text":"Une premi\u00e8re id\u00e9e consiste \u00e0 r\u00e9server le bit de poids fort (le plus \u00e0 gauche) pour indiquer le signe : - 0 \u2192 nombre positif - 1 \u2192 nombre n\u00e9gatif On aurait alors les repr\u00e9sentations suivantes sur 3 bits : n\u00e9gatif positif 0 100 000 1 101 001 2 110 010 3 111 011 Probl\u00e8mes de cette m\u00e9thode Deux repr\u00e9sentations pour la valeur 0. Cela introduit une incoh\u00e9rence et gaspille une combinaison binaire. Addition incorrecte Exemple avec \\( 5 + (-5) \\) sur 8 bits: \\(00000101_2 + 10000101_2 = 10001010_2\\) C'est \u00e0 dire \\(5 - 5 = - 10\\) , ce qui est \u00e9videmment faux ! Il faut donc trouver une autre m\u00e9thode. Exercice - Donner les repr\u00e9sentations binaires des valeurs entre -5 et 5 sur 4 bits. - Donner les repr\u00e9sentations binaires des valeurs -67 sur 8 bits.","title":"Premi\u00e8re id\u00e9e : utiliser un bit de signe"},{"location":"Premieres/Chapitres/Types_de_base/#solution-le-complement-a-2","text":"Pour corriger ces probl\u00e8mes, on utilise la m\u00e9thode du compl\u00e9ment \u00e0 2 . L\u2019id\u00e9e est comparable \u00e0 un compteur : - Si on compte en arri\u00e8re depuis 0 , on obtient directement le dernier nombre possible. - Exemple en base d\u00e9cimale avec deux chiffres : apr\u00e8s 00 , si on soustrait 1, on tombe sur 99 , puis 98 , etc. De la m\u00eame mani\u00e8re, en binaire, on utilise le \"rebouclage\" naturel des bits pour coder les nombres n\u00e9gatifs. n\u00e9gatif positif 0 000 1 111 001 2 110 010 3 101 011 4 100","title":"Solution : le compl\u00e9ment \u00e0 2"},{"location":"Premieres/Chapitres/Types_de_base/#methode-de-construction","text":"La m\u00e9thode est simple : Pour repr\u00e9senter un nombre n\u00e9gatif, on \u00e9crit en binaire sa valeur absolue, on inverse ensuite tous les bits, puis on ajoute 1. Exemple Imaginons que nous codions sur 4 bits. Nous voulons repr\u00e9senter la valeur -5. \\(5_{10} = 101_2\\) sur 4 bits : \\(0101_2\\) inversion des bits : \\(1010_2\\) +1 \u2192 \\(1011_2\\) Sur 4 bits, on r\u00e9presente donc -5 comme ceci : \\(1011_2\\) . Exercice Coder en compl\u00e9ment \u00e0 2 sur 4 bits les valeurs entre -5 et 5 sur 4 bits. Cette fois-ci l'addition fonctionne : Exemple Essayons de nouveau \\(5 + (-5)\\) sur 8 bits, c'est \u00e0 dire : \\(00000101_2 + 11111011_2\\) retenue 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 + 1 1 1 1 1 1 0 1 1 = 1 0 0 0 0 0 0 0 0 0 On obtient alors : \\(100000000_2\\) , or nous sommes sur 8 bits donc on a bien : \\(5_{10} + (-5_{10}) = 00000101_2 + 11111011_2 = 00000000_2 = 0_{10}\\) Exercice V\u00e9rifier \u00e0 la main les additions suivantes en compl\u00e9ment \u00e0 2 (sur 4 bits) : 1. \\(2 + (-2)\\) 2. \\(3 + (-1)\\) 3. \\(-3 + (-2)\\) Exercice Donner l\u2019intervalle des entiers repr\u00e9sentables avec : 1. 8 bits non sign\u00e9s 2. 8 bits avec bit de signe 3. 8 bits en compl\u00e9ment \u00e0 2","title":"M\u00e9thode de construction"},{"location":"Premieres/Chapitres/Types_de_base/#reel","text":"Contrairement aux entiers, les nombres r\u00e9els peuvent avoir une partie fractionnaire . Pour les repr\u00e9senter en informatique, on utilise le format nombre \u00e0 virgule flottante ( floating point ).","title":"R\u00e9el"},{"location":"Premieres/Chapitres/Types_de_base/#conversion-decimal-vers-binaire","text":"Prenons \\(6.34375_{10}\\) On peut s\u00e9parer cette valeur en deux : - la partie enti\u00e9re : 6 - la partie fractionnaire : 0.34375 On sait d\u00e9ja transformer les valeurs enti\u00e9re : \\(6_{10} = 110_2\\) Pour la partie fractionnaire, \u00e0 l'inverse, on va effectuer des multiplications successives : On multiplie notre valeur par 2. Puis on recommence avec la partie fractionnaire du resultat. Et ainsi de suite jusqu'\u00e0 ce que le resultat soit une valeur enti\u00e9re. \\(0.34375 \\times 2 = 0.6875\\) \\(0.6875 \\times 2 = 1.375\\) \\(0.375 \\times 2 = 0.75\\) \\(0.75 \\times 2 = 1.5\\) \\(0.5 \\times 2 = 1\\) Pour finir on regarde les valeurs enti\u00e9res des resultats de haut en bas. On a donc comme partie fractionnaire : \\(0.01011_2\\) . Pour finir, il nous suffit d'additionner nos deux r\u00e9sultats : \\(6.34375_{10} = 110.01011_2\\) .","title":"Conversion d\u00e9cimal vers binaire"},{"location":"Premieres/Chapitres/Types_de_base/#conversion-binaire-vers-decimal","text":"Ici, nous utiliserons la m\u00eame m\u00e9thode que pour les valeurs enti\u00e9res. Les bits de la partie fractionnaire correspondent \u00e0 des puissances n\u00e9gatives. Reprenons notre r\u00e9sultat pr\u00e9c\u00e9dent : \\(110.01011_2\\) . \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(2^{-1}\\) \\(2^{-2}\\) \\(2^{-3}\\) \\(2^{-4}\\) \\(2^{-5}\\) 1 1 0 0 1 0 1 1 Pour retrouver notre valeur d\u00e9cimal nous pouvons effectuer ce calcul : $$ 2^2 + 2^1 + 2^{-2}+ 2^{-4}+ 2^{-5} = $$ $$4 + 2 + 0.25 + 0.0625 + 0.03125 = 6.34375 $$ Rappel sur les puissances Une puissance n\u00e9gative permet de repr\u00e9senter la division r\u00e9p\u00e9t\u00e9e . Pour tout nombre non nul \\(a\\) et tout entier \\(n > 0\\) : $$ a^{-n} = \\frac{1}{a^n} $$ Autrement dit, \\(a^{-n}\\) est l'inverse de \\(a^n\\) . \\(2^-1\\) \\(2^-2\\) \\(2^-3\\) \\(2^-4\\) \\(2^-5\\) \\(2^-6\\) \\(2^-7\\) \\(\\frac{1}{2^1}\\) \\(\\frac{1}{2^2}\\) \\(\\frac{1}{2^3}\\) \\(\\frac{1}{2^4}\\) \\(\\frac{1}{2^5}\\) \\(\\frac{1}{2^6}\\) \\(\\frac{1}{2^7}\\) \\(\\frac{1}{2}\\) \\(\\frac{1}{4}\\) \\(\\frac{1}{8}\\) \\(\\frac{1}{16}\\) \\(\\frac{1}{32}\\) \\(\\frac{1}{64}\\) \\(\\frac{1}{128}\\) \\(0.5\\) \\(0.25\\) \\(0.125\\) \\(0.0625\\) \\(0.03125\\) \\(0.015625\\) \\(0.0078125\\) Exemples \\(2^{-3} = \\frac{1}{2^3} = \\frac{1}{8} = 0.125\\) \\(5^{-2} = \\frac{1}{5^2} = \\frac{1}{25} = 0.04\\) \\(10^{-4} = \\frac{1}{10^4} = \\frac{1}{10000} = 0.0001\\)","title":"Conversion binaire vers d\u00e9cimal"},{"location":"Premieres/Chapitres/Types_de_base/#la-norme-ieee-754","text":"La norme IEEE 754 d\u00e9finit comment repr\u00e9senter un r\u00e9el sur un nombre fini de bits. Elle utilise trois composants : Signe (1 bit) : 0 \u2192 positif, 1 \u2192 n\u00e9gatif Exposant : encode la puissance de 2 Mantisse (ou fraction) : encode les chiffres significatifs Le nombre r\u00e9el est donc repr\u00e9sent\u00e9 comme : \\[ x = (-1)^{\\text{signe}} \\times 1.\\text{mantisse} \\times 2^{\\text{exposant}-\\text{biais}} \\] Le biais est un nombre ajout\u00e9 pour que l\u2019exposant puisse \u00eatre positif ou n\u00e9gatif. La mantisse permet de repr\u00e9senter les chiffres significatifs.","title":"La norme IEEE 754"},{"location":"Premieres/Chapitres/Types_de_base/#proprietes-importantes","text":"Certains nombres ne peuvent pas \u00eatre repr\u00e9sent\u00e9s exactement. Exemple : \\(0.1_{10}\\) n\u2019a pas de repr\u00e9sentation binaire exacte. Les erreurs d\u2019arrondi peuvent s\u2019accumuler lors des calculs. Il ne faut jamais tester l\u2019\u00e9galit\u00e9 de deux flottants avec == . Exemples \\(0.25_{10} = 0.01_2\\) exactement \\(0.1_{10}\\) = une suite infinie en binaire \u2192 approximation \\(1/3_{10} \\approx 0.3333...\\) \u2192 approximation Exercices Convertir les nombres suivants en binaire flottant (approximatif sur 8 bits de mantisse) : 0.1 0.25 1/3 V\u00e9rifier pourquoi 0.2 + 0.1 != 0.3 en Python ou en pseudo-code.","title":"Propri\u00e9t\u00e9s importantes"},{"location":"Secondes/Secondes/","text":"SNT - Secondes L\u2019enseignement de Sciences Num\u00e9riques et Technologie (SNT) en classe de Seconde permet de d\u00e9couvrir les principaux concepts du num\u00e9rique et de comprendre l\u2019impact croissant des technologies sur notre quotidien. Les mobiles, ordinateurs et objets connect\u00e9s sont des exemples concrets : ils permettent de communiquer, de cr\u00e9er, de se localiser, de traiter des donn\u00e9es et d\u2019interagir avec le monde. Cet enseignement s\u2019appuie sur quelques concepts fondamentaux : - Les donn\u00e9es : textes, images, sons, mesures\u2026 tout peut \u00eatre repr\u00e9sent\u00e9 num\u00e9riquement. - Les algorithmes : instructions permettant de traiter ces donn\u00e9es. - Les langages : pour traduire les algorithmes en programmes ex\u00e9cutables. - Les machines et objets connect\u00e9s : pour ex\u00e9cuter les programmes et g\u00e9rer les donn\u00e9es. - Les interfaces : pour interagir avec les humains et les syst\u00e8mes. L\u2019objectif est de mieux comprendre le num\u00e9rique, ses enjeux scientifiques et soci\u00e9taux, et d\u2019adopter un usage r\u00e9fl\u00e9chi et responsable des technologies. Chaque th\u00e8me du programme (Internet, Web, r\u00e9seaux sociaux, donn\u00e9es, localisation, objets connect\u00e9s, photographie num\u00e9rique\u2026) est accompagn\u00e9 de projets, travaux pratiques et activit\u00e9s pour mettre en pratique les connaissances. Expos\u00e9s \ud83d\udd3a Les expos\u00e9s Chapitres \ud83d\udd39 Les bases de Python \ud83d\udd39 Internet - Protocoles et routage des paquets","title":"Accueil"},{"location":"Secondes/Secondes/#snt-secondes","text":"L\u2019enseignement de Sciences Num\u00e9riques et Technologie (SNT) en classe de Seconde permet de d\u00e9couvrir les principaux concepts du num\u00e9rique et de comprendre l\u2019impact croissant des technologies sur notre quotidien. Les mobiles, ordinateurs et objets connect\u00e9s sont des exemples concrets : ils permettent de communiquer, de cr\u00e9er, de se localiser, de traiter des donn\u00e9es et d\u2019interagir avec le monde. Cet enseignement s\u2019appuie sur quelques concepts fondamentaux : - Les donn\u00e9es : textes, images, sons, mesures\u2026 tout peut \u00eatre repr\u00e9sent\u00e9 num\u00e9riquement. - Les algorithmes : instructions permettant de traiter ces donn\u00e9es. - Les langages : pour traduire les algorithmes en programmes ex\u00e9cutables. - Les machines et objets connect\u00e9s : pour ex\u00e9cuter les programmes et g\u00e9rer les donn\u00e9es. - Les interfaces : pour interagir avec les humains et les syst\u00e8mes. L\u2019objectif est de mieux comprendre le num\u00e9rique, ses enjeux scientifiques et soci\u00e9taux, et d\u2019adopter un usage r\u00e9fl\u00e9chi et responsable des technologies. Chaque th\u00e8me du programme (Internet, Web, r\u00e9seaux sociaux, donn\u00e9es, localisation, objets connect\u00e9s, photographie num\u00e9rique\u2026) est accompagn\u00e9 de projets, travaux pratiques et activit\u00e9s pour mettre en pratique les connaissances.","title":"SNT - Secondes"},{"location":"Secondes/Secondes/#exposes","text":"\ud83d\udd3a Les expos\u00e9s","title":"Expos\u00e9s"},{"location":"Secondes/Secondes/#chapitres","text":"\ud83d\udd39 Les bases de Python \ud83d\udd39 Internet - Protocoles et routage des paquets","title":"Chapitres"},{"location":"Secondes/exposes/","text":"Organisation des expos\u00e9s SNT Format des expos\u00e9s Travail en groupe : Groupe de 2 \u00e9l\u00e8ves \u2192 expos\u00e9 de 8 \u00e0 12 minutes Groupe de 3 \u00e9l\u00e8ves \u2192 expos\u00e9 de 12 \u00e0 15 minutes Sujet libre , \u00e0 condition qu\u2019il soit en lien avec le num\u00e9rique , l\u2019 informatique ou les technologies . Doublons possibles : plusieurs groupes peuvent traiter le m\u00eame th\u00e8me g\u00e9n\u00e9ral , mais la partie r\u00e9flexive obligatoire (analyse d\u2019un enjeu concret li\u00e9 au num\u00e9rique / informatique / technologie) doit \u00eatre unique \u00e0 chaque groupe. Plan attendu Chaque expos\u00e9 doit \u00eatre structur\u00e9 et comprendre : 1. Une pr\u00e9sentation du sujet choisi 2. Une partie r\u00e9flexive obligatoire qui relie le num\u00e9rique / la technologie \u00e0 des enjeux concrets dans le monde r\u00e9el (soci\u00e9t\u00e9, \u00e9conomie, politique, culture, \u00e9thique, sant\u00e9, etc.) 3. Une conclusion qui synth\u00e9tise les apports et ouvre sur une r\u00e9flexion plus large. Inspirations th\u00e9matiques Choisissez un sujet qui vous int\u00e9resse ou qui vous passionne : un jeu, un film, un r\u00e9seau social, une exp\u00e9rience, une ou un scientifique, une technologie, un \u00e9v\u00e9nement historique... Exemples de sujets Minecraft TikTok Les femmes dans l\u2019histoire de l\u2019informatique La r\u00e9gulation des plateformes de streaming (exemple : Kick vs Twitch) Alan Turing : vie, mort et h\u00e9ritage scientifique Les fake news et leur propagation World of Warcraft : l\u2019\u00e9pid\u00e9mie virtuelle comme mod\u00e8le d\u2019\u00e9tude scientifique Exemples de parties r\u00e9flexives Minecraft \u2192 le jeu sur les r\u00e9seaux sociaux / la redstone et les op\u00e9rations logiques / les changements apr\u00e8s le rachat par Microsoft TikTok \u2192 l\u2019algorithme de recommandation / les effets du doomscrolling / la vie priv\u00e9e et l\u2019exploitation des donn\u00e9es / les nouveaux m\u00e9tiers li\u00e9s \u00e0 la plateforme Doomscrolling \u2192 enjeux psychologiques et soci\u00e9taux Fake news \u2192 impacts politiques et d\u00e9mocratiques World of Warcraft \u2192 ce que l\u2019\u00e9pid\u00e9mie virtuelle a appris aux scientifiques Organisation et calendrier 30 septembre \u2192 Tous les groupes sont constitu\u00e9s (sinon le professeur les formera) 19 octobre \u2192 Chaque groupe a un sujet et un plan valid\u00e9s par le professeur 7 novembre \u2192 Publication de l\u2019ordre de passage Du 10 novembre au 19 d\u00e9cembre \u2192 Expos\u00e9s en classe Consignes Pr\u00e9parez un support visuel (PowerPoint, Google Slides, Canva, affiche, etc.) pour clarifier vos explications. R\u00e9partissez bien la parole entre les membres du groupe . Utilisez des exemples concrets ou des comparaisons pour rendre votre expos\u00e9 plus accessible. La partie r\u00e9flexive est essentielle : elle doit montrer que vous \u00eates capables de prendre du recul sur votre sujet. Indiquez vos sources ! (m\u00eame si ce sont des vid\u00e9os YouTube, tant que vous ne vous contentez pas de r\u00e9p\u00e9ter). Bar\u00e8me (sur 10 points) Crit\u00e8re Points Description Recul et analyse du sujet 2 Mise en lien du th\u00e8me avec des enjeux concrets, capacit\u00e9 \u00e0 prendre du recul Qualit\u00e9 du support visuel 2 Support clair, lisible, bien construit et utile \u00e0 l\u2019expos\u00e9 Clart\u00e9 des propos 2 Explications compr\u00e9hensibles, vocabulaire adapt\u00e9, bonne structuration Dynamisme et oral 2 Capacit\u00e9 \u00e0 capter l\u2019attention, engagement, gestion du temps, contact public R\u00e9partition de la parole 1 Participation \u00e9quilibr\u00e9e de tous les membres du groupe Vari\u00e9t\u00e9 des sources 1 Utilisation de plusieurs sources fiables et pertinentes","title":"Expos\u00e9s"},{"location":"Secondes/exposes/#organisation-des-exposes-snt","text":"","title":"Organisation des expos\u00e9s SNT"},{"location":"Secondes/exposes/#format-des-exposes","text":"Travail en groupe : Groupe de 2 \u00e9l\u00e8ves \u2192 expos\u00e9 de 8 \u00e0 12 minutes Groupe de 3 \u00e9l\u00e8ves \u2192 expos\u00e9 de 12 \u00e0 15 minutes Sujet libre , \u00e0 condition qu\u2019il soit en lien avec le num\u00e9rique , l\u2019 informatique ou les technologies . Doublons possibles : plusieurs groupes peuvent traiter le m\u00eame th\u00e8me g\u00e9n\u00e9ral , mais la partie r\u00e9flexive obligatoire (analyse d\u2019un enjeu concret li\u00e9 au num\u00e9rique / informatique / technologie) doit \u00eatre unique \u00e0 chaque groupe.","title":"Format des expos\u00e9s"},{"location":"Secondes/exposes/#plan-attendu","text":"Chaque expos\u00e9 doit \u00eatre structur\u00e9 et comprendre : 1. Une pr\u00e9sentation du sujet choisi 2. Une partie r\u00e9flexive obligatoire qui relie le num\u00e9rique / la technologie \u00e0 des enjeux concrets dans le monde r\u00e9el (soci\u00e9t\u00e9, \u00e9conomie, politique, culture, \u00e9thique, sant\u00e9, etc.) 3. Une conclusion qui synth\u00e9tise les apports et ouvre sur une r\u00e9flexion plus large.","title":"Plan attendu"},{"location":"Secondes/exposes/#inspirations-thematiques","text":"Choisissez un sujet qui vous int\u00e9resse ou qui vous passionne : un jeu, un film, un r\u00e9seau social, une exp\u00e9rience, une ou un scientifique, une technologie, un \u00e9v\u00e9nement historique...","title":"Inspirations th\u00e9matiques"},{"location":"Secondes/exposes/#exemples-de-sujets","text":"Minecraft TikTok Les femmes dans l\u2019histoire de l\u2019informatique La r\u00e9gulation des plateformes de streaming (exemple : Kick vs Twitch) Alan Turing : vie, mort et h\u00e9ritage scientifique Les fake news et leur propagation World of Warcraft : l\u2019\u00e9pid\u00e9mie virtuelle comme mod\u00e8le d\u2019\u00e9tude scientifique","title":"Exemples de sujets"},{"location":"Secondes/exposes/#exemples-de-parties-reflexives","text":"Minecraft \u2192 le jeu sur les r\u00e9seaux sociaux / la redstone et les op\u00e9rations logiques / les changements apr\u00e8s le rachat par Microsoft TikTok \u2192 l\u2019algorithme de recommandation / les effets du doomscrolling / la vie priv\u00e9e et l\u2019exploitation des donn\u00e9es / les nouveaux m\u00e9tiers li\u00e9s \u00e0 la plateforme Doomscrolling \u2192 enjeux psychologiques et soci\u00e9taux Fake news \u2192 impacts politiques et d\u00e9mocratiques World of Warcraft \u2192 ce que l\u2019\u00e9pid\u00e9mie virtuelle a appris aux scientifiques","title":"Exemples de parties r\u00e9flexives"},{"location":"Secondes/exposes/#organisation-et-calendrier","text":"30 septembre \u2192 Tous les groupes sont constitu\u00e9s (sinon le professeur les formera) 19 octobre \u2192 Chaque groupe a un sujet et un plan valid\u00e9s par le professeur 7 novembre \u2192 Publication de l\u2019ordre de passage Du 10 novembre au 19 d\u00e9cembre \u2192 Expos\u00e9s en classe","title":"Organisation et calendrier"},{"location":"Secondes/exposes/#consignes","text":"Pr\u00e9parez un support visuel (PowerPoint, Google Slides, Canva, affiche, etc.) pour clarifier vos explications. R\u00e9partissez bien la parole entre les membres du groupe . Utilisez des exemples concrets ou des comparaisons pour rendre votre expos\u00e9 plus accessible. La partie r\u00e9flexive est essentielle : elle doit montrer que vous \u00eates capables de prendre du recul sur votre sujet. Indiquez vos sources ! (m\u00eame si ce sont des vid\u00e9os YouTube, tant que vous ne vous contentez pas de r\u00e9p\u00e9ter).","title":"Consignes"},{"location":"Secondes/exposes/#bareme-sur-10-points","text":"Crit\u00e8re Points Description Recul et analyse du sujet 2 Mise en lien du th\u00e8me avec des enjeux concrets, capacit\u00e9 \u00e0 prendre du recul Qualit\u00e9 du support visuel 2 Support clair, lisible, bien construit et utile \u00e0 l\u2019expos\u00e9 Clart\u00e9 des propos 2 Explications compr\u00e9hensibles, vocabulaire adapt\u00e9, bonne structuration Dynamisme et oral 2 Capacit\u00e9 \u00e0 capter l\u2019attention, engagement, gestion du temps, contact public R\u00e9partition de la parole 1 Participation \u00e9quilibr\u00e9e de tous les membres du groupe Vari\u00e9t\u00e9 des sources 1 Utilisation de plusieurs sources fiables et pertinentes","title":"Bar\u00e8me (sur 10 points)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/","text":"\ud83c\udf10 SNT \u2013 Internet Internet = un r\u00e9seau de r\u00e9seaux Internet n\u2019est pas une seule machine g\u00e9ante. C\u2019est en r\u00e9alit\u00e9 un immense ensemble de r\u00e9seaux interconnect\u00e9s : Les r\u00e9seaux locaux (LAN) Exemple : votre maison (box Internet + ordinateurs + t\u00e9l\u00e9phones connect\u00e9s en Wi-Fi ou en c\u00e2ble). Exemple : le r\u00e9seau du lyc\u00e9e (salles informatiques, imprimantes, serveurs p\u00e9dagogiques). Exemple : le r\u00e9seau d\u2019une entreprise. Ces r\u00e9seaux sont priv\u00e9s et limit\u00e9s dans l\u2019espace (on les appelle des r\u00e9seaux locaux ). Les Fournisseurs d\u2019Acc\u00e8s \u00e0 Internet (FAI) Pour communiquer avec le reste du monde, un r\u00e9seau local doit se connecter \u00e0 un Fournisseur d\u2019Acc\u00e8s \u00e0 Internet (FAI) : - En France : Orange, SFR, Free, Bouygues, etc. - Dans d\u2019autres pays : AT&T, Deutsche Telekom, etc. Un FAI g\u00e8re un r\u00e9seau beaucoup plus vaste qui relie des millions de clients. L\u2019interconnexion mondiale Les r\u00e9seaux des FAI sont eux-m\u00eames reli\u00e9s entre eux par de tr\u00e8s grandes lignes de communication (fibre optique, c\u00e2bles sous-marins, satellites). Les grandes entreprises (Google, Amazon, Microsoft, etc.) poss\u00e8dent aussi leurs propres r\u00e9seaux qui s\u2019interconnectent avec les FAI. \ud83d\udccc R\u00e9sultat : Quand vous envoyez un message, il sort d\u2019abord de votre r\u00e9seau local \u2192 passe par le r\u00e9seau de votre FAI \u2192 traverse plusieurs autres r\u00e9seaux \u2192 atteint le r\u00e9seau du destinataire. \ud83d\udc49 Id\u00e9e cl\u00e9 \u00e0 retenir : Internet, c\u2019est l\u2019interconnexion de milliers de r\u00e9seaux locaux et de fournisseurs d\u2019acc\u00e8s \u00e0 l\u2019\u00e9chelle mondiale, qui communiquent tous gr\u00e2ce \u00e0 des protocoles communs . Rep\u00e8res historiques 1950s-1960s : premiers r\u00e9seaux d\u2019ordinateurs. 1970 : ArpaNet (USA). 1971 : Cyclades (France). 1983 : naissance officielle d\u2019Internet avec le protocole TCP/IP . Le protocole IP et l\u2019adressage Chaque appareil connect\u00e9 \u00e0 Internet doit \u00eatre identifiable de mani\u00e8re unique . Pour cela, deux types d\u2019adresses existent : \ud83d\udccd Adresse MAC (adressage local) Chaque machine dispose d\u2019une ou plusieurs cartes r\u00e9seau (Wi-Fi, Ethernet\u2026). Chaque carte poss\u00e8de une adresse physique unique au monde : l\u2019adresse MAC . Utilis\u00e9e uniquement dans le r\u00e9seau local (LAN). Caract\u00e9ristiques : - Format : 6 blocs de 2 caract\u00e8res (ex. a1:b2:c3:d4:e5:f6 ). - Base : hexad\u00e9cimale (0-9 et A-F). - Port\u00e9e : limit\u00e9e au r\u00e9seau local. - Unicit\u00e9 : chaque carte r\u00e9seau poss\u00e8de une adresse MAC unique. \ud83d\udca1 Exemple : Adresse MAC = 3C:97:0E:4B:62:A1 \ud83c\udf10 Adresse IP (adressage global) Pour communiquer sur Internet, chaque machine re\u00e7oit aussi une adresse IP . C\u2019est l\u2019adresse logique qui permet de retrouver une machine parmi des milliards d\u2019autres. Caract\u00e9ristiques : - Format : 4 nombres entre 0 et 255 (ex. 192.168.1.12 ). - Base humaine : d\u00e9cimale (base 10). - Base machine : binaire (0 et 1). - Port\u00e9e : mondiale (Internet). \ud83d\udca1 Exemples : - 91.198.174.192 (serveur de Wikipedia en IPv4). - 2a02:ec80:600:ed1a::1 (m\u00eame serveur en IPv6). - 127.0.0.1 \u2192 adresse sp\u00e9ciale \u00ab localhost \u00bb (votre propre machine). \ud83e\udde9 Structure d\u2019une adresse IP Une adresse IP identifie une machine sur un r\u00e9seau. Elle se compose de deux parties principales : Partie R\u00e9seau \u2192 identifie le r\u00e9seau auquel appartient la machine. Partie Machine (h\u00f4te) \u2192 identifie la machine dans ce r\u00e9seau. \ud83d\udccc Pour s\u00e9parer ces deux parties, on utilise un masque de sous-r\u00e9seau . IPv4 (Internet Protocol version 4) Format : 32 bits , affich\u00e9s en 4 nombres d\u00e9cimaux (0-255) s\u00e9par\u00e9s par des points. Exemple : 128.40.94.3 Masque : /16 = 255.255.0.0 En binaire : Adresse : 10000000.00101000.01011110.00000011 Masque : 11111111.11111111.00000000.00000000 Partie r\u00e9seau : 128.40.0.0 Partie machine : 94.3 Port\u00e9e : Internet mondial Limitation : environ 4 milliards d\u2019adresses \u2192 probl\u00e8me avec le nombre croissant d\u2019appareils connect\u00e9s. IPv6 (Internet Protocol version 6) Cr\u00e9\u00e9 pour r\u00e9soudre la p\u00e9nurie d\u2019adresses IPv4 . Format : 128 bits , repr\u00e9sent\u00e9 en 8 groupes de 4 caract\u00e8res hexad\u00e9cimaux s\u00e9par\u00e9s par des deux-points. Exemple : 2a02:ec80:600:ed1a::1 Port\u00e9e : mondiale, permet un nombre quasi infini d\u2019adresses . Partie r\u00e9seau / partie machine : toujours pr\u00e9sentes, mais sur un format plus long. Comparatif IPv4 / IPv6 Caract\u00e9ristique IPv4 IPv6 Taille 32 bits 128 bits Format 4 nombres d\u00e9cimaux 8 blocs hexad\u00e9cimaux Exemple 192.168.1.25 2a02:ec80:600:ed1a::1 Nombre d\u2019adresses ~4 milliards 340 undecillions (~3,4\u00d710\u00b3\u2078) Objectif Adressage mondial limit\u00e9 R\u00e9soudre la p\u00e9nurie IPv4 \ud83d\udcbb Exp\u00e9rience : d\u00e9couvrir les adresses IP et le r\u00e9seau local de ton ordinateur Ouvrir l\u2019invite de commande. Taper : ipconfig Observer : Ton adresse IPv4 et IPv6 L\u2019adresse de la passerelle (routeur) Les serveurs DNS \ud83d\udccc \u00c0 retenir Une machine peut avoir IPv4 et IPv6 simultan\u00e9ment. La partie r\u00e9seau permet de savoir si deux machines sont dans le m\u00eame r\u00e9seau local. Le masque de sous-r\u00e9seau d\u00e9termine quelle partie de l\u2019adresse est r\u00e9seau et quelle partie est machine. \ud83d\udcca R\u00e9sum\u00e9 comparatif Caract\u00e9ristique Adresse MAC Adresse IP Nature Physique (grav\u00e9e sur la carte) Logique (attribu\u00e9e par le r\u00e9seau) Format 6 blocs hexad\u00e9cimaux (ex. A1:B2:...) 4 nombres d\u00e9cimaux (IPv4) ou longs hexad\u00e9cimaux (IPv6) Port\u00e9e R\u00e9seau local R\u00e9seau mondial (Internet) Unicit\u00e9 Unique au monde Unique dans un r\u00e9seau donn\u00e9 Exemple 3C:97:0E:4B:62:A1 192.168.1.12 \ud83d\udccc \u00c0 retenir : - L\u2019adresse MAC identifie la carte r\u00e9seau dans un LAN . - L\u2019adresse IP identifie l\u2019 appareil sur Internet . - Les deux sont n\u00e9cessaires pour qu\u2019un ordinateur puisse communiquer. DNS \u2013 Domain Name System Quand vous tapez un nom de site dans votre navigateur, par exemple wikipedia.org , votre ordinateur ne sait pas directement o\u00f9 envoyer les paquets. Il a besoin de l\u2019adresse IP correspondante. Le DNS (Domain Name System) est un service qui fait la correspondance : Nom symbolique \u2192 Adresse IP Exemple : wikipedia.org \u2192 91.198.174.192 (IPv4) ou 2a02:ec80:600:ed1a::1 (IPv6) Les serveurs DNS sont des ordinateurs sp\u00e9cialis\u00e9s qui r\u00e9pondent aux requ\u00eates des ordinateurs pour r\u00e9soudre ces noms. Chaque ordinateur dispose d\u2019un serveur DNS configur\u00e9 (souvent celui de votre FAI) pour interroger le r\u00e9seau. \ud83d\udccc \u00c0 retenir : sans DNS, il faudrait conna\u00eetre l\u2019adresse IP exacte de chaque site pour s\u2019y connecter. Le protocole TCP (Transmission Control Protocol) Quand on envoie un message ou un fichier sur Internet, il n\u2019est jamais envoy\u00e9 d\u2019un seul bloc , mais d\u00e9coup\u00e9 en petits morceaux appel\u00e9s paquets . Chaque paquet contient : - l\u2019adresse de l\u2019 \u00e9metteur (source), - l\u2019adresse du destinataire , - une partie des donn\u00e9es (texte, image, son\u2026). Adresse source Adresse destination Donn\u00e9es \ud83d\udccc R\u00f4le de TCP TCP est un protocole de communication fiable . Il s\u2019assure que : 1. Tous les paquets arrivent \u00e0 destination . - Si un paquet est perdu sur le chemin, TCP le redemande. 2. Les paquets sont remis dans le bon ordre . - Les paquets peuvent arriver dans le d\u00e9sordre, TCP les r\u00e9organise. 3. La congestion du r\u00e9seau est g\u00e9r\u00e9e . - TCP ajuste la vitesse d\u2019envoi pour ne pas saturer le r\u00e9seau. \ud83d\udca1 Exemple concret : - Vous regardez une vid\u00e9o en streaming : - La vid\u00e9o est envoy\u00e9e en milliers de paquets. - TCP s\u2019assure que chaque image arrive et est reconstitu\u00e9e dans le bon ordre . \ud83d\udd04 Transmission et fiabilit\u00e9 Chaque paquet contient un num\u00e9ro d\u2019ordre et un accus\u00e9 de r\u00e9ception (ACK) . Si un paquet n\u2019est pas accus\u00e9 dans un certain d\u00e9lai, il est renvoy\u00e9 automatiquement . Ordinateur A ---> paquet #1 ---> Ordinateur B <--- ACK #1 ---- Ordinateur A ---> paquet #2 ---> Ordinateur B <--- ACK #2 ---- Cela garantit que tout le message est complet \u00e0 l\u2019arriv\u00e9e. \u26a0\ufe0f Limites de TCP TCP ne garantit pas le temps d\u2019arriv\u00e9e des paquets. Utile pour mails ou fichiers. Moins adapt\u00e9 pour les vid\u00e9os en direct ou jeux en ligne , car attendre les paquets manquants cr\u00e9e du lag . Pour ces usages, on utilise souvent UDP (User Datagram Protocol) , qui envoie les paquets sans v\u00e9rification ni r\u00e9ordonnancement \u2192 plus rapide mais moins fiable. \ud83d\udcbb Exp\u00e9rience : tester si un autre appareil ou site est joignable Ouvrir l\u2019invite de commande. Taper : ping wikipedia.org Observer : L\u2019adresse IP de wikipedia.org Le temps aller-retour des paquets Si tous les paquets sont re\u00e7us \ud83d\udccc \u00c0 retenir TCP d\u00e9coupe les donn\u00e9es en paquets , les envoie et les r\u00e9assemble. Il assure la fiabilit\u00e9 : tout paquet perdu est renvoy\u00e9 et les paquets sont remis dans le bon ordre. TCP est le protocole utilis\u00e9 pour la majorit\u00e9 des communications fiables sur Internet (mail, web, transfert de fichiers). Pour les applications temps r\u00e9el (streaming, jeux), UDP est utilis\u00e9 \u00e0 la place. Le routage Les paquets ne vont pas directement de l\u2019\u00e9metteur au destinataire. Ils passent par plusieurs routeurs , qui choisissent \u00e0 chaque \u00e9tape le meilleur chemin possible . Sch\u00e9ma simplifi\u00e9 : Ordinateur A \u2192 [Routeur 1] \u2192 [Routeur 2] \u2192 [Routeur 3] \u2192 Ordinateur B Chaque routeur conna\u00eet seulement une carte locale . Si un chemin est bloqu\u00e9, le paquet est envoy\u00e9 ailleurs. Certains paquets peuvent \u00eatre perdus \u2192 TCP les renvoie. \ud83d\udcbb Exp\u00e9rience : suivre le chemin des paquets sur Internet Ouvrir l\u2019invite de commande. Taper : tracert wikipedia.org Observer : Les routeurs travers\u00e9s Les temps de passage Les \u00e9toiles (*) pour routeurs qui ne r\u00e9pondent pas \ud83d\udd39 Exp\u00e9rience pratique : nslookup \ud83d\udcbb Objectif : r\u00e9soudre un nom de domaine en adresse IP et identifier le serveur DNS utilis\u00e9 Ouvrir l\u2019invite de commande sur Windows. Taper la commande : nslookup wikipedia.org Observer : L\u2019 adresse IP retourn\u00e9e pour wikipedia.org Le serveur DNS qui a r\u00e9pondu Comparer avec l\u2019adresse IP obtenue avec ping wikipedia.org pour voir que c\u2019est la m\u00eame. \ud83d\udca1 Lien avec le cours : cette exp\u00e9rience montre comment un nom de site est traduit en adresse IP avant que les paquets soient envoy\u00e9s. Les composants mat\u00e9riels d\u2019un r\u00e9seau Pour qu\u2019un r\u00e9seau fonctionne, plusieurs \u00e9l\u00e9ments mat\u00e9riels sont n\u00e9cessaires : \ud83d\udcbb 1. Machines Ce sont les appareils qui communiquent entre eux : Ordinateurs, tablettes, smartphones, consoles de jeu, serveurs. Elles envoient et re\u00e7oivent des donn\u00e9es via le r\u00e9seau. \ud83d\udd00 2. Switch Dispositif qui relie plusieurs machines localement dans un r\u00e9seau (LAN). Exemple : un switch dans une salle informatique permet aux ordinateurs de communiquer entre eux rapidement. Fonction : re\u00e7oit un paquet sur un port et l\u2019envoie uniquement au port correspondant \u00e0 la machine destinataire . \ud83c\udf10 3. Routeur Permet de connecter un r\u00e9seau local \u00e0 Internet ou \u00e0 d\u2019autres r\u00e9seaux. Exemple : la box Internet \u00e0 la maison est un routeur. Fonction : acheminer les paquets entre les diff\u00e9rents r\u00e9seaux selon leur adresse IP. \ud83d\udce1 4. Supports de transmission Permettent de transporter physiquement les donn\u00e9es entre machines et \u00e9quipements r\u00e9seau. Types : C\u00e2bles Ethernet (filaire, stable et rapide) Wi-Fi (sans fil, pratique mais plus sensible aux interf\u00e9rences) Fibre optique (tr\u00e8s haut d\u00e9bit, longue distance) Mod\u00e8le en couches TCP/IP Le protocole TCP/IP organise la communication en 4 couches , chacune ayant un r\u00f4le sp\u00e9cifique : 1 Couche Application \ud83d\udcf1 Utilis\u00e9e par les logiciels : navigateur web, messagerie, jeux en ligne. Contient les donn\u00e9es utilisateur . 2 Couche Transport \ud83d\ude9b Assure le transport fiable des donn\u00e9es . Garantit que les paquets arrivent complets et dans le bon ordre (TCP). 3 Couche Internet \ud83d\uddfa\ufe0f G\u00e8re l\u2019adressage et le routage . D\u00e9termine le chemin optimal pour les paquets vers leur destination. 4 Couche Acc\u00e8s R\u00e9seau \ud83d\udd0c Assure la transmission physique des donn\u00e9es : signaux \u00e9lectriques, optiques ou radio. Utilise les supports de transmission (Ethernet, Wi-Fi, fibre). Encapsulation et d\u00e9sencapsulation Quand une machine envoie des donn\u00e9es : Les donn\u00e9es descendent les couches en se faisant encapsuler \u2192 chaque couche ajoute son en-t\u00eate . \ud83d\udcf1 Application : donn\u00e9es utilisateur \u2b07\ufe0f \ud83d\ude9b Transport : + en-t\u00eate TCP \u2b07\ufe0f \ud83d\uddfa\ufe0f Internet : + en-t\u00eate IP \u2b07\ufe0f \ud83d\udd0c Acc\u00e8s r\u00e9seau : + en-t\u00eate Ethernet \u00c0 la r\u00e9ception, les donn\u00e9es remontent les couches en se faisant d\u00e9sencapsuler \u2192 chaque couche retire son en-t\u00eate pour r\u00e9cup\u00e9rer les informations originales. \ud83d\udd0c Acc\u00e8s r\u00e9seau : - en-t\u00eate Ethernet \u2b06\ufe0f \ud83d\uddfa\ufe0f Internet : - en-t\u00eate IP \u2b06\ufe0f \ud83d\ude9b Transport : - en-t\u00eate TCP \u2b06\ufe0f \ud83d\udcf1 Application : donn\u00e9es utilisateur \ud83d\udca1 \u00c0 retenir : - L\u2019encapsulation permet \u00e0 chaque couche de g\u00e9rer ses propres fonctions sans se pr\u00e9occuper des autres. - La d\u00e9sencapsulation permet de reconstituer les donn\u00e9es correctement \u00e0 l\u2019arriv\u00e9e.","title":"Internet"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#snt-internet","text":"","title":"\ud83c\udf10 SNT \u2013 Internet"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#internet-un-reseau-de-reseaux","text":"Internet n\u2019est pas une seule machine g\u00e9ante. C\u2019est en r\u00e9alit\u00e9 un immense ensemble de r\u00e9seaux interconnect\u00e9s : Les r\u00e9seaux locaux (LAN) Exemple : votre maison (box Internet + ordinateurs + t\u00e9l\u00e9phones connect\u00e9s en Wi-Fi ou en c\u00e2ble). Exemple : le r\u00e9seau du lyc\u00e9e (salles informatiques, imprimantes, serveurs p\u00e9dagogiques). Exemple : le r\u00e9seau d\u2019une entreprise. Ces r\u00e9seaux sont priv\u00e9s et limit\u00e9s dans l\u2019espace (on les appelle des r\u00e9seaux locaux ).","title":"Internet = un r\u00e9seau de r\u00e9seaux"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#les-fournisseurs-dacces-a-internet-fai","text":"Pour communiquer avec le reste du monde, un r\u00e9seau local doit se connecter \u00e0 un Fournisseur d\u2019Acc\u00e8s \u00e0 Internet (FAI) : - En France : Orange, SFR, Free, Bouygues, etc. - Dans d\u2019autres pays : AT&T, Deutsche Telekom, etc. Un FAI g\u00e8re un r\u00e9seau beaucoup plus vaste qui relie des millions de clients.","title":"Les Fournisseurs d\u2019Acc\u00e8s \u00e0 Internet (FAI)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#linterconnexion-mondiale","text":"Les r\u00e9seaux des FAI sont eux-m\u00eames reli\u00e9s entre eux par de tr\u00e8s grandes lignes de communication (fibre optique, c\u00e2bles sous-marins, satellites). Les grandes entreprises (Google, Amazon, Microsoft, etc.) poss\u00e8dent aussi leurs propres r\u00e9seaux qui s\u2019interconnectent avec les FAI. \ud83d\udccc R\u00e9sultat : Quand vous envoyez un message, il sort d\u2019abord de votre r\u00e9seau local \u2192 passe par le r\u00e9seau de votre FAI \u2192 traverse plusieurs autres r\u00e9seaux \u2192 atteint le r\u00e9seau du destinataire. \ud83d\udc49 Id\u00e9e cl\u00e9 \u00e0 retenir : Internet, c\u2019est l\u2019interconnexion de milliers de r\u00e9seaux locaux et de fournisseurs d\u2019acc\u00e8s \u00e0 l\u2019\u00e9chelle mondiale, qui communiquent tous gr\u00e2ce \u00e0 des protocoles communs .","title":"L\u2019interconnexion mondiale"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#reperes-historiques","text":"1950s-1960s : premiers r\u00e9seaux d\u2019ordinateurs. 1970 : ArpaNet (USA). 1971 : Cyclades (France). 1983 : naissance officielle d\u2019Internet avec le protocole TCP/IP .","title":"Rep\u00e8res historiques"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#le-protocole-ip-et-ladressage","text":"Chaque appareil connect\u00e9 \u00e0 Internet doit \u00eatre identifiable de mani\u00e8re unique . Pour cela, deux types d\u2019adresses existent :","title":"Le protocole IP et l\u2019adressage"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#adresse-mac-adressage-local","text":"Chaque machine dispose d\u2019une ou plusieurs cartes r\u00e9seau (Wi-Fi, Ethernet\u2026). Chaque carte poss\u00e8de une adresse physique unique au monde : l\u2019adresse MAC . Utilis\u00e9e uniquement dans le r\u00e9seau local (LAN). Caract\u00e9ristiques : - Format : 6 blocs de 2 caract\u00e8res (ex. a1:b2:c3:d4:e5:f6 ). - Base : hexad\u00e9cimale (0-9 et A-F). - Port\u00e9e : limit\u00e9e au r\u00e9seau local. - Unicit\u00e9 : chaque carte r\u00e9seau poss\u00e8de une adresse MAC unique. \ud83d\udca1 Exemple : Adresse MAC = 3C:97:0E:4B:62:A1","title":"\ud83d\udccd Adresse MAC (adressage local)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#adresse-ip-adressage-global","text":"Pour communiquer sur Internet, chaque machine re\u00e7oit aussi une adresse IP . C\u2019est l\u2019adresse logique qui permet de retrouver une machine parmi des milliards d\u2019autres. Caract\u00e9ristiques : - Format : 4 nombres entre 0 et 255 (ex. 192.168.1.12 ). - Base humaine : d\u00e9cimale (base 10). - Base machine : binaire (0 et 1). - Port\u00e9e : mondiale (Internet). \ud83d\udca1 Exemples : - 91.198.174.192 (serveur de Wikipedia en IPv4). - 2a02:ec80:600:ed1a::1 (m\u00eame serveur en IPv6). - 127.0.0.1 \u2192 adresse sp\u00e9ciale \u00ab localhost \u00bb (votre propre machine).","title":"\ud83c\udf10 Adresse IP (adressage global)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#structure-dune-adresse-ip","text":"Une adresse IP identifie une machine sur un r\u00e9seau. Elle se compose de deux parties principales : Partie R\u00e9seau \u2192 identifie le r\u00e9seau auquel appartient la machine. Partie Machine (h\u00f4te) \u2192 identifie la machine dans ce r\u00e9seau. \ud83d\udccc Pour s\u00e9parer ces deux parties, on utilise un masque de sous-r\u00e9seau .","title":"\ud83e\udde9 Structure d\u2019une adresse IP"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#ipv4-internet-protocol-version-4","text":"Format : 32 bits , affich\u00e9s en 4 nombres d\u00e9cimaux (0-255) s\u00e9par\u00e9s par des points. Exemple : 128.40.94.3 Masque : /16 = 255.255.0.0 En binaire : Adresse : 10000000.00101000.01011110.00000011 Masque : 11111111.11111111.00000000.00000000 Partie r\u00e9seau : 128.40.0.0 Partie machine : 94.3 Port\u00e9e : Internet mondial Limitation : environ 4 milliards d\u2019adresses \u2192 probl\u00e8me avec le nombre croissant d\u2019appareils connect\u00e9s.","title":"IPv4 (Internet Protocol version 4)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#ipv6-internet-protocol-version-6","text":"Cr\u00e9\u00e9 pour r\u00e9soudre la p\u00e9nurie d\u2019adresses IPv4 . Format : 128 bits , repr\u00e9sent\u00e9 en 8 groupes de 4 caract\u00e8res hexad\u00e9cimaux s\u00e9par\u00e9s par des deux-points. Exemple : 2a02:ec80:600:ed1a::1 Port\u00e9e : mondiale, permet un nombre quasi infini d\u2019adresses . Partie r\u00e9seau / partie machine : toujours pr\u00e9sentes, mais sur un format plus long.","title":"IPv6 (Internet Protocol version 6)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#comparatif-ipv4-ipv6","text":"Caract\u00e9ristique IPv4 IPv6 Taille 32 bits 128 bits Format 4 nombres d\u00e9cimaux 8 blocs hexad\u00e9cimaux Exemple 192.168.1.25 2a02:ec80:600:ed1a::1 Nombre d\u2019adresses ~4 milliards 340 undecillions (~3,4\u00d710\u00b3\u2078) Objectif Adressage mondial limit\u00e9 R\u00e9soudre la p\u00e9nurie IPv4 \ud83d\udcbb Exp\u00e9rience : d\u00e9couvrir les adresses IP et le r\u00e9seau local de ton ordinateur Ouvrir l\u2019invite de commande. Taper : ipconfig Observer : Ton adresse IPv4 et IPv6 L\u2019adresse de la passerelle (routeur) Les serveurs DNS","title":"Comparatif IPv4 / IPv6"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#a-retenir","text":"Une machine peut avoir IPv4 et IPv6 simultan\u00e9ment. La partie r\u00e9seau permet de savoir si deux machines sont dans le m\u00eame r\u00e9seau local. Le masque de sous-r\u00e9seau d\u00e9termine quelle partie de l\u2019adresse est r\u00e9seau et quelle partie est machine.","title":"\ud83d\udccc \u00c0 retenir"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#resume-comparatif","text":"Caract\u00e9ristique Adresse MAC Adresse IP Nature Physique (grav\u00e9e sur la carte) Logique (attribu\u00e9e par le r\u00e9seau) Format 6 blocs hexad\u00e9cimaux (ex. A1:B2:...) 4 nombres d\u00e9cimaux (IPv4) ou longs hexad\u00e9cimaux (IPv6) Port\u00e9e R\u00e9seau local R\u00e9seau mondial (Internet) Unicit\u00e9 Unique au monde Unique dans un r\u00e9seau donn\u00e9 Exemple 3C:97:0E:4B:62:A1 192.168.1.12 \ud83d\udccc \u00c0 retenir : - L\u2019adresse MAC identifie la carte r\u00e9seau dans un LAN . - L\u2019adresse IP identifie l\u2019 appareil sur Internet . - Les deux sont n\u00e9cessaires pour qu\u2019un ordinateur puisse communiquer.","title":"\ud83d\udcca R\u00e9sum\u00e9 comparatif"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#dns-domain-name-system","text":"Quand vous tapez un nom de site dans votre navigateur, par exemple wikipedia.org , votre ordinateur ne sait pas directement o\u00f9 envoyer les paquets. Il a besoin de l\u2019adresse IP correspondante. Le DNS (Domain Name System) est un service qui fait la correspondance : Nom symbolique \u2192 Adresse IP Exemple : wikipedia.org \u2192 91.198.174.192 (IPv4) ou 2a02:ec80:600:ed1a::1 (IPv6) Les serveurs DNS sont des ordinateurs sp\u00e9cialis\u00e9s qui r\u00e9pondent aux requ\u00eates des ordinateurs pour r\u00e9soudre ces noms. Chaque ordinateur dispose d\u2019un serveur DNS configur\u00e9 (souvent celui de votre FAI) pour interroger le r\u00e9seau. \ud83d\udccc \u00c0 retenir : sans DNS, il faudrait conna\u00eetre l\u2019adresse IP exacte de chaque site pour s\u2019y connecter.","title":"DNS \u2013 Domain Name System"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#le-protocole-tcp-transmission-control-protocol","text":"Quand on envoie un message ou un fichier sur Internet, il n\u2019est jamais envoy\u00e9 d\u2019un seul bloc , mais d\u00e9coup\u00e9 en petits morceaux appel\u00e9s paquets . Chaque paquet contient : - l\u2019adresse de l\u2019 \u00e9metteur (source), - l\u2019adresse du destinataire , - une partie des donn\u00e9es (texte, image, son\u2026). Adresse source Adresse destination Donn\u00e9es","title":"Le protocole TCP (Transmission Control Protocol)"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#role-de-tcp","text":"TCP est un protocole de communication fiable . Il s\u2019assure que : 1. Tous les paquets arrivent \u00e0 destination . - Si un paquet est perdu sur le chemin, TCP le redemande. 2. Les paquets sont remis dans le bon ordre . - Les paquets peuvent arriver dans le d\u00e9sordre, TCP les r\u00e9organise. 3. La congestion du r\u00e9seau est g\u00e9r\u00e9e . - TCP ajuste la vitesse d\u2019envoi pour ne pas saturer le r\u00e9seau. \ud83d\udca1 Exemple concret : - Vous regardez une vid\u00e9o en streaming : - La vid\u00e9o est envoy\u00e9e en milliers de paquets. - TCP s\u2019assure que chaque image arrive et est reconstitu\u00e9e dans le bon ordre .","title":"\ud83d\udccc R\u00f4le de TCP"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#transmission-et-fiabilite","text":"Chaque paquet contient un num\u00e9ro d\u2019ordre et un accus\u00e9 de r\u00e9ception (ACK) . Si un paquet n\u2019est pas accus\u00e9 dans un certain d\u00e9lai, il est renvoy\u00e9 automatiquement . Ordinateur A ---> paquet #1 ---> Ordinateur B <--- ACK #1 ---- Ordinateur A ---> paquet #2 ---> Ordinateur B <--- ACK #2 ---- Cela garantit que tout le message est complet \u00e0 l\u2019arriv\u00e9e.","title":"\ud83d\udd04 Transmission et fiabilit\u00e9"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#limites-de-tcp","text":"TCP ne garantit pas le temps d\u2019arriv\u00e9e des paquets. Utile pour mails ou fichiers. Moins adapt\u00e9 pour les vid\u00e9os en direct ou jeux en ligne , car attendre les paquets manquants cr\u00e9e du lag . Pour ces usages, on utilise souvent UDP (User Datagram Protocol) , qui envoie les paquets sans v\u00e9rification ni r\u00e9ordonnancement \u2192 plus rapide mais moins fiable. \ud83d\udcbb Exp\u00e9rience : tester si un autre appareil ou site est joignable Ouvrir l\u2019invite de commande. Taper : ping wikipedia.org Observer : L\u2019adresse IP de wikipedia.org Le temps aller-retour des paquets Si tous les paquets sont re\u00e7us","title":"\u26a0\ufe0f Limites de TCP"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#a-retenir_1","text":"TCP d\u00e9coupe les donn\u00e9es en paquets , les envoie et les r\u00e9assemble. Il assure la fiabilit\u00e9 : tout paquet perdu est renvoy\u00e9 et les paquets sont remis dans le bon ordre. TCP est le protocole utilis\u00e9 pour la majorit\u00e9 des communications fiables sur Internet (mail, web, transfert de fichiers). Pour les applications temps r\u00e9el (streaming, jeux), UDP est utilis\u00e9 \u00e0 la place.","title":"\ud83d\udccc \u00c0 retenir"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#le-routage","text":"Les paquets ne vont pas directement de l\u2019\u00e9metteur au destinataire. Ils passent par plusieurs routeurs , qui choisissent \u00e0 chaque \u00e9tape le meilleur chemin possible . Sch\u00e9ma simplifi\u00e9 : Ordinateur A \u2192 [Routeur 1] \u2192 [Routeur 2] \u2192 [Routeur 3] \u2192 Ordinateur B Chaque routeur conna\u00eet seulement une carte locale . Si un chemin est bloqu\u00e9, le paquet est envoy\u00e9 ailleurs. Certains paquets peuvent \u00eatre perdus \u2192 TCP les renvoie. \ud83d\udcbb Exp\u00e9rience : suivre le chemin des paquets sur Internet Ouvrir l\u2019invite de commande. Taper : tracert wikipedia.org Observer : Les routeurs travers\u00e9s Les temps de passage Les \u00e9toiles (*) pour routeurs qui ne r\u00e9pondent pas","title":"Le routage"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#experience-pratique-nslookup","text":"\ud83d\udcbb Objectif : r\u00e9soudre un nom de domaine en adresse IP et identifier le serveur DNS utilis\u00e9 Ouvrir l\u2019invite de commande sur Windows. Taper la commande : nslookup wikipedia.org Observer : L\u2019 adresse IP retourn\u00e9e pour wikipedia.org Le serveur DNS qui a r\u00e9pondu Comparer avec l\u2019adresse IP obtenue avec ping wikipedia.org pour voir que c\u2019est la m\u00eame. \ud83d\udca1 Lien avec le cours : cette exp\u00e9rience montre comment un nom de site est traduit en adresse IP avant que les paquets soient envoy\u00e9s.","title":"\ud83d\udd39 Exp\u00e9rience pratique : nslookup"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#les-composants-materiels-dun-reseau","text":"Pour qu\u2019un r\u00e9seau fonctionne, plusieurs \u00e9l\u00e9ments mat\u00e9riels sont n\u00e9cessaires :","title":"Les composants mat\u00e9riels d\u2019un r\u00e9seau"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#1-machines","text":"Ce sont les appareils qui communiquent entre eux : Ordinateurs, tablettes, smartphones, consoles de jeu, serveurs. Elles envoient et re\u00e7oivent des donn\u00e9es via le r\u00e9seau.","title":"\ud83d\udcbb 1. Machines"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#2-switch","text":"Dispositif qui relie plusieurs machines localement dans un r\u00e9seau (LAN). Exemple : un switch dans une salle informatique permet aux ordinateurs de communiquer entre eux rapidement. Fonction : re\u00e7oit un paquet sur un port et l\u2019envoie uniquement au port correspondant \u00e0 la machine destinataire .","title":"\ud83d\udd00 2. Switch"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#3-routeur","text":"Permet de connecter un r\u00e9seau local \u00e0 Internet ou \u00e0 d\u2019autres r\u00e9seaux. Exemple : la box Internet \u00e0 la maison est un routeur. Fonction : acheminer les paquets entre les diff\u00e9rents r\u00e9seaux selon leur adresse IP.","title":"\ud83c\udf10 3. Routeur"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#4-supports-de-transmission","text":"Permettent de transporter physiquement les donn\u00e9es entre machines et \u00e9quipements r\u00e9seau. Types : C\u00e2bles Ethernet (filaire, stable et rapide) Wi-Fi (sans fil, pratique mais plus sensible aux interf\u00e9rences) Fibre optique (tr\u00e8s haut d\u00e9bit, longue distance)","title":"\ud83d\udce1 4. Supports de transmission"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#modele-en-couches-tcpip","text":"Le protocole TCP/IP organise la communication en 4 couches , chacune ayant un r\u00f4le sp\u00e9cifique : 1 Couche Application \ud83d\udcf1 Utilis\u00e9e par les logiciels : navigateur web, messagerie, jeux en ligne. Contient les donn\u00e9es utilisateur . 2 Couche Transport \ud83d\ude9b Assure le transport fiable des donn\u00e9es . Garantit que les paquets arrivent complets et dans le bon ordre (TCP). 3 Couche Internet \ud83d\uddfa\ufe0f G\u00e8re l\u2019adressage et le routage . D\u00e9termine le chemin optimal pour les paquets vers leur destination. 4 Couche Acc\u00e8s R\u00e9seau \ud83d\udd0c Assure la transmission physique des donn\u00e9es : signaux \u00e9lectriques, optiques ou radio. Utilise les supports de transmission (Ethernet, Wi-Fi, fibre).","title":"Mod\u00e8le en couches TCP/IP"},{"location":"Secondes/Chapitres/Internet%20-%20Protocoles%20et%20routage%20des%20paquets/#encapsulation-et-desencapsulation","text":"Quand une machine envoie des donn\u00e9es : Les donn\u00e9es descendent les couches en se faisant encapsuler \u2192 chaque couche ajoute son en-t\u00eate . \ud83d\udcf1 Application : donn\u00e9es utilisateur \u2b07\ufe0f \ud83d\ude9b Transport : + en-t\u00eate TCP \u2b07\ufe0f \ud83d\uddfa\ufe0f Internet : + en-t\u00eate IP \u2b07\ufe0f \ud83d\udd0c Acc\u00e8s r\u00e9seau : + en-t\u00eate Ethernet \u00c0 la r\u00e9ception, les donn\u00e9es remontent les couches en se faisant d\u00e9sencapsuler \u2192 chaque couche retire son en-t\u00eate pour r\u00e9cup\u00e9rer les informations originales. \ud83d\udd0c Acc\u00e8s r\u00e9seau : - en-t\u00eate Ethernet \u2b06\ufe0f \ud83d\uddfa\ufe0f Internet : - en-t\u00eate IP \u2b06\ufe0f \ud83d\ude9b Transport : - en-t\u00eate TCP \u2b06\ufe0f \ud83d\udcf1 Application : donn\u00e9es utilisateur \ud83d\udca1 \u00c0 retenir : - L\u2019encapsulation permet \u00e0 chaque couche de g\u00e9rer ses propres fonctions sans se pr\u00e9occuper des autres. - La d\u00e9sencapsulation permet de reconstituer les donn\u00e9es correctement \u00e0 l\u2019arriv\u00e9e.","title":"Encapsulation et d\u00e9sencapsulation"},{"location":"Secondes/Chapitres/bases_python/","text":"SNT \u2014 Base de Python Une page d\u2019introduction pour d\u00e9buter en Python : afficher du texte avec print , utiliser des variables (les \u00ab bo\u00eetes nomm\u00e9es \u00bb) et demander une saisie clavier avec input() . print \u2014 afficher dans le terminal print() sert \u00e0 afficher un message ou une valeur \u00e0 l\u2019\u00e9cran (dans le terminal/console). Quand on veut utiliser des valeurs textuelles ( cha\u00eenes de caract\u00e8res ), on les \u00e9crit entre guillemets. Comme \u00e7a, le programme fait la diff\u00e9rence entre le code et les cha\u00eenes de caract\u00e8res. print(\"Bonjour\") print(2 + 3) message = \"Bienvenue en SNT !\" print(message) Ce programme affichera : Bonjour 5 Bienvenue en SNT ! Astuces On peut afficher plusieurs \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules : prenom = \"Ana\" age = 15 print(\"Je m'appelle\", prenom, \"et j'ai\", age, \"ans.\") Les variables \u2014 des bo\u00eetes nomm\u00e9es Une variable est comme une bo\u00eete avec un nom dans laquelle on range une valeur . On peut lire ou modifier cette valeur. a = 5 b = 10 c = a + b print(c) a = 3 print(c) c = a + b print(c) Ce programme affichera : 15 15 13 D\u00e9cortiquons-le : On a cr\u00e9\u00e9 3 variables. a = 5 b = 10 c = a + b = 15 Puis nous avons modifi\u00e9 la valeur de a par 3, d\u00e9sormais, a = 3 . Ce qui ne modifie pas la valeur de c , car ce que l'on stocke c'est la valeur et pas le calcul. Donc c = 15 . Si on veut que c soit de nouveau \u00e9gal \u00e0 a+b , il faut de nouveau le calculer : c = a + b . input \u2014 demander une valeur \u00e0 l\u2019utilisateur input() pose une question et r\u00e9cup\u00e8re une r\u00e9ponse au format texte . nom = input(\"Comment t appelles-tu ? \") print(nom) Ce programme affichera : Comment t appelles-tu ? Il faudra alors \u00e9crire notre pr\u00e9nom, par exemple Tom . La variable nom aura la valeur \"Tom\" . Il affichera ensuite : Tom En Python, print et input sont ce qu\u2019on appelle des fonctions . Comme en math\u00e9matiques, une fonction peut prendre des valeurs en entr\u00e9e et renvoyer un r\u00e9sultat . Exemple en math\u00e9matiques Soit la fonction : f(x) : 2x La fonction f prend en entr\u00e9e une valeur x . Elle renvoie en sortie le r\u00e9sultat du calcul 2x . En Python - print(...) prend en entr\u00e9e ce que l\u2019on veut afficher \u00e0 l\u2019\u00e9cran . - input(...) prend en entr\u00e9e un texte \u00e0 afficher (c\u2019est optionnel) et renvoie ce que l\u2019utilisateur tape au clavier . On met toujours des parenth\u00e8ses apr\u00e8s le nom d\u2019une fonction, m\u00eame si elle n\u2019a aucune valeur en entr\u00e9e .","title":"Bases de Python"},{"location":"Secondes/Chapitres/bases_python/#snt-base-de-python","text":"Une page d\u2019introduction pour d\u00e9buter en Python : afficher du texte avec print , utiliser des variables (les \u00ab bo\u00eetes nomm\u00e9es \u00bb) et demander une saisie clavier avec input() .","title":"SNT \u2014 Base de Python"},{"location":"Secondes/Chapitres/bases_python/#print-afficher-dans-le-terminal","text":"print() sert \u00e0 afficher un message ou une valeur \u00e0 l\u2019\u00e9cran (dans le terminal/console). Quand on veut utiliser des valeurs textuelles ( cha\u00eenes de caract\u00e8res ), on les \u00e9crit entre guillemets. Comme \u00e7a, le programme fait la diff\u00e9rence entre le code et les cha\u00eenes de caract\u00e8res. print(\"Bonjour\") print(2 + 3) message = \"Bienvenue en SNT !\" print(message) Ce programme affichera : Bonjour 5 Bienvenue en SNT ! Astuces On peut afficher plusieurs \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules : prenom = \"Ana\" age = 15 print(\"Je m'appelle\", prenom, \"et j'ai\", age, \"ans.\")","title":"print \u2014 afficher dans le terminal"},{"location":"Secondes/Chapitres/bases_python/#les-variables-des-boites-nommees","text":"Une variable est comme une bo\u00eete avec un nom dans laquelle on range une valeur . On peut lire ou modifier cette valeur. a = 5 b = 10 c = a + b print(c) a = 3 print(c) c = a + b print(c) Ce programme affichera : 15 15 13 D\u00e9cortiquons-le : On a cr\u00e9\u00e9 3 variables. a = 5 b = 10 c = a + b = 15 Puis nous avons modifi\u00e9 la valeur de a par 3, d\u00e9sormais, a = 3 . Ce qui ne modifie pas la valeur de c , car ce que l'on stocke c'est la valeur et pas le calcul. Donc c = 15 . Si on veut que c soit de nouveau \u00e9gal \u00e0 a+b , il faut de nouveau le calculer : c = a + b .","title":"Les variables \u2014 des bo\u00eetes nomm\u00e9es"},{"location":"Secondes/Chapitres/bases_python/#input-demander-une-valeur-a-lutilisateur","text":"input() pose une question et r\u00e9cup\u00e8re une r\u00e9ponse au format texte . nom = input(\"Comment t appelles-tu ? \") print(nom) Ce programme affichera : Comment t appelles-tu ? Il faudra alors \u00e9crire notre pr\u00e9nom, par exemple Tom . La variable nom aura la valeur \"Tom\" . Il affichera ensuite : Tom En Python, print et input sont ce qu\u2019on appelle des fonctions . Comme en math\u00e9matiques, une fonction peut prendre des valeurs en entr\u00e9e et renvoyer un r\u00e9sultat . Exemple en math\u00e9matiques Soit la fonction : f(x) : 2x La fonction f prend en entr\u00e9e une valeur x . Elle renvoie en sortie le r\u00e9sultat du calcul 2x . En Python - print(...) prend en entr\u00e9e ce que l\u2019on veut afficher \u00e0 l\u2019\u00e9cran . - input(...) prend en entr\u00e9e un texte \u00e0 afficher (c\u2019est optionnel) et renvoie ce que l\u2019utilisateur tape au clavier . On met toujours des parenth\u00e8ses apr\u00e8s le nom d\u2019une fonction, m\u00eame si elle n\u2019a aucune valeur en entr\u00e9e .","title":"input \u2014 demander une valeur \u00e0 l\u2019utilisateur"},{"location":"Terminales/Terminales/","text":"NSI - Terminales R\u00e9visions Rappels de premi\u00e8res Exercices de r\u00e9vision Chapitres \ud83d\udd39 1 - Programmation Orient\u00e9 Objet","title":"Accueil"},{"location":"Terminales/Terminales/#nsi-terminales","text":"","title":"NSI - Terminales"},{"location":"Terminales/Terminales/#revisions","text":"Rappels de premi\u00e8res Exercices de r\u00e9vision","title":"R\u00e9visions"},{"location":"Terminales/Terminales/#chapitres","text":"\ud83d\udd39 1 - Programmation Orient\u00e9 Objet","title":"Chapitres"},{"location":"Terminales/correction/","text":"Correction Exercice 1 : Bonjour ! Objectif Demander le pr\u00e9nom de l\u2019utilisateur et afficher un message de salutation. Explication pas \u00e0 pas input() lit une cha\u00eene tap\u00e9e par l\u2019utilisateur et la renvoie. print() affiche du texte \u00e0 l'\u00e9cran. On peut afficher plusieurs \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules ; Python ins\u00e8re des espaces automatiquement entre eux. Erreurs fr\u00e9quentes Essayer de convertir le pr\u00e9nom en nombre (inutile). Oublier les guillemets dans le message de input() (pas grave mais moins clair pour l'utilisateur). Code corrig\u00e9 # On demande le pr\u00e9nom \u00e0 l'utilisateur et on l'affiche dans une phrase prenom = input(\"Entrez votre pr\u00e9nom : \") # input() renvoie une cha\u00eene (str) print(\"Bonjour,\", prenom, \"!\") # print concat\u00e8ne avec des espaces automatiques Exemple d'ex\u00e9cution Si l'utilisateur tape Alice , le programme affiche : Bonjour, Alice ! Exercice 2 : Op\u00e9rations simples Objectif Lire deux nombres et afficher leur somme, produit et diff\u00e9rence. Explication pas \u00e0 pas input() renvoie une cha\u00eene. Pour faire des op\u00e9rations num\u00e9riques, on convertit avec int() (entiers) ou float() (nombres \u00e0 virgule). On stocke les deux nombres dans des variables a et b . On utilise les op\u00e9rateurs + , * , - pour les calculs. print() affiche les r\u00e9sultats. Erreurs fr\u00e9quentes Oublier de convertir en int / float : concat\u00e9nation au lieu d'addition (ex : '2' + '3' donne '23' ). Conversion en int alors que l'utilisateur tape 3.5 (provoque ValueError ). Si on attend des d\u00e9cimaux, utiliser float() . Code corrig\u00e9 # Lire deux nombres et afficher les r\u00e9sultats a = int(input(\"Entrez un premier nombre : \")) # convertir en entier b = int(input(\"Entrez un deuxi\u00e8me nombre : \")) print(\"Somme :\", a + b) # addition print(\"Produit :\", a * b) # multiplication print(\"Diff\u00e9rence :\", a - b) # soustraction Exercice 4 : Tuple et liste Objectif Utiliser un tuple pour stocker des mati\u00e8res (fixe) et une liste pour stocker des notes (modifiable). Calculer la moyenne. Explication pas \u00e0 pas Un tuple est d\u00e9fini avec des parenth\u00e8ses (...) et est immuable : on ne peut pas ajouter d'\u00e9l\u00e9ments. Une liste est d\u00e9finie avec des crochets [...] et on peut utiliser append() pour ajouter des \u00e9l\u00e9ments. sum(notes) calcule la somme des \u00e9l\u00e9ments d'une liste num\u00e9rique. len(notes) donne le nombre d'\u00e9l\u00e9ments. La moyenne est sum / len . Toujours v\u00e9rifier que len(notes) n'est pas z\u00e9ro avant de diviser (\u00e9viter division par z\u00e9ro). Erreurs fr\u00e9quentes Tenter d'utiliser append() sur un tuple (provoque une erreur). Diviser par z\u00e9ro si la liste est vide. Code corrig\u00e9 # Tuple fixe pour les mati\u00e8res matieres = (\"Maths\", \"NSI\", \"Physique\") # Liste vide pour recueillir les notes notes = [] # On demande 3 notes \u00e0 l'utilisateur for i in range(3): note = int(input(\"Entrez la note : \")) # on convertit en int notes.append(note) # on ajoute \u00e0 la liste # Calcul de la moyenne (on sait qu'il y a 3 notes ici) moyenne = sum(notes) / len(notes) print(\"Vos mati\u00e8res :\", matieres) print(\"Vos notes :\", notes) print(\"Moyenne :\", moyenne) Exercice 5 : Boucles Objectif Afficher les carr\u00e9s des nombres de 1 \u00e0 10. Explication pas \u00e0 pas range(1, 11) g\u00e9n\u00e8re les entiers 1,2,...,10 (le second argument est exclu). i**2 calcule le carr\u00e9 de i . Boucler permet d'\u00e9viter d'\u00e9crire 10 lignes r\u00e9p\u00e9titives. Code corrig\u00e9 for i in range(1, 11): # parcourt 1 \u00e0 10 print(i, \"au carr\u00e9 =\", i**2) Erreurs fr\u00e9quentes Utiliser range(10) et penser que \u00e7a commence \u00e0 1 (i prendra les valeurs de 0 \u00e0 9). Confondre i*i et i**2 (les deux fonctionnent, mais ** est l'op\u00e9rateur d'exponentiation). Exercice 6 : Conditions Objectif Classer une personne en \u00ab enfant \u00bb, \u00ab adolescent \u00bb ou \u00ab adulte \u00bb selon son \u00e2ge. Explication pas \u00e0 pas On lit l'\u00e2ge avec int() . if teste la premi\u00e8re condition ; si elle est vraie, Python ex\u00e9cute le bloc associ\u00e9 et saute le reste. elif si la premi\u00e8re condition \u00e9tait fausse, teste une autre condition, si elle est vraie, Python ex\u00e9cute le bloc associ\u00e9 et saute le reste. else si toutes les autres conditions \u00e9taient fausses, Python ex\u00e9cute le bloc associ\u00e9. Code corrig\u00e9 age = int(input(\"Quel est ton \u00e2ge ? \")) if age < 12: # moins de 12 ans => enfant print(\"enfant\") elif age <= 17: # entre 12 et 17 inclus => adolescent print(\"adolescent\") else: # 18 ans et plus => adulte print(\"adulte\") Erreurs fr\u00e9quentes Mettre les conditions dans le mauvais ordre : ici l'ordre pr\u00e9sent\u00e9 fonctionne (test du plus petit d'abord). Utiliser plusieurs if ind\u00e9pendants au lieu de elif : cela pourrait afficher plusieurs lignes pour une m\u00eame entr\u00e9e. Exercice 7 : Mot de passe Objectif Demander un mot de passe et r\u00e9p\u00e9ter la demande tant qu'il est incorrect. Explication pas \u00e0 pas On utilise une boucle while dont la condition reste vraie tant que le mot de passe n'est pas correct. On met la saisie \u00e0 l'int\u00e9rieur de la boucle pour permettre plusieurs tentatives. Une fois que la condition devient fausse (mot de passe correct), la boucle s'arr\u00eate. Code corrig\u00e9 mdp = \"\" # initialisation while mdp != \"python123\": # tant que le mot de passe n'est pas \u00e9gal \u00e0 la cha\u00eene attendue mdp = input(\"Entrez le mot de passe : \") print(\"Mot de passe correct !\") Erreurs fr\u00e9quentes Oublier d'initialiser mdp avant la boucle (la premi\u00e8re comparaison doit \u00eatre possible). Utiliser == \u00e0 l'int\u00e9rieur de la boucle sans mise \u00e0 jour de mdp (boucle infinie). Exercice 8 : Fonction simple Objectif \u00c9crire une fonction aire_rectangle(longueur, largeur) qui renvoie l'aire. Explication pas \u00e0 pas Une fonction est d\u00e9finie avec def nom(params): . return renvoie la valeur calcul\u00e9e \u00e0 l'appelant. Pour accepter des nombres d\u00e9cimaux, on convertit les entr\u00e9es en float . Code corrig\u00e9 def aire_rectangle(longueur, largeur): \"\"\"Retourne l'aire d'un rectangle. longueur et largeur sont des nombres (float ou int). \"\"\" return longueur * largeur # Lecture des valeurs utilisateur L = float(input(\"Longueur : \")) l = float(input(\"Largeur : \")) # Appel de la fonction et affichage du r\u00e9sultat print(\"Aire =\", aire_rectangle(L, l)) Erreurs fr\u00e9quentes Oublier return dans la fonction (la fonction renverra None ). Convertir en int alors qu'on veut garder les d\u00e9cimales. Exercice 9 : Plus grand \u00e9l\u00e9ment Objectif \u00c9crire max_liste(liste) sans utiliser la fonction max() int\u00e9gr\u00e9e. Explication pas \u00e0 pas On suppose que le premier \u00e9l\u00e9ment est le maximum initial. On parcourt la liste et, si on trouve un \u00e9l\u00e9ment plus grand, on met \u00e0 jour maximum . \u00c0 la fin, on retourne maximum . Erreurs fr\u00e9quentes Oublier que la liste peut \u00eatre vide. Ici on teste sur une liste connue non vide. Utiliser max() (ici l'objectif est d'\u00e9crire la logique soi-m\u00eame). Code corrig\u00e9 def max_liste(liste): # On suppose que la liste contient au moins un \u00e9l\u00e9ment maximum = liste[0] for element in liste: if element > maximum: maximum = element return maximum # Exemple de test nombres = [3, 17, 9, 25, 4] print(\"Liste :\", nombres) print(\"Plus grand \u00e9l\u00e9ment :\", max_liste(nombres)) Exercice 10 : Petit projet Objectif Lire des notes jusqu'\u00e0 ce que l'utilisateur tape -1 , puis afficher la liste, la moyenne et le nombre de notes >= moyenne. Explication pas \u00e0 pas On cr\u00e9e une liste notes vide. On lit des notes dans une boucle while jusqu'\u00e0 la valeur sentinelle -1 . On n'ajoute -1 pas \u00e0 la liste (contr\u00f4le n\u00e9cessaire). Si la liste est non vide, on calcule moyenne = sum(notes) / len(notes) . On parcourt la liste pour compter les \u00e9l\u00e9ments sup\u00e9rieurs ou \u00e9gaux \u00e0 la moyenne. Erreurs fr\u00e9quentes Oublier d'exclure -1 (alors la moyenne est fauss\u00e9e). Tenter de calculer la moyenne sur une liste vide (division par z\u00e9ro). Code corrig\u00e9 notes = [] note = 0 # valeur initiale (autre que -1) # Lecture des notes while note != -1: # On convertit en int ; si l'utilisateur tape une valeur non num\u00e9rique, il y aura une erreur note = int(input(\"Entrez une note (-1 pour arr\u00eater) : \")) if note != -1: notes.append(note) # on n'ajoute pas -1 # Affichage des notes saisies print(\"Toutes les notes :\", notes) # Calculs seulement si la liste contient au moins une note if len(notes) > 0: moyenne = sum(notes) / len(notes) print(\"Moyenne :\", moyenne) # Compter les notes >= moyenne nb_sup = 0 for n in notes: if n >= moyenne: nb_sup += 1 print(\"Nombre de notes >= moyenne :\", nb_sup) else: print(\"Aucune note entr\u00e9e.\") Remarque Si tu veux ignorer les notes invalides (ex : n\u00e9gatives, sup\u00e9rieures \u00e0 20), ajoute des v\u00e9rifications avant append() . On pourrait aussi afficher la m\u00e9diane, l'\u00e9cart-type, etc., mais cela d\u00e9passe l'exercice.","title":"Correction"},{"location":"Terminales/correction/#correction","text":"","title":"Correction"},{"location":"Terminales/correction/#exercice-1-bonjour","text":"","title":"Exercice 1 : Bonjour !"},{"location":"Terminales/correction/#objectif","text":"Demander le pr\u00e9nom de l\u2019utilisateur et afficher un message de salutation.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas","text":"input() lit une cha\u00eene tap\u00e9e par l\u2019utilisateur et la renvoie. print() affiche du texte \u00e0 l'\u00e9cran. On peut afficher plusieurs \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules ; Python ins\u00e8re des espaces automatiquement entre eux.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#erreurs-frequentes","text":"Essayer de convertir le pr\u00e9nom en nombre (inutile). Oublier les guillemets dans le message de input() (pas grave mais moins clair pour l'utilisateur).","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#code-corrige","text":"# On demande le pr\u00e9nom \u00e0 l'utilisateur et on l'affiche dans une phrase prenom = input(\"Entrez votre pr\u00e9nom : \") # input() renvoie une cha\u00eene (str) print(\"Bonjour,\", prenom, \"!\") # print concat\u00e8ne avec des espaces automatiques","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#exemple-dexecution","text":"Si l'utilisateur tape Alice , le programme affiche : Bonjour, Alice !","title":"Exemple d'ex\u00e9cution"},{"location":"Terminales/correction/#exercice-2-operations-simples","text":"","title":"Exercice 2 : Op\u00e9rations simples"},{"location":"Terminales/correction/#objectif_1","text":"Lire deux nombres et afficher leur somme, produit et diff\u00e9rence.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_1","text":"input() renvoie une cha\u00eene. Pour faire des op\u00e9rations num\u00e9riques, on convertit avec int() (entiers) ou float() (nombres \u00e0 virgule). On stocke les deux nombres dans des variables a et b . On utilise les op\u00e9rateurs + , * , - pour les calculs. print() affiche les r\u00e9sultats.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#erreurs-frequentes_1","text":"Oublier de convertir en int / float : concat\u00e9nation au lieu d'addition (ex : '2' + '3' donne '23' ). Conversion en int alors que l'utilisateur tape 3.5 (provoque ValueError ). Si on attend des d\u00e9cimaux, utiliser float() .","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#code-corrige_1","text":"# Lire deux nombres et afficher les r\u00e9sultats a = int(input(\"Entrez un premier nombre : \")) # convertir en entier b = int(input(\"Entrez un deuxi\u00e8me nombre : \")) print(\"Somme :\", a + b) # addition print(\"Produit :\", a * b) # multiplication print(\"Diff\u00e9rence :\", a - b) # soustraction","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#exercice-4-tuple-et-liste","text":"","title":"Exercice 4 : Tuple et liste"},{"location":"Terminales/correction/#objectif_2","text":"Utiliser un tuple pour stocker des mati\u00e8res (fixe) et une liste pour stocker des notes (modifiable). Calculer la moyenne.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_2","text":"Un tuple est d\u00e9fini avec des parenth\u00e8ses (...) et est immuable : on ne peut pas ajouter d'\u00e9l\u00e9ments. Une liste est d\u00e9finie avec des crochets [...] et on peut utiliser append() pour ajouter des \u00e9l\u00e9ments. sum(notes) calcule la somme des \u00e9l\u00e9ments d'une liste num\u00e9rique. len(notes) donne le nombre d'\u00e9l\u00e9ments. La moyenne est sum / len . Toujours v\u00e9rifier que len(notes) n'est pas z\u00e9ro avant de diviser (\u00e9viter division par z\u00e9ro).","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#erreurs-frequentes_2","text":"Tenter d'utiliser append() sur un tuple (provoque une erreur). Diviser par z\u00e9ro si la liste est vide.","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#code-corrige_2","text":"# Tuple fixe pour les mati\u00e8res matieres = (\"Maths\", \"NSI\", \"Physique\") # Liste vide pour recueillir les notes notes = [] # On demande 3 notes \u00e0 l'utilisateur for i in range(3): note = int(input(\"Entrez la note : \")) # on convertit en int notes.append(note) # on ajoute \u00e0 la liste # Calcul de la moyenne (on sait qu'il y a 3 notes ici) moyenne = sum(notes) / len(notes) print(\"Vos mati\u00e8res :\", matieres) print(\"Vos notes :\", notes) print(\"Moyenne :\", moyenne)","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#exercice-5-boucles","text":"","title":"Exercice 5 : Boucles"},{"location":"Terminales/correction/#objectif_3","text":"Afficher les carr\u00e9s des nombres de 1 \u00e0 10.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_3","text":"range(1, 11) g\u00e9n\u00e8re les entiers 1,2,...,10 (le second argument est exclu). i**2 calcule le carr\u00e9 de i . Boucler permet d'\u00e9viter d'\u00e9crire 10 lignes r\u00e9p\u00e9titives.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#code-corrige_3","text":"for i in range(1, 11): # parcourt 1 \u00e0 10 print(i, \"au carr\u00e9 =\", i**2)","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#erreurs-frequentes_3","text":"Utiliser range(10) et penser que \u00e7a commence \u00e0 1 (i prendra les valeurs de 0 \u00e0 9). Confondre i*i et i**2 (les deux fonctionnent, mais ** est l'op\u00e9rateur d'exponentiation).","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#exercice-6-conditions","text":"","title":"Exercice 6 : Conditions"},{"location":"Terminales/correction/#objectif_4","text":"Classer une personne en \u00ab enfant \u00bb, \u00ab adolescent \u00bb ou \u00ab adulte \u00bb selon son \u00e2ge.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_4","text":"On lit l'\u00e2ge avec int() . if teste la premi\u00e8re condition ; si elle est vraie, Python ex\u00e9cute le bloc associ\u00e9 et saute le reste. elif si la premi\u00e8re condition \u00e9tait fausse, teste une autre condition, si elle est vraie, Python ex\u00e9cute le bloc associ\u00e9 et saute le reste. else si toutes les autres conditions \u00e9taient fausses, Python ex\u00e9cute le bloc associ\u00e9.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#code-corrige_4","text":"age = int(input(\"Quel est ton \u00e2ge ? \")) if age < 12: # moins de 12 ans => enfant print(\"enfant\") elif age <= 17: # entre 12 et 17 inclus => adolescent print(\"adolescent\") else: # 18 ans et plus => adulte print(\"adulte\")","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#erreurs-frequentes_4","text":"Mettre les conditions dans le mauvais ordre : ici l'ordre pr\u00e9sent\u00e9 fonctionne (test du plus petit d'abord). Utiliser plusieurs if ind\u00e9pendants au lieu de elif : cela pourrait afficher plusieurs lignes pour une m\u00eame entr\u00e9e.","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#exercice-7-mot-de-passe","text":"","title":"Exercice 7 : Mot de passe"},{"location":"Terminales/correction/#objectif_5","text":"Demander un mot de passe et r\u00e9p\u00e9ter la demande tant qu'il est incorrect.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_5","text":"On utilise une boucle while dont la condition reste vraie tant que le mot de passe n'est pas correct. On met la saisie \u00e0 l'int\u00e9rieur de la boucle pour permettre plusieurs tentatives. Une fois que la condition devient fausse (mot de passe correct), la boucle s'arr\u00eate.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#code-corrige_5","text":"mdp = \"\" # initialisation while mdp != \"python123\": # tant que le mot de passe n'est pas \u00e9gal \u00e0 la cha\u00eene attendue mdp = input(\"Entrez le mot de passe : \") print(\"Mot de passe correct !\")","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#erreurs-frequentes_5","text":"Oublier d'initialiser mdp avant la boucle (la premi\u00e8re comparaison doit \u00eatre possible). Utiliser == \u00e0 l'int\u00e9rieur de la boucle sans mise \u00e0 jour de mdp (boucle infinie).","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#exercice-8-fonction-simple","text":"","title":"Exercice 8 : Fonction simple"},{"location":"Terminales/correction/#objectif_6","text":"\u00c9crire une fonction aire_rectangle(longueur, largeur) qui renvoie l'aire.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_6","text":"Une fonction est d\u00e9finie avec def nom(params): . return renvoie la valeur calcul\u00e9e \u00e0 l'appelant. Pour accepter des nombres d\u00e9cimaux, on convertit les entr\u00e9es en float .","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#code-corrige_6","text":"def aire_rectangle(longueur, largeur): \"\"\"Retourne l'aire d'un rectangle. longueur et largeur sont des nombres (float ou int). \"\"\" return longueur * largeur # Lecture des valeurs utilisateur L = float(input(\"Longueur : \")) l = float(input(\"Largeur : \")) # Appel de la fonction et affichage du r\u00e9sultat print(\"Aire =\", aire_rectangle(L, l))","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#erreurs-frequentes_6","text":"Oublier return dans la fonction (la fonction renverra None ). Convertir en int alors qu'on veut garder les d\u00e9cimales.","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#exercice-9-plus-grand-element","text":"","title":"Exercice 9 : Plus grand \u00e9l\u00e9ment"},{"location":"Terminales/correction/#objectif_7","text":"\u00c9crire max_liste(liste) sans utiliser la fonction max() int\u00e9gr\u00e9e.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_7","text":"On suppose que le premier \u00e9l\u00e9ment est le maximum initial. On parcourt la liste et, si on trouve un \u00e9l\u00e9ment plus grand, on met \u00e0 jour maximum . \u00c0 la fin, on retourne maximum .","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#erreurs-frequentes_7","text":"Oublier que la liste peut \u00eatre vide. Ici on teste sur une liste connue non vide. Utiliser max() (ici l'objectif est d'\u00e9crire la logique soi-m\u00eame).","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#code-corrige_7","text":"def max_liste(liste): # On suppose que la liste contient au moins un \u00e9l\u00e9ment maximum = liste[0] for element in liste: if element > maximum: maximum = element return maximum # Exemple de test nombres = [3, 17, 9, 25, 4] print(\"Liste :\", nombres) print(\"Plus grand \u00e9l\u00e9ment :\", max_liste(nombres))","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#exercice-10-petit-projet","text":"","title":"Exercice 10 : Petit projet"},{"location":"Terminales/correction/#objectif_8","text":"Lire des notes jusqu'\u00e0 ce que l'utilisateur tape -1 , puis afficher la liste, la moyenne et le nombre de notes >= moyenne.","title":"Objectif"},{"location":"Terminales/correction/#explication-pas-a-pas_8","text":"On cr\u00e9e une liste notes vide. On lit des notes dans une boucle while jusqu'\u00e0 la valeur sentinelle -1 . On n'ajoute -1 pas \u00e0 la liste (contr\u00f4le n\u00e9cessaire). Si la liste est non vide, on calcule moyenne = sum(notes) / len(notes) . On parcourt la liste pour compter les \u00e9l\u00e9ments sup\u00e9rieurs ou \u00e9gaux \u00e0 la moyenne.","title":"Explication pas \u00e0 pas"},{"location":"Terminales/correction/#erreurs-frequentes_8","text":"Oublier d'exclure -1 (alors la moyenne est fauss\u00e9e). Tenter de calculer la moyenne sur une liste vide (division par z\u00e9ro).","title":"Erreurs fr\u00e9quentes"},{"location":"Terminales/correction/#code-corrige_8","text":"notes = [] note = 0 # valeur initiale (autre que -1) # Lecture des notes while note != -1: # On convertit en int ; si l'utilisateur tape une valeur non num\u00e9rique, il y aura une erreur note = int(input(\"Entrez une note (-1 pour arr\u00eater) : \")) if note != -1: notes.append(note) # on n'ajoute pas -1 # Affichage des notes saisies print(\"Toutes les notes :\", notes) # Calculs seulement si la liste contient au moins une note if len(notes) > 0: moyenne = sum(notes) / len(notes) print(\"Moyenne :\", moyenne) # Compter les notes >= moyenne nb_sup = 0 for n in notes: if n >= moyenne: nb_sup += 1 print(\"Nombre de notes >= moyenne :\", nb_sup) else: print(\"Aucune note entr\u00e9e.\")","title":"Code corrig\u00e9"},{"location":"Terminales/correction/#remarque","text":"Si tu veux ignorer les notes invalides (ex : n\u00e9gatives, sup\u00e9rieures \u00e0 20), ajoute des v\u00e9rifications avant append() . On pourrait aussi afficher la m\u00e9diane, l'\u00e9cart-type, etc., mais cela d\u00e9passe l'exercice.","title":"Remarque"},{"location":"Terminales/rappel/","text":"R\u00e9visions Python - Premi\u00e8re Ce document reprend les notions essentielles de Python vues en Premi\u00e8re, avec explications, exemples et rappels importants. 1. Affichage avec print() La fonction print() permet d\u2019afficher du texte ou des r\u00e9sultats \u00e0 l\u2019\u00e9cran. On peut afficher plusieurs \u00e9l\u00e9ments en les s\u00e9parant par des virgules. print(\"Bonjour\") # affiche : Bonjour print(3 + 5) # affiche : 8 print(\"R\u00e9sultat :\", 3 * 4) # affiche : R\u00e9sultat : 12 \ud83d\udc49 Astuce : print() ajoute automatiquement un retour \u00e0 la ligne \u00e0 la fin de l\u2019affichage. 2. Lire une valeur avec input() La fonction input() permet de demander une saisie \u00e0 l\u2019utilisateur . Le texte entre parenth\u00e8ses est un message affich\u00e9 \u00e0 l\u2019\u00e9cran. \u26a0\ufe0f Attention : la valeur saisie est toujours de type cha\u00eene de caract\u00e8res ( str ). nom = input(\"Quel est ton nom ? \") print(\"Bonjour\", nom) 3. Conversion avec int() Si l\u2019on veut travailler avec des nombres, il faut convertir la cha\u00eene saisie. La fonction int() transforme une cha\u00eene en entier . age = int(input(\"Quel est ton \u00e2ge ? \")) print(\"Dans 10 ans tu auras\", age + 10) \u26a0\ufe0f Si l\u2019utilisateur tape un texte qui n\u2019est pas un nombre, int() provoque une erreur. 4. Les bool\u00e9ens ( True , False ) Un bool\u00e9en est un type de donn\u00e9e qui peut avoir deux valeurs seulement : True \u2192 vrai False \u2192 faux Ils apparaissent souvent comme r\u00e9sultat d\u2019une comparaison. a = 5 b = 10 print(a < b) # True (car 5 est plus petit que 10) print(a == b) # False (car 5 n\u2019est pas \u00e9gal \u00e0 10) print(a != b) # True (car 5 est diff\u00e9rent de 10) \ud83d\udc49 On utilise beaucoup les bool\u00e9ens dans les conditions et les boucles. 5. Les cha\u00eenes de caract\u00e8res ( str ) Une cha\u00eene est un texte entre guillemets. mot = \"Python\" Quelques op\u00e9rations utiles : Acc\u00e9der \u00e0 une lettre : mot[0] \u2192 \"P\" Conna\u00eetre la longueur : len(mot) \u2192 6 Transformer en majuscules : mot.upper() \u2192 \"PYTHON\" Transformer en minuscules : mot.lower() \u2192 \"python\" print(mot[0]) # P print(len(mot)) # 6 print(mot.upper()) # PYTHON \u26a0\ufe0f Les indices commencent \u00e0 0 en Python. 6. Les listes Une liste permet de stocker plusieurs valeurs. Les listes sont modifiables : on peut ajouter, enlever ou remplacer des \u00e9l\u00e9ments. fruits = [\"pomme\", \"banane\", \"cerise\"] print(fruits[0]) # pomme fruits.append(\"kiwi\") # ajoute \u00e0 la fin print(fruits) # ['pomme', 'banane', 'cerise', 'kiwi'] fruits[1] = \"orange\" # remplace \"banane\" par \"orange\" print(fruits) # ['pomme', 'orange', 'cerise', 'kiwi'] 7. Les tuples Un tuple ressemble \u00e0 une liste, mais il est immuable : on ne peut pas modifier ses valeurs apr\u00e8s sa cr\u00e9ation. coordonnees = (3, 5) print(coordonnees[0]) # 3 \ud83d\udc49 Les tuples sont utiles pour stocker des donn\u00e9es fixes (exemple : une position en 2D). 8. Les conditions ( if , elif , else ) Une condition permet de choisir entre plusieurs actions selon une expression bool\u00e9enne. age = int(input(\"Ton \u00e2ge ? \")) if age < 18: print(\"Tu es mineur\") elif age == 18: print(\"Tout juste majeur !\") else: print(\"Tu es majeur\") \ud83d\udc49 Le mot-cl\u00e9 elif signifie \u00ab sinon si \u00bb. 9. La boucle for La boucle for permet de r\u00e9p\u00e9ter une action sur une s\u00e9quence (liste, cha\u00eene, etc.) ou un certain nombre de fois avec range() . for i in range(5): # r\u00e9p\u00e8te 5 fois (0 \u2192 4) print(\"i =\", i) fruits = [\"pomme\", \"banane\", \"cerise\"] for f in fruits: print(\"J\u2019aime\", f) 10. La boucle while La boucle while r\u00e9p\u00e8te une action tant qu\u2019une condition est vraie . \u26a0\ufe0f Attention : si la condition n\u2019est jamais fausse \u2192 boucle infinie ! n = 0 while n < 3: print(\"n =\", n) n = n + 1 11. Les fonctions Une fonction est un bloc de code r\u00e9utilisable. On la d\u00e9finit avec def , et elle peut renvoyer un r\u00e9sultat avec return . def carre(x): return x * x print(carre(5)) # 25 print(carre(10)) # 100 \ud83d\udc49 Avantages des fonctions : - \u00c9viter les r\u00e9p\u00e9titions - Organiser le code - Le rendre plus lisible \ud83d\udcdd \u00c0 retenir Entr\u00e9es/sorties : print() , input() , int() Types : str (cha\u00eene), list (liste modifiable), tuple (fixe), bool (vrai/faux) Structures de contr\u00f4le : if , for , while Organisation du code : def pour cr\u00e9er des fonctions","title":"R\u00e9visions Python - Premi\u00e8re"},{"location":"Terminales/rappel/#revisions-python-premiere","text":"Ce document reprend les notions essentielles de Python vues en Premi\u00e8re, avec explications, exemples et rappels importants.","title":"R\u00e9visions Python - Premi\u00e8re"},{"location":"Terminales/rappel/#1-affichage-avec-print","text":"La fonction print() permet d\u2019afficher du texte ou des r\u00e9sultats \u00e0 l\u2019\u00e9cran. On peut afficher plusieurs \u00e9l\u00e9ments en les s\u00e9parant par des virgules. print(\"Bonjour\") # affiche : Bonjour print(3 + 5) # affiche : 8 print(\"R\u00e9sultat :\", 3 * 4) # affiche : R\u00e9sultat : 12 \ud83d\udc49 Astuce : print() ajoute automatiquement un retour \u00e0 la ligne \u00e0 la fin de l\u2019affichage.","title":"1. Affichage avec print()"},{"location":"Terminales/rappel/#2-lire-une-valeur-avec-input","text":"La fonction input() permet de demander une saisie \u00e0 l\u2019utilisateur . Le texte entre parenth\u00e8ses est un message affich\u00e9 \u00e0 l\u2019\u00e9cran. \u26a0\ufe0f Attention : la valeur saisie est toujours de type cha\u00eene de caract\u00e8res ( str ). nom = input(\"Quel est ton nom ? \") print(\"Bonjour\", nom)","title":"2. Lire une valeur avec input()"},{"location":"Terminales/rappel/#3-conversion-avec-int","text":"Si l\u2019on veut travailler avec des nombres, il faut convertir la cha\u00eene saisie. La fonction int() transforme une cha\u00eene en entier . age = int(input(\"Quel est ton \u00e2ge ? \")) print(\"Dans 10 ans tu auras\", age + 10) \u26a0\ufe0f Si l\u2019utilisateur tape un texte qui n\u2019est pas un nombre, int() provoque une erreur.","title":"3. Conversion avec int()"},{"location":"Terminales/rappel/#4-les-booleens-true-false","text":"Un bool\u00e9en est un type de donn\u00e9e qui peut avoir deux valeurs seulement : True \u2192 vrai False \u2192 faux Ils apparaissent souvent comme r\u00e9sultat d\u2019une comparaison. a = 5 b = 10 print(a < b) # True (car 5 est plus petit que 10) print(a == b) # False (car 5 n\u2019est pas \u00e9gal \u00e0 10) print(a != b) # True (car 5 est diff\u00e9rent de 10) \ud83d\udc49 On utilise beaucoup les bool\u00e9ens dans les conditions et les boucles.","title":"4. Les bool\u00e9ens (True, False)"},{"location":"Terminales/rappel/#5-les-chaines-de-caracteres-str","text":"Une cha\u00eene est un texte entre guillemets. mot = \"Python\"","title":"5. Les cha\u00eenes de caract\u00e8res (str)"},{"location":"Terminales/rappel/#quelques-operations-utiles","text":"Acc\u00e9der \u00e0 une lettre : mot[0] \u2192 \"P\" Conna\u00eetre la longueur : len(mot) \u2192 6 Transformer en majuscules : mot.upper() \u2192 \"PYTHON\" Transformer en minuscules : mot.lower() \u2192 \"python\" print(mot[0]) # P print(len(mot)) # 6 print(mot.upper()) # PYTHON \u26a0\ufe0f Les indices commencent \u00e0 0 en Python.","title":"Quelques op\u00e9rations utiles :"},{"location":"Terminales/rappel/#6-les-listes","text":"Une liste permet de stocker plusieurs valeurs. Les listes sont modifiables : on peut ajouter, enlever ou remplacer des \u00e9l\u00e9ments. fruits = [\"pomme\", \"banane\", \"cerise\"] print(fruits[0]) # pomme fruits.append(\"kiwi\") # ajoute \u00e0 la fin print(fruits) # ['pomme', 'banane', 'cerise', 'kiwi'] fruits[1] = \"orange\" # remplace \"banane\" par \"orange\" print(fruits) # ['pomme', 'orange', 'cerise', 'kiwi']","title":"6. Les listes"},{"location":"Terminales/rappel/#7-les-tuples","text":"Un tuple ressemble \u00e0 une liste, mais il est immuable : on ne peut pas modifier ses valeurs apr\u00e8s sa cr\u00e9ation. coordonnees = (3, 5) print(coordonnees[0]) # 3 \ud83d\udc49 Les tuples sont utiles pour stocker des donn\u00e9es fixes (exemple : une position en 2D).","title":"7. Les tuples"},{"location":"Terminales/rappel/#8-les-conditions-if-elif-else","text":"Une condition permet de choisir entre plusieurs actions selon une expression bool\u00e9enne. age = int(input(\"Ton \u00e2ge ? \")) if age < 18: print(\"Tu es mineur\") elif age == 18: print(\"Tout juste majeur !\") else: print(\"Tu es majeur\") \ud83d\udc49 Le mot-cl\u00e9 elif signifie \u00ab sinon si \u00bb.","title":"8. Les conditions (if, elif, else)"},{"location":"Terminales/rappel/#9-la-boucle-for","text":"La boucle for permet de r\u00e9p\u00e9ter une action sur une s\u00e9quence (liste, cha\u00eene, etc.) ou un certain nombre de fois avec range() . for i in range(5): # r\u00e9p\u00e8te 5 fois (0 \u2192 4) print(\"i =\", i) fruits = [\"pomme\", \"banane\", \"cerise\"] for f in fruits: print(\"J\u2019aime\", f)","title":"9. La boucle for"},{"location":"Terminales/rappel/#10-la-boucle-while","text":"La boucle while r\u00e9p\u00e8te une action tant qu\u2019une condition est vraie . \u26a0\ufe0f Attention : si la condition n\u2019est jamais fausse \u2192 boucle infinie ! n = 0 while n < 3: print(\"n =\", n) n = n + 1","title":"10. La boucle while"},{"location":"Terminales/rappel/#11-les-fonctions","text":"Une fonction est un bloc de code r\u00e9utilisable. On la d\u00e9finit avec def , et elle peut renvoyer un r\u00e9sultat avec return . def carre(x): return x * x print(carre(5)) # 25 print(carre(10)) # 100 \ud83d\udc49 Avantages des fonctions : - \u00c9viter les r\u00e9p\u00e9titions - Organiser le code - Le rendre plus lisible","title":"11. Les fonctions"},{"location":"Terminales/rappel/#a-retenir","text":"Entr\u00e9es/sorties : print() , input() , int() Types : str (cha\u00eene), list (liste modifiable), tuple (fixe), bool (vrai/faux) Structures de contr\u00f4le : if , for , while Organisation du code : def pour cr\u00e9er des fonctions","title":"\ud83d\udcdd \u00c0 retenir"},{"location":"Terminales/revisions/","text":"Exercices de pratique Python - Terminale Avant de commencer : - Si vous n'avez pas acc\u00e9s \u00e0 un PC, voici un site en ligne : https://www.online-python.com . Il n'existe pas, \u00e0 ma connaissance, d'app IOS pour compiler du Python qui soit totalement gratuite et qui ne n\u00e9cessite pas de connexion internet. - Si vous avez besoin de revoir les bases, retournez dans la section Rappel : Bases de Python . - La correction est ici , \u00e9vitez de regarder la correction avant d'essayer. Exercice 1 : Bonjour ! \u00c9crivez un programme qui : - Demande le pr\u00e9nom de l\u2019utilisateur avec input() . - Affiche un message du type : Bonjour, (pr\u00e9nom) ! Exercice 2 : Op\u00e9rations simples Demandez \u00e0 l\u2019utilisateur deux nombres et affichez : - leur somme, - leur produit, - leur diff\u00e9rence. Exercice 4 : Tuple et liste Cr\u00e9ez un tuple contenant trois mati\u00e8res scolaires. Cr\u00e9ez une liste vide. Demandez \u00e0 l\u2019utilisateur d\u2019ajouter 3 notes (nombres entiers) dans la liste. Affichez la moyenne des notes. Exercice 5 : Boucles \u00c9crivez un programme qui affiche les 10 premiers entiers (de 1 \u00e0 10) au carr\u00e9. Exercice 6 : Conditions Demandez l\u2019\u00e2ge d\u2019un utilisateur : - Si l\u2019\u00e2ge est inf\u00e9rieur \u00e0 12 : affichez \u00ab enfant \u00bb - Si l\u2019\u00e2ge est entre 12 et 17 inclus : affichez \u00ab adolescent \u00bb - Sinon : affichez \u00ab adulte \u00bb. Exercice 7 : Mot de passe Demandez \u00e0 l\u2019utilisateur de saisir un mot de passe. Tant que la saisie est diff\u00e9rente de \"python123\" , redemandez. Affichez ensuite : Mot de passe correct ! Exercice 8 : Fonction simple \u00c9crivez une fonction aire_rectangle(longueur, largeur) qui retourne l\u2019aire d\u2019un rectangle. Demandez \u00e0 l\u2019utilisateur la longueur et la largeur, puis utilisez la fonction pour afficher l\u2019aire. Exercice 9 : Plus grand \u00e9l\u00e9ment \u00c9crivez une fonction max_liste(liste) qui retourne le plus grand \u00e9l\u00e9ment d\u2019une liste. Testez-la sur une liste de nombres que vous aurez d\u00e9finie dans le code. Exercice 10 : Petit projet Demandez \u00e0 l\u2019utilisateur de saisir une liste de notes (tant qu\u2019il ne saisit pas -1 ). Ensuite : 1. Affichez toutes les notes, 2. Calculez la moyenne, 3. Affichez le nombre de notes sup\u00e9rieures ou \u00e9gales \u00e0 la moyenne.","title":"Exercices de pratique Python - Terminale"},{"location":"Terminales/revisions/#exercices-de-pratique-python-terminale","text":"Avant de commencer : - Si vous n'avez pas acc\u00e9s \u00e0 un PC, voici un site en ligne : https://www.online-python.com . Il n'existe pas, \u00e0 ma connaissance, d'app IOS pour compiler du Python qui soit totalement gratuite et qui ne n\u00e9cessite pas de connexion internet. - Si vous avez besoin de revoir les bases, retournez dans la section Rappel : Bases de Python . - La correction est ici , \u00e9vitez de regarder la correction avant d'essayer.","title":"Exercices de pratique Python - Terminale"},{"location":"Terminales/revisions/#exercice-1-bonjour","text":"\u00c9crivez un programme qui : - Demande le pr\u00e9nom de l\u2019utilisateur avec input() . - Affiche un message du type : Bonjour, (pr\u00e9nom) !","title":"Exercice 1 : Bonjour !"},{"location":"Terminales/revisions/#exercice-2-operations-simples","text":"Demandez \u00e0 l\u2019utilisateur deux nombres et affichez : - leur somme, - leur produit, - leur diff\u00e9rence.","title":"Exercice 2 : Op\u00e9rations simples"},{"location":"Terminales/revisions/#exercice-4-tuple-et-liste","text":"Cr\u00e9ez un tuple contenant trois mati\u00e8res scolaires. Cr\u00e9ez une liste vide. Demandez \u00e0 l\u2019utilisateur d\u2019ajouter 3 notes (nombres entiers) dans la liste. Affichez la moyenne des notes.","title":"Exercice 4 : Tuple et liste"},{"location":"Terminales/revisions/#exercice-5-boucles","text":"\u00c9crivez un programme qui affiche les 10 premiers entiers (de 1 \u00e0 10) au carr\u00e9.","title":"Exercice 5 : Boucles"},{"location":"Terminales/revisions/#exercice-6-conditions","text":"Demandez l\u2019\u00e2ge d\u2019un utilisateur : - Si l\u2019\u00e2ge est inf\u00e9rieur \u00e0 12 : affichez \u00ab enfant \u00bb - Si l\u2019\u00e2ge est entre 12 et 17 inclus : affichez \u00ab adolescent \u00bb - Sinon : affichez \u00ab adulte \u00bb.","title":"Exercice 6 : Conditions"},{"location":"Terminales/revisions/#exercice-7-mot-de-passe","text":"Demandez \u00e0 l\u2019utilisateur de saisir un mot de passe. Tant que la saisie est diff\u00e9rente de \"python123\" , redemandez. Affichez ensuite : Mot de passe correct !","title":"Exercice 7 : Mot de passe"},{"location":"Terminales/revisions/#exercice-8-fonction-simple","text":"\u00c9crivez une fonction aire_rectangle(longueur, largeur) qui retourne l\u2019aire d\u2019un rectangle. Demandez \u00e0 l\u2019utilisateur la longueur et la largeur, puis utilisez la fonction pour afficher l\u2019aire.","title":"Exercice 8 : Fonction simple"},{"location":"Terminales/revisions/#exercice-9-plus-grand-element","text":"\u00c9crivez une fonction max_liste(liste) qui retourne le plus grand \u00e9l\u00e9ment d\u2019une liste. Testez-la sur une liste de nombres que vous aurez d\u00e9finie dans le code.","title":"Exercice 9 : Plus grand \u00e9l\u00e9ment"},{"location":"Terminales/revisions/#exercice-10-petit-projet","text":"Demandez \u00e0 l\u2019utilisateur de saisir une liste de notes (tant qu\u2019il ne saisit pas -1 ). Ensuite : 1. Affichez toutes les notes, 2. Calculez la moyenne, 3. Affichez le nombre de notes sup\u00e9rieures ou \u00e9gales \u00e0 la moyenne.","title":"Exercice 10 : Petit projet"},{"location":"Terminales/Chapitres/POO/","text":"Programmation Orient\u00e9e Objet (POO) Introduction La programmation orient\u00e9e objet (POO) est une mani\u00e8re d\u2019organiser un programme en regroupant dans des structures appel\u00e9es classes \u00e0 la fois des donn\u00e9es (attributs) et les actions qui peuvent \u00eatre r\u00e9alis\u00e9es sur ces donn\u00e9es (m\u00e9thodes). Cette approche permet de repr\u00e9senter des concepts de mani\u00e8re claire et structur\u00e9e : chaque objet manipul\u00e9 dans le programme est une instance d\u2019une classe, c\u2019est-\u00e0-dire une version concr\u00e8te du mod\u00e8le d\u00e9fini. La POO facilite la lecture, la r\u00e9utilisation et l\u2019\u00e9volution du code, en rapprochant la logique du programme de la fa\u00e7on dont on d\u00e9crit et organise les choses dans la vie courante. \ud83d\udc49 Exemple concret : - Une classe est comme un mod\u00e8le ou un plan . - Une instance (objet) est un exemplaire concret de ce mod\u00e8le. Exemple La classe Stylo d\u00e9crit ce qu\u2019est un stylo en g\u00e9n\u00e9ral : une couleur d\u2019encre, une longueur, une marque\u2026 Les instances sont des stylos pr\u00e9cis : stylo1 : Bic bleu de 15 cm stylo2 : Pilot noir de 13 cm En Python, on \u00e9crira une classe Stylo , puis on cr\u00e9era plusieurs objets stylo1 , stylo2 , etc. \ud83d\udc49 \u00c0 retenir : Une classe est un mod\u00e8le, une instance est une utilisation concr\u00e8te de ce mod\u00e8le. \u00c9crire une classe en Python Exemple : un rectangle . class Rectangle: def __init__(self, largeur, hauteur): self.largeur = largeur # attribut self.hauteur = hauteur # attribut def aire(self): return self.largeur * self.hauteur # m\u00e9thode def perimetre(self): return 2 * (self.largeur + self.hauteur) # m\u00e9thode Cr\u00e9er une instance (objet) # Cr\u00e9ation de deux rectangles (instances) rect1 = Rectangle(5, 2) rect2 = Rectangle(10, 3) print(rect1.aire()) # 10 print(rect2.perimetre()) # 26 Rectangle est le plan (classe). rect1 et rect2 sont des rectangles concrets (instances). Chaque instance a ses propres valeurs d\u2019attributs. Acc\u00e9der aux attributs et m\u00e9thodes Attributs : print(rect1.largeur) # 5 print(rect2.hauteur) # 3 M\u00e9thodes print(rect1.aire()) # 10 print(rect2.perimetre()) # 26 Exemples suppl\u00e9mentaires class Livre: def __init__(self, titre, auteur, pages): self.titre = titre self.auteur = auteur self.pages = pages def resume(self): return f\"{self.titre}, \u00e9crit par {self.auteur} ({self.pages} pages)\" livre1 = Livre(\"1984\", \"George Orwell\", 328) print(livre1.resume()) # affiche : 1984, \u00e9crit par George Orwell (328 pages) class Animal: def __init__(self, nom, espece, age): self.nom = nom self.espece = espece self.age = age def presentation(self): return \"Je suis \" + str(self.nom) + \" un \" print(self.espece) + \" de \" + str(self.age) + \" ans.\" animal1 = Animal(\"Milo\", \"chat\", 3) animal2 = Animal(\"Rex\", \"chien\", 5) print(animal1.presentation()) # Je suis Milo, un chat de 3 ans. print(animal2.presentation()) # Je suis Rex, un chien de 5 ans. Exercices Exercice 1 Cr\u00e9ez une classe Point qui poss\u00e8de deux attributs x et y correspondant aux coordonn\u00e9es du point. Ces deux attributs doivent \u00eatre affect\u00e9s par le constructeur. Ajoutez une m\u00e9thode affiche() qui affiche les coordonn\u00e9es du point comme ci-dessous (ici, x = 2 et y = 3) : Point | x : 2 | y : 3 Ajoutez une m\u00e9thode translater(tx, ty) qui ajoute tx \u00e0 x et ty \u00e0 y . Exercice 2 Cr\u00e9ez une classe Compte mod\u00e9lisant un compte en banque. La classe poss\u00e8de deux attributs somme et taux correspondant \u00e0 la somme plac\u00e9e sur le compte et au taux d'int\u00e9r\u00eat. Ces deux attributs doivent \u00eatre affect\u00e9s par le constructeur. Ajoutez une m\u00e9thode affiche() qui affiche la somme et le taux comme ci-dessous : Compte | somme : 2000\u20ac | taux : 2% Ajoutez une m\u00e9thode depot(x) qui ajoute x \u00e0 la somme sur le compte. Ajoutez une m\u00e9thode retrait(x) qui enl\u00e8ve x \u00e0 la somme sur le compte. Elle pourra renvoyer une erreur si la somme sur le compte devient n\u00e9gative et annuler alors l'op\u00e9ration. Ajoutez une m\u00e9thode interets() qui calcule les int\u00e9r\u00eats per\u00e7us en un an et les ajoute \u00e0 la somme plac\u00e9e. Pour rappel, les int\u00e9r\u00eats se calculent avec la formule : interets = taux \u00d7 somme / 10 Exercice 3 En vue de faire un site web recensant des citations de films, cr\u00e9ez une classe Citation permettant d'enregistrer le texte de la citation et son film. Cr\u00e9ez une m\u00e9thode affiche() permettant d'afficher la citation de cette fa\u00e7on : Si je connaissais le con qu\u2019a fait sauter le pont ! -- On a retrouv\u00e9 la 7e compagnie Ajoutez deux attributs vote_plus et vote_moins pour enregistrer les votes des utilisateurs sur chaque citation. Ajoutez deux m\u00e9thodes vote_pour() et vote_contre() qui permettent respectivement d'incr\u00e9menter vote_plus et vote_moins . Enfin, ajoutez une m\u00e9thode affiche_votes() qui affiche le nombre de votes pour et le nombre de votes contre la citation. Exercice 4 \u2013 Gestion d\u2019une biblioth\u00e8que simplifi\u00e9e Cr\u00e9ez une classe Livre avec les attributs titre et auteur . Ajoutez une m\u00e9thode affiche() qui affiche un livre de la forme : \"Le Seigneur des Anneaux\" de Tolkien Cr\u00e9ez une classe Bibliotheque qui contient un attribut livres initialis\u00e9 \u00e0 une liste vide. Ajoutez une m\u00e9thode ajoute_livre(livre) qui permet d\u2019ajouter un objet Livre \u00e0 la liste. Ajoutez une m\u00e9thode affiche() qui affiche tous les livres de la biblioth\u00e8que avec un num\u00e9ro devant chacun. Exemple : 1 - \"Le Seigneur des Anneaux\" de Tolkien 2 - \"Vingt mille lieues sous les mers\" de Jules Verne Ajoutez une m\u00e9thode recherche(titre) qui affiche tous les livres dont le titre contient le mot recherch\u00e9. Exercice 5 \u2013 Jeu de d\u00e9s Cr\u00e9ez une classe De avec un attribut faces (par d\u00e9faut 6) et une m\u00e9thode lancer() qui renvoie un nombre al\u00e9atoire entre 1 et faces . Cr\u00e9ez une classe Joueur avec les attributs nom et score (initialis\u00e9 \u00e0 0). Ajoutez une m\u00e9thode jouer(de) qui lance le d\u00e9 pass\u00e9 en param\u00e8tre et ajoute le r\u00e9sultat au score du joueur. Cr\u00e9ez une classe Partie avec les attributs joueurs (liste d\u2019objets Joueur ) et de (un objet De ). Ajoutez une m\u00e9thode tour() qui fait jouer tous les joueurs une fois. Ajoutez une m\u00e9thode vainqueur() qui affiche le nom du joueur avec le plus grand score.","title":"Programmation Orient\u00e9e Objet"},{"location":"Terminales/Chapitres/POO/#programmation-orientee-objet-poo","text":"","title":"Programmation Orient\u00e9e Objet (POO)"},{"location":"Terminales/Chapitres/POO/#introduction","text":"La programmation orient\u00e9e objet (POO) est une mani\u00e8re d\u2019organiser un programme en regroupant dans des structures appel\u00e9es classes \u00e0 la fois des donn\u00e9es (attributs) et les actions qui peuvent \u00eatre r\u00e9alis\u00e9es sur ces donn\u00e9es (m\u00e9thodes). Cette approche permet de repr\u00e9senter des concepts de mani\u00e8re claire et structur\u00e9e : chaque objet manipul\u00e9 dans le programme est une instance d\u2019une classe, c\u2019est-\u00e0-dire une version concr\u00e8te du mod\u00e8le d\u00e9fini. La POO facilite la lecture, la r\u00e9utilisation et l\u2019\u00e9volution du code, en rapprochant la logique du programme de la fa\u00e7on dont on d\u00e9crit et organise les choses dans la vie courante. \ud83d\udc49 Exemple concret : - Une classe est comme un mod\u00e8le ou un plan . - Une instance (objet) est un exemplaire concret de ce mod\u00e8le. Exemple La classe Stylo d\u00e9crit ce qu\u2019est un stylo en g\u00e9n\u00e9ral : une couleur d\u2019encre, une longueur, une marque\u2026 Les instances sont des stylos pr\u00e9cis : stylo1 : Bic bleu de 15 cm stylo2 : Pilot noir de 13 cm En Python, on \u00e9crira une classe Stylo , puis on cr\u00e9era plusieurs objets stylo1 , stylo2 , etc. \ud83d\udc49 \u00c0 retenir : Une classe est un mod\u00e8le, une instance est une utilisation concr\u00e8te de ce mod\u00e8le.","title":"Introduction"},{"location":"Terminales/Chapitres/POO/#ecrire-une-classe-en-python","text":"Exemple : un rectangle . class Rectangle: def __init__(self, largeur, hauteur): self.largeur = largeur # attribut self.hauteur = hauteur # attribut def aire(self): return self.largeur * self.hauteur # m\u00e9thode def perimetre(self): return 2 * (self.largeur + self.hauteur) # m\u00e9thode","title":"\u00c9crire une classe en Python"},{"location":"Terminales/Chapitres/POO/#creer-une-instance-objet","text":"# Cr\u00e9ation de deux rectangles (instances) rect1 = Rectangle(5, 2) rect2 = Rectangle(10, 3) print(rect1.aire()) # 10 print(rect2.perimetre()) # 26 Rectangle est le plan (classe). rect1 et rect2 sont des rectangles concrets (instances). Chaque instance a ses propres valeurs d\u2019attributs.","title":"Cr\u00e9er une instance (objet)"},{"location":"Terminales/Chapitres/POO/#acceder-aux-attributs-et-methodes","text":"Attributs : print(rect1.largeur) # 5 print(rect2.hauteur) # 3 M\u00e9thodes print(rect1.aire()) # 10 print(rect2.perimetre()) # 26","title":"Acc\u00e9der aux attributs et m\u00e9thodes"},{"location":"Terminales/Chapitres/POO/#exemples-supplementaires","text":"class Livre: def __init__(self, titre, auteur, pages): self.titre = titre self.auteur = auteur self.pages = pages def resume(self): return f\"{self.titre}, \u00e9crit par {self.auteur} ({self.pages} pages)\" livre1 = Livre(\"1984\", \"George Orwell\", 328) print(livre1.resume()) # affiche : 1984, \u00e9crit par George Orwell (328 pages) class Animal: def __init__(self, nom, espece, age): self.nom = nom self.espece = espece self.age = age def presentation(self): return \"Je suis \" + str(self.nom) + \" un \" print(self.espece) + \" de \" + str(self.age) + \" ans.\" animal1 = Animal(\"Milo\", \"chat\", 3) animal2 = Animal(\"Rex\", \"chien\", 5) print(animal1.presentation()) # Je suis Milo, un chat de 3 ans. print(animal2.presentation()) # Je suis Rex, un chien de 5 ans. Exercices","title":"Exemples suppl\u00e9mentaires"},{"location":"Terminales/Chapitres/POO/#exercice-1","text":"Cr\u00e9ez une classe Point qui poss\u00e8de deux attributs x et y correspondant aux coordonn\u00e9es du point. Ces deux attributs doivent \u00eatre affect\u00e9s par le constructeur. Ajoutez une m\u00e9thode affiche() qui affiche les coordonn\u00e9es du point comme ci-dessous (ici, x = 2 et y = 3) : Point | x : 2 | y : 3 Ajoutez une m\u00e9thode translater(tx, ty) qui ajoute tx \u00e0 x et ty \u00e0 y .","title":"Exercice 1"},{"location":"Terminales/Chapitres/POO/#exercice-2","text":"Cr\u00e9ez une classe Compte mod\u00e9lisant un compte en banque. La classe poss\u00e8de deux attributs somme et taux correspondant \u00e0 la somme plac\u00e9e sur le compte et au taux d'int\u00e9r\u00eat. Ces deux attributs doivent \u00eatre affect\u00e9s par le constructeur. Ajoutez une m\u00e9thode affiche() qui affiche la somme et le taux comme ci-dessous : Compte | somme : 2000\u20ac | taux : 2% Ajoutez une m\u00e9thode depot(x) qui ajoute x \u00e0 la somme sur le compte. Ajoutez une m\u00e9thode retrait(x) qui enl\u00e8ve x \u00e0 la somme sur le compte. Elle pourra renvoyer une erreur si la somme sur le compte devient n\u00e9gative et annuler alors l'op\u00e9ration. Ajoutez une m\u00e9thode interets() qui calcule les int\u00e9r\u00eats per\u00e7us en un an et les ajoute \u00e0 la somme plac\u00e9e. Pour rappel, les int\u00e9r\u00eats se calculent avec la formule : interets = taux \u00d7 somme / 10","title":"Exercice 2"},{"location":"Terminales/Chapitres/POO/#exercice-3","text":"En vue de faire un site web recensant des citations de films, cr\u00e9ez une classe Citation permettant d'enregistrer le texte de la citation et son film. Cr\u00e9ez une m\u00e9thode affiche() permettant d'afficher la citation de cette fa\u00e7on : Si je connaissais le con qu\u2019a fait sauter le pont ! -- On a retrouv\u00e9 la 7e compagnie Ajoutez deux attributs vote_plus et vote_moins pour enregistrer les votes des utilisateurs sur chaque citation. Ajoutez deux m\u00e9thodes vote_pour() et vote_contre() qui permettent respectivement d'incr\u00e9menter vote_plus et vote_moins . Enfin, ajoutez une m\u00e9thode affiche_votes() qui affiche le nombre de votes pour et le nombre de votes contre la citation.","title":"Exercice 3"},{"location":"Terminales/Chapitres/POO/#exercice-4-gestion-dune-bibliotheque-simplifiee","text":"Cr\u00e9ez une classe Livre avec les attributs titre et auteur . Ajoutez une m\u00e9thode affiche() qui affiche un livre de la forme : \"Le Seigneur des Anneaux\" de Tolkien Cr\u00e9ez une classe Bibliotheque qui contient un attribut livres initialis\u00e9 \u00e0 une liste vide. Ajoutez une m\u00e9thode ajoute_livre(livre) qui permet d\u2019ajouter un objet Livre \u00e0 la liste. Ajoutez une m\u00e9thode affiche() qui affiche tous les livres de la biblioth\u00e8que avec un num\u00e9ro devant chacun. Exemple : 1 - \"Le Seigneur des Anneaux\" de Tolkien 2 - \"Vingt mille lieues sous les mers\" de Jules Verne Ajoutez une m\u00e9thode recherche(titre) qui affiche tous les livres dont le titre contient le mot recherch\u00e9.","title":"Exercice 4 \u2013 Gestion d\u2019une biblioth\u00e8que simplifi\u00e9e"},{"location":"Terminales/Chapitres/POO/#exercice-5-jeu-de-des","text":"Cr\u00e9ez une classe De avec un attribut faces (par d\u00e9faut 6) et une m\u00e9thode lancer() qui renvoie un nombre al\u00e9atoire entre 1 et faces . Cr\u00e9ez une classe Joueur avec les attributs nom et score (initialis\u00e9 \u00e0 0). Ajoutez une m\u00e9thode jouer(de) qui lance le d\u00e9 pass\u00e9 en param\u00e8tre et ajoute le r\u00e9sultat au score du joueur. Cr\u00e9ez une classe Partie avec les attributs joueurs (liste d\u2019objets Joueur ) et de (un objet De ). Ajoutez une m\u00e9thode tour() qui fait jouer tous les joueurs une fois. Ajoutez une m\u00e9thode vainqueur() qui affiche le nom du joueur avec le plus grand score.","title":"Exercice 5 \u2013 Jeu de d\u00e9s"}]}